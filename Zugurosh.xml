<?xml version="1.0" encoding="UTF-8"?>
<WindbotSettings>
    <Healer>
        <SpellHealer enabled="yes">
            <HealRule name="NewHealRule" spell="Salvation" condition="Health Percent below" conditionMin="70" conditionMax="70" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="NewHealRule1" spell="Divine Healing" condition="Health Percent below" conditionMin="80" conditionMax="80" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="NewHealRule2" spell="Intense Healing" condition="Health Percent below" conditionMin="90" conditionMax="90" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </SpellHealer>
        <PotionHealer enabled="yes">
            <HealRule name="NewHealRule" spell="Great Spirit Potion" condition="Health Percent below" conditionMin="65" conditionMax="65" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="SMP" spell="Strong Mana Potion" condition="Mana Percent below" conditionMin="85" conditionMax="85" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </PotionHealer>
        <ConditionHealer enabled="yes">
            <HealRule name="NewHealRule2" spell="Intense Healing" condition="Paralyzed" conditionMin="0" conditionMax="0" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="NewHealRule1" spell="Haste" condition="Not Hasted" conditionMin="0" conditionMax="0" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </ConditionHealer>
        <ManaTrainer manaTrainCondition="Mana Percent above" manaTrainMin="87" manaTrainMax="93" enabled="yes"/>
    </Healer>
    <Scripter>
        <HotkeyScripts/>
        <PersistentScripts>
            <PersistentScript name="variables" script="init start&#10;keepring = false&#10;running = false&#10;zuguatacked = false&#10;linia = &quot;south&quot;&#10;init end&#10;auto(500)&#10;mptype = &quot;strong mana potion&quot;&#10;keephaste = getuseroption('keephaste')&#10;takeammofromdp = getuseroption('takeammofromdp')&#10;usealertonspawn = getuseroption('usealertonspawn')&#10;traymessages = getuseroption('traymessages')&#10;&#10;pvpe = getuseroption('pvpe')&#10;&#10;&#10;&#10;mainbp = getuseroption('mainbp')&#10;ammobp = getuseroption('ammobp')&#10;potionbp = getuseroption('potionbp')&#10;lootbp = getuseroption('lootbp')&#10;maindpbp = getuseroption('maindpbp')&#10;stackdpbp = getuseroption('stackdpbp')&#10;raredpbp = getuseroption('raredpbp')&#10;ringdpbp = getuseroption('ringdpbp')&#10;ammodpbp = getuseroption('ammodpbp')&#10;&#10;&#10;&#10;&#10;maxsmp = getuseroption('maxsmp')&#10;minsmp = getuseroption('minsmp')&#10;maxgsp = getuseroption('maxgsp')&#10;mingsp = getuseroption('mingsp')&#10;maxew = getuseroption('maxew')&#10;minew = getuseroption('minew')&#10;ammotype = getuseroption('ammotype')&#10;maxammo = getuseroption('maxammo')&#10;minammo = getuseroption('minammo')&#10;mincap = getuseroption('mincap')&#10;&#10;" enabled="yes"/>
            <PersistentScript name="functions" script="function walk() &#10;walkdone = true&#10;setsetting('Cavebot/Enabled', 'no')&#10;end&#10;&#10;&#10;&#10;function checkewall(ew)&#10;&#10;local count = 0&#10;for o = -3,3 do&#10;&#9;if topitem((ewallpos[ew].x)+o,ewallpos[ew].y,$posz).id ~=  2135 and topitem((ewallpos[ew].x)+o,ewallpos[ew].y,$posz).id ~=  2122 then&#10;count = count + 1&#10;&#9;end&#10;end&#10;if count &gt;= 1 then&#10;dontshootspell = true&#10;if $posx == ewallpos[ew].x then&#10;&#10;for i=1,10 do&#10;&#9;if topitem((ewallpos[ew].x),ewallpos[ew].y,$posz).id ~=  2135 and topitem((ewallpos[ew].x),ewallpos[ew].y,$posz).id ~=  2122 then&#10;pausewalking(120)&#10;wait(100)&#10;&#9;useitemon(itemid('energy wall rune'), 0, ground(ewallpos[ew].x, ewallpos[ew].y, $posz))&#10;end&#10;&#9;end&#10;end&#10;&#10;else&#10;&#10;dontshootspell = false&#10;end&#10;&#10;&#10;end&#10;&#10;function depot()&#10;setsetting('Looting/OpenNextBP', 'no')&#10;closewindows()&#10;wait(2000)&#10;while windowcount() &lt; 2 do&#10;closewindows()&#10;wait(500,1200)&#10;openitem(mainbp, &quot;back&quot;, true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;openitem(lootbp,mainbp,true)&#10;wait(500,1200)&#10;resizewindows()&#10;end&#10;&#10;&#10;while windowcount(&quot;Depot Chest&quot;) == 0 do&#10;&#9;opendepot()&#10;&#9;wait(500)&#10;end&#10;&#10;&#10;while windowcount(lootbp) == 0 do&#10;openitem(lootbp,mainbp,true)&#10;wait(300)&#10;end&#10;&#10;&#10;while windowcount(maindpbp) == 0 do &#10;openitem(maindpbp, &quot;Depot Chest&quot;) &#10;wait(300,500) &#10;resizewindows(1000,maindpbp) &#10;wait(300,500) &#10;end &#10;&#10;&#10;&#10;setsetting('Looting/OpenNextBP', 'no')&#10;waitping()&#10;&#10;&#10;local CONFIG = {&#10;    LOOT_BACKPACK = lootbp,&#10;    MAIN_DP_BACKPACK = maindpbp,&#10;    STACKABLE_BACKPACK = stackdpbp,&#10;    NOT_STACKABLE_BACKPACK = raredpbp,&#10;}&#10; &#10;clearlastonto()&#10; &#10;while (true) do&#10;&#9;foreach lootingitem ITEM_ENTRY do&#10;if ITEM_ENTRY.id == 3035 then&#10;else&#10;&#9;&#9;while (itemcount(ITEM_ENTRY.id, CONFIG.LOOT_BACKPACK) &gt; 0) do&#10;&#10;&#9;&#9;&#9;if (itemproperty(ITEM_ENTRY.id, ITEM_STACKABLE)) then&#10;&#9;&#9;&#9;&#9;moveitemsonto(ITEM_ENTRY.id, CONFIG.STACKABLE_BACKPACK, 1, CONFIG.MAIN_DP_BACKPACK, CONFIG.LOOT_BACKPACK) wait(300,400)&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;moveitemsonto(ITEM_ENTRY.id, CONFIG.NOT_STACKABLE_BACKPACK, $lastonto, CONFIG.MAIN_DP_BACKPACK, CONFIG.LOOT_BACKPACK) wait(300,400)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;end&#10;end&#10;&#10; &#10;    if (itemcount(CONFIG.LOOT_BACKPACK, CONFIG.LOOT_BACKPACK) &gt; 0) then&#10;        openitem(CONFIG.LOOT_BACKPACK, CONFIG.LOOT_BACKPACK, false) waitcontainer(CONFIG.LOOT_BACKPACK, false)&#10;    else&#10;        break&#10;    end&#10; &#10;    wait(100)&#10;end&#10;&#10;--if refills &gt;= roundstosell then&#10;--refills = 0&#10;--end&#10;&#10;::takering::&#10;closewindows()&#10;wait(2000)&#10;while windowcount() &lt; 1 do&#10;closewindows()&#10;wait(500,1200)&#10;openitem(mainbp, &quot;back&quot;, true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;end&#10;&#10;while windowcount(&quot;Depot Chest&quot;) == 0 do&#10;&#9;opendepot()&#10;&#9;wait(500)&#10;end&#10;&#10;while windowcount(ringdpbp) == 0 do &#10;openitem(ringdpbp, &quot;Depot Chest&quot;) &#10;wait(300,500) &#10;resizewindows(1000,ringdpbp) &#10;wait(300,500) &#10;end &#10;if itemcount(&quot;dwarven ring&quot;,mainbp) &lt; 2 then&#10;if itemcount(&quot;dwarven ring&quot;,ringdpbp) &gt; 0 then&#10;moveitems(&quot;dwarven ring&quot;,mainbp,ringdpbp,1)&#10;moveitems(&quot;dwarven ring&quot;,mainbp,ringdpbp,1)&#10;end&#10;end&#10;&#10;if itemcount(&quot;dwarven ring&quot;,mainbp) &lt; 2 then&#10;goto takering&#10;end&#10;&#10;-- take ammo&#10;&#10;if takeammofromdp then&#10;closewindows()&#10;wait(2000)&#10;while windowcount() &lt; 2 do&#10;closewindows()&#10;wait(500,1200)&#10;openitem(mainbp, &quot;back&quot;, true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;openitem(ammobp,mainbp, true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;end&#10;while windowcount(&quot;Depot Chest&quot;) == 0 do&#10;&#9;opendepot()&#10;&#9;wait(500)&#10;end&#10;&#10;while windowcount(ammodpbp) == 0 do &#10;openitem(ammodpbp, &quot;Depot Chest&quot;) &#10;wait(300,500) &#10;resizewindows(1000,ammodpbp) &#10;wait(300,500) &#10;end &#10;::tryammoagain::&#10;if itemcount(ammotype,ammobp) &lt; maxammo and (itemcount(ammotype,ammodpbp) &gt; 1 or itemcount(ammodpbp,ammodpbp) &gt; 0) then&#10;if itemcount(ammotype,ammodpbp) &lt; 1 and itemcount(ammodpbp,ammodpbp) &gt; 0 then&#10;openitem(ammodpbp, ammodpbp, false)&#10;waitping()&#10;end&#10;if itemcount(ammotype,ammodpbp) &gt; 1 then&#10;moveitems(ammotype, ammobp, ammodpbp,100)&#10;waitping()&#10;end&#10;&#10;goto tryammoagain&#10;&#10;end&#10;end&#10;&#10;&#10;&#10;--[[&#10;if refills == 0 then&#10;if sellitemsonmarket then&#10;while not $marketopen do&#10;wait(600)&#10;openmarket()&#10;wait(1600)&#10;end&#10;&#10;&#10;for _,market in ipairs(itemsonmarket) do&#10;if market.item then&#10;sellitemsmarket( market.itemname,  market.price ,  9999 ,  createnewoffer ,  true ) &#10;end&#10;end&#10;]]--&#10;&#10;&#10;--waitping()&#10;--closemarket()&#10;--end&#10;--end&#10;end&#10;&#10;function withdrawmoney()&#10;closewindows()&#10;wait(2000)&#10;while windowcount() &lt; 2 do&#10;closewindows()&#10;wait(500,1200)&#10;openitem(mainbp, &quot;back&quot;, true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;openitem(potionbp,mainbp,true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;&#10;end&#10;&#10;Mana = math.positive(maxsmp - itemcount(mptype)) * itemcost(mptype)&#10;EWALL = math.positive(maxew - itemcount(&quot;energy wall rune&quot;)) * itemcost(&quot;energy wall rune&quot;)&#10;Total = math.ceil(Mana + EWALL, 10000) + 10000&#10;&#10;&#10;&#10;&#9;npctalk(&quot;hi&quot;,&quot;deposit all&quot;,&quot;yes&quot;, &quot;withdraw &quot;..Total, &quot;yes&quot;, &quot;balance&quot;)&#10;&#10;end&#10;&#10;&#10;function suppshop()&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(potionbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end&#10;&#10;sellflasks()&#10;&#10;&#10;--MANAS&#10;amount1 = tonumber(maxsmp) - itemcount(mptype)&#10;while amount1 &gt; 0 and islocation(1) do &#10;&#9;buyitems(mptype, amount1) &#10;&#9;waitping(2,3)&#10;&#9;&#9;moveitems(mptype,potionbp, mainbp) &#10;&#10;&#9;waitping(2,3)&#10;&#9;amount1 = amount1-100&#10;end&#10;&#10;--MANAS&#10;local gsp = &quot;great spirit potion&quot;&#10;amount2 = tonumber(maxgsp) - itemcount(gsp)&#10;while amount2 &gt; 0 and islocation(1) do &#10;&#9;buyitems(gsp, amount2) &#10;&#9;waitping(2,3)&#10;&#9;&#9;moveitems(gsp,potionbp, mainbp) &#10;&#10;&#9;waitping(2,3)&#10;&#9;amount2 = amount2-100&#10;&#10;end&#10;end&#10;&#10;&#10;&#10;function ammoshop()&#10;&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(ammobp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end&#10;&#10;::opentradeagainammo::&#10;if not ischannel('NPCs') then&#10;say('hi')&#10;wait(1500)&#10;else&#10;npcsay('hi')&#10;wait(300)&#10;end&#10;&#10;npcsay(&quot;trade&quot;)&#10;wait(1000)&#10;&#10;if not $tradeopen then&#10;goto opentradeagainammo&#10;end&#10;&#10;amount1 = tonumber(maxammo) - itemcount(ammotype)&#10;while amount1 &gt; 0 and islocation(1) do &#10;&#9;buyitems(ammotype, amount1) &#10;&#9;waitping(2,3)&#10;&#9;&#9;moveitems(ammotype,ammobp, mainbp) &#10;&#9;waitping(2,3)&#10;&#9;amount1 = amount1-100&#10;end&#10;end&#10;&#10;function buyrune(runetype,max)&#10;&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(ammobp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end&#10;&#10;::opentradeagainammo::&#10;if not ischannel('NPCs') then&#10;say('hi')&#10;wait(1500)&#10;else&#10;npcsay('hi')&#10;wait(300)&#10;end&#10;&#10;npcsay(&quot;trade&quot;)&#10;wait(1000)&#10;&#10;if not $tradeopen then&#10;goto opentradeagainammo&#10;end&#10;&#10;amount6 = tonumber(max) - itemcount(runetype)&#10;while amount6 &gt; 0 and islocation(1) do &#10;&#9;buyitems(runetype, amount6) &#10;&#9;waitping(2,3)&#10;&#9;&#9;moveitems(runetype,ammobp, mainbp) &#10;&#9;waitping(2,3)&#10;&#9;amount6 = amount6-100&#10;end&#10;end&#10;&#10;function bpsforhunt()&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 4 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(ammobp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(potionbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(lootbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;&#10;&#10;end&#10;end" enabled="yes"/>
            <PersistentScript name="scripts" script="init start&#10;pinge = false&#10;&#10;init end&#10;auto(100)&#10;&#10;if running then&#10;if $standtime &gt; 2000 then&#10;setsetting('Targeting/Enabled', 'yes')&#10;else&#10;setsetting('Targeting/Enabled', 'no')&#10;end&#10;end&#10;&#10;&#10;&#10;if $attacked.name == &quot;Zugurosh&quot; and $wptsection ~= &quot;Leave&quot; then&#10;if $attacked.hppc &lt;= 2 then&#10;setsetting('Targeting/Enabled', 'yes')&#10;if $attacked.dist &gt; 1  and $attacked.dist &lt; 4 then&#10;setsetting('Targeting/Creatures/Zugurosh/Setting1/Stance', 'No Movement')&#10;else&#10;setsetting('Targeting/Creatures/Zugurosh/Setting1/Stance', 'Keep Away')&#10;end&#10;&#10;else&#10;setsetting('Targeting/Enabled', 'no')&#10;if $standtime &gt; 2000 then&#10;gotolabel(000,&quot;South Linia&quot;)&#10;walkdone = true&#10;setsetting('Cavebot/Enabled', 'yes')&#10;end&#10;end&#10;end&#10;&#10;if $ping &gt; 1000 and not pinge and $wptsection ~= &quot;Leave&quot; and $wptsection ~= &quot;Refill&quot; then&#10;traymessage(&quot;Zugu!&quot;, &quot;Hey your ping is above 1000 ms please stop bot and fix your connection to avoid death&quot;)&#10;pinge = true&#10;gotolabel(&quot;Leave&quot;,&quot;Leave&quot;)&#10;end&#10;&#10;&#10;if $wptsection == &quot;Hunt&quot; or  $wptsection == &quot;South Linia&quot; or $wptsection == &quot;North Linia&quot; then&#10;keepring = false&#10;running = false&#10;end&#10;&#10;if $wptsection == &quot;South Linia&quot; or $wptsection == &quot;North Linia&quot; and $standtime &gt; 2000 then&#10;walkdone = true&#10;end&#10;&#10;if maround(10,&quot;Zugurosh&quot;) &gt; 0 and $attacked.id == 0 then&#10;attack(&quot;Zugurosh&quot;)&#10;end&#10;&#10;if maround(10,&quot;Zugurosh&quot;) &lt; 1 and $attacked.id == 0 and $standtime &gt; 4000 and ($wptsection == &quot;North Linia&quot; or $wptsection == &quot;South Linia&quot; or $wptsection == &quot;Hunt&quot;) then&#10;gotolabel(&quot;start&quot;,&quot;Hunt&quot;)&#10;setsetting('Cavebot/Enabled', 'yes')&#10;setsetting('Looting/Enabled', 'yes')&#10;end&#10;&#10;&#10;&#10;&#10;if $attacked.name == &quot;Zugurosh&quot; and ($wptsection == &quot;Hunt&quot; or $wptsection == &quot;Refill&quot;) then&#10;gotolabel(000,&quot;South Linia&quot;)&#10;linia = &quot;south&quot;&#10;end&#10;&#10;&#10;if running then&#10;if $standtime &gt; 500 then&#10;if cancast(&quot;exevo mas san&quot;) then&#10;cast(&quot;exevo mas san&quot;)&#10;end&#10;end&#10;end&#10;&#10;if keepring then&#10;if $finger.id ~= 3099 then&#10;equipitem(3099,'finger')&#10;end&#10;else&#10;if $finger.id == 3099 then&#10;moveitems(3099,mainbp,'finger')&#10;end&#10;end&#10;" enabled="yes"/>
            <PersistentScript name="Runnning" script="init start&#10;local ny = 31688&#10;local sy = 31690&#10;local ly = 31689 &#10;wlewo = false&#10;wpttomove = 0&#10;init end&#10;&#10;&#10;&#10;&#10;auto(50)&#10;&#10;&#10;if $wptsection == &quot;South Linia&quot; then&#10;linia = &quot;south&quot;&#10;elseif $wptsection == &quot;North Linia&quot; then&#10;linia = &quot;north&quot;&#10;end&#10;&#10;&#10;cre = getcreature(&quot;Zugurosh&quot;)&#10;&#10;if walkdone and cre.hppc &gt; 2 then --and $attacked.name == &quot;Elerth Dird&quot; then&#10;&#10;if cre.onscreen then&#10;if cre.dist &lt; 5 then&#10;&#10;&#10;ay = cre.posy&#10;ax = cre.posx&#10;&#10;if linia == &quot;north&quot; then&#10;&#9;if ay &lt; ly then&#10;&#9;&#9;&#9;gotolabel(&quot;a&quot;..$posx,&quot;South Linia&quot;)&#10;setsetting('Cavebot/Enabled', 'yes')&#10;&#9;&#9;&#9;walkdone = false&#10;&#9;elseif ay == ly then&#10;&#9;&#9;if ax &lt; $posx then&#10;print(&quot;jest na lewo north linia&quot;)&#10;&#9;&#9;&#9;if $wptid == 37 then&#10;wait(1000)&#10;&#9;&#9;&#9;wpttomove = $posx - 4&#10;&#9;&#9;&#9;gotolabel(&quot;a&quot;..wpttomove)&#10;&#9;&#9;&#9;walkdone = false&#10;setsetting('Cavebot/Enabled', 'yes')&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;wpttomove = $posx + 1&#10;&#9;&#9;&#9;gotolabel(&quot;a&quot;..wpttomove)&#10;&#9;&#9;&#9;walkdone = false&#10;setsetting('Cavebot/Enabled', 'yes')&#10;&#9;&#9;&#9;end&#10;&#9;&#9;else&#10;&#10;print(&quot;jest na prawo south linia&quot;)&#10;&#9;&#9;&#9;if $wptid == 1 then&#10;wait(1000)&#10;&#9;&#9;&#9;wpttomove = $posx + 4&#10;&#9;&#9;&#9;gotolabel(&quot;a&quot;..wpttomove)&#10;&#9;&#9;&#9;walkdone = false&#10;setsetting('Cavebot/Enabled', 'yes')&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;wpttomove = $posx - 2&#10;&#9;&#9;&#9;gotolabel(&quot;a&quot;..wpttomove)&#10;&#9;&#9;&#9;walkdone = false&#10;setsetting('Cavebot/Enabled', 'yes')&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;else&#10;--&#10;&#9;end&#10;else&#10;&#9;if ay &gt; ly then&#10;&#9;&#9;&#9;gotolabel(&quot;a&quot;..$posx,&quot;North Linia&quot;)&#10;setsetting('Cavebot/Enabled', 'yes')&#10;&#9;&#9;&#9;walkdone = false&#10;&#9;elseif ay == ly then&#10;&#9;&#9;if ax &lt; $posx then&#10;print(&quot;jest na lewo south linia&quot;)&#10;&#9;&#9;&#9;if $wptid == 37 then&#10;wait(1000)&#10;&#9;&#9;&#9;wpttomove = $posx - 3&#10;&#9;&#9;&#9;gotolabel(&quot;a&quot;..wpttomove)&#10;&#9;&#9;&#9;walkdone = false&#10;setsetting('Cavebot/Enabled', 'yes')&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;wpttomove = $posx + 1&#10;&#9;&#9;&#9;gotolabel(&quot;a&quot;..wpttomove)&#10;&#9;&#9;&#9;walkdone = false&#10;setsetting('Cavebot/Enabled', 'yes')&#10;&#9;&#9;&#9;end&#10;&#9;&#9;else&#10;print(&quot;jest na prawo south linia&quot;)&#10;&#9;&#9;&#9;if $wptid == 1 then&#10;wait(1000)&#10;&#9;&#9;&#9;wpttomove = $posx + 4&#10;&#9;&#9;&#9;gotolabel(&quot;a&quot;..wpttomove)&#10;&#9;&#9;&#9;walkdone = false&#10;setsetting('Cavebot/Enabled', 'yes')&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;wpttomove = $posx - 2&#10;&#9;&#9;&#9;gotolabel(&quot;a&quot;..wpttomove)&#10;&#9;&#9;&#9;walkdone = false&#10;setsetting('Cavebot/Enabled', 'yes')&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;else&#10;--&#10;&#9;end&#10;&#10;&#10;end&#10;&#10;&#10;&#10;&#10;end&#10;end&#10;end&#10;" enabled="yes"/>
            <PersistentScript name="positionsfbomb" script="init start&#10;ewallpos = {&#10;{&#10;x = 33126,&#10;y = 31689&#10;},&#10;{&#10;x = 33133,&#10;y = 31689&#10;},&#10;{&#10;x = 33140,&#10;y = 31689&#10;}&#10;}&#10;init end" enabled="yes"/>
            <PersistentScript name="LowPriorityScr" script="auto(1000)&#10;&#10;if not running then&#10;if getuseroption('ammobp') == getuseroption('potionbp') then&#10;setuseroption('potionbp', 'Brown Backpack')&#10;end&#10;if ammotype == &quot;Infernal Bolt&quot; then&#10;showuseroption('infoammob',true)&#10;setsetting('Looting/LootList/infernal bolt/LootingDestination', 'ammobp')&#10;else&#10;showuseroption('infoammob',false)&#10;setsetting('Looting/LootList/infernal bolt/LootingDestination', 'lootbp')&#10;end&#10;&#10;if pvpe then&#10;if not $pzone then&#10;setsetting('Cavebot/WalkThroughPlayers', 'no')&#10;else&#10;setsetting('Cavebot/WalkThroughPlayers', 'yes')&#10;end&#10;else&#10;setsetting('Cavebot/WalkThroughPlayers', 'yes')&#10;end&#10;&#10;if itemcount(mptype) &lt; minsmp or itemcount(&quot;energy wall rune&quot;) &lt; minew or itemcount(ammotype) &lt; minammo then&#10;havesupply = false&#10;else&#10;havesupply = true&#10;end&#10;&#10;if $cap &gt; mincap then&#10;havecap = true&#10;else&#10;havecap = false&#10;end&#10;&#10;if not havesupply or not havecap then&#10;if $wptsection == &quot;Hunt&quot; or $wptsection == &quot;North Linia&quot; or $wptsection == &quot;South Linia&quot; then&#10;gotolabel(&quot;Leave&quot;,&quot;Leave&quot;)&#10;setsetting('Cavebot/Enabled', 'yes')&#10;end&#10;end&#10;&#10;&#10;&#10;if maround(10, &quot;Zugurosh&quot;) == 0 then&#10;unrust(true, true, 500)&#10;end&#10;&#10;&#10;setlootingdestination('mainbp', mainbp)&#10;setlootingdestination('lootbp', lootbp)&#10;setlootingdestination('ammobp', ammobp)&#10;setlootingdestination('potionbp', potionbp)&#10;setlootingdestination('maindpbp', maindpbp)&#10;setlootingdestination('stackdpbp', stackdpbp)&#10;setlootingdestination('raredpbp', raredpbp)&#10;setlootingdestination('ammodpbp', ammodpbp)&#10;&#10;if $belt.count &lt; 50 then&#10;equipitem(ammotype, 'belt')&#10;end&#10;&#10;if keephaste then&#10;setsetting('ConditionHealer/Rules/NewHealRule1/Enabled', 'yes')&#10;else&#10;setsetting('ConditionHealer/Rules/NewHealRule1/Enabled', 'no')&#10;end&#10;end&#10;&#10;if not running then&#10;&#10;sellitemsonmarket = getuseroption('Sell Items On Market')&#10;&#10;sellsoulorb  = getuseroption('sellsoulorb')&#10;sellgreatspiritpotion  = getuseroption('sellgreatspiritpotion')&#10;sellredpieceofcloth  = getuseroption('sellredpieceofcloth')&#10;sellgreenpieceofcloth  = getuseroption('sellgreenpieceofcloth')&#10;selldemonhorn  = getuseroption('selldemonhorn')&#10;sellgreathealthpotion  = getuseroption('sellgreathealthpotion')&#10;selldemonicessence  = getuseroption('selldemonicessence')&#10;sellbluepieceofcloth  = getuseroption('sellbluepieceofcloth')&#10;sellyellowpieceofcloth  = getuseroption('sellyellowpieceofcloth')&#10;sellbootsofhaste  = getuseroption('sellbootsofhaste')&#10;sellstoneskinamulet  = getuseroption('sellstoneskinamulet')&#10;sellgreatmanapotion  = getuseroption('sellgreatmanapotion')&#10;sellultimatehealthpotion  = getuseroption('sellultimatehealthpotion')&#10;selljewelcase  = getuseroption('selljewelcase')&#10;sellwhitepieceofcloth  = getuseroption('sellwhitepieceofcloth')&#10;sellbrownpieceofcloth  = getuseroption('sellbrownpieceofcloth')&#10;sellamuletofloss  = getuseroption('sellamuletofloss')&#10;sellbluegem  = getuseroption('sellbluegem')&#10;sellsteelboots  = getuseroption('sellsteelboots')&#10;sellgoldenboots  = getuseroption('sellgoldenboots')&#10;&#10;&#10;priceitemsonmarket = getuseroption('price Items On Market')&#10;pricesoulorb  = getuseroption('pricesoulorb')&#10;pricegreatspiritpotion  = getuseroption('pricegreatspiritpotion')&#10;priceredpieceofcloth  = getuseroption('priceredpieceofcloth')&#10;pricegreenpieceofcloth  = getuseroption('pricegreenpieceofcloth')&#10;pricedemonhorn  = getuseroption('pricedemonhorn')&#10;pricegreathealthpotion  = getuseroption('pricegreathealthpotion')&#10;pricedemonicessence  = getuseroption('pricedemonicessence')&#10;pricebluepieceofcloth  = getuseroption('pricebluepieceofcloth')&#10;priceyellowpieceofcloth  = getuseroption('priceyellowpieceofcloth')&#10;pricebootsofhaste  = getuseroption('pricebootsofhaste')&#10;pricestoneskinamulet  = getuseroption('pricestoneskinamulet')&#10;pricegreatmanapotion  = getuseroption('pricegreatmanapotion')&#10;priceultimatehealthpotion  = getuseroption('priceultimatehealthpotion')&#10;pricejewelcase  = getuseroption('pricejewelcase')&#10;pricewhitepieceofcloth  = getuseroption('pricewhitepieceofcloth')&#10;pricebrownpieceofcloth  = getuseroption('pricebrownpieceofcloth')&#10;priceamuletofloss  = getuseroption('priceamuletofloss')&#10;pricebluegem  = getuseroption('pricebluegem')&#10;pricesteelboots  = getuseroption('pricesteelboots')&#10;pricegoldenboots  = getuseroption('pricegoldenboots')&#10;&#10;&#10;&#10;itemsonmarket = {&#10;{item = sellsoulorb, price = pricesoulorb, itemname = &quot;soul orb&quot;},&#10;{item = sellgreatspiritpotion, price = pricegreatspiritpotion, itemname = &quot;great spirit potion&quot;},&#10;{item = sellredpieceofcloth, price = priceredpieceofcloth, itemname = &quot;red piece of cloth&quot;},&#10;{item = sellgreenpieceofcloth, price = pricegreenpieceofcloth, itemname = &quot;green piece of cloth&quot;},&#10;{item = selldemonhorn, price = pricedemonhorn, itemname = &quot;demon horn&quot;},&#10;{item = sellgreathealthpotion, price = pricegreathealthpotion, itemname = &quot;great health potion&quot;},&#10;{item = selldemonicessence, price = pricedemonicessence, itemname = &quot;demonic essence&quot;},&#10;{item = sellbluepieceofcloth, price = pricebluepieceofcloth, itemname = &quot;blue piece of cloth&quot;},&#10;{item = sellyellowpieceofcloth, price = priceyellowpieceofcloth, itemname = &quot;yellow piece of cloth&quot;},&#10;{item = sellbootsofhaste, price = pricebootsofhaste, itemname = &quot;boots of haste&quot;},&#10;{item = sellstoneskinamulet, price = pricestoneskinamulet, itemname = &quot;stone skin amulet&quot;},&#10;{item = sellgreatmanapotion, price = pricegreatmanapotion, itemname = &quot;great mana potion&quot;},&#10;{item = sellultimatehealthpotion, price = priceultimatehealthpotion, itemname = &quot;ultimate health potion&quot;},&#10;{item = selljewelcase, price = pricejewelcase, itemname = &quot;jewel case&quot;},&#10;{item = sellwhitepieceofcloth, price = pricewhitepieceofcloth, itemname = &quot;white piece of cloth&quot;},&#10;{item = sellbrownpieceofcloth, price = pricebrownpieceofcloth, itemname = &quot;brown piece of cloth&quot;},&#10;{item = sellamuletofloss, price = priceamuletofloss, itemname = &quot;amulet of loss&quot;},&#10;{item = sellbluegem, price = pricebluegem, itemname = &quot;blue gem&quot;},&#10;{item = sellsteelboots, price = pricesteelboots, itemname = &quot;steel boots&quot;},&#10;{item = sellgoldenboots, price = pricegoldenboots, itemname = &quot;golden boots&quot;},&#10;&#10;&#10;&#10;}&#10;&#10;&#10;if sellitemsonmarket then&#10;&#10;showuseroption('Enable checkbox to see market items list',false)&#10;showuseroption('Market Prices',true)&#10;showuseroption('sellsoulorb',true)&#10;showuseroption('sellgreatspiritpotion',true)&#10;showuseroption('sellredpieceofcloth',true)&#10;showuseroption('sellgreenpieceofcloth',true)&#10;showuseroption('selldemonhorn',true)&#10;showuseroption('sellgreathealthpotion',true)&#10;showuseroption('selldemonicessence',true)&#10;showuseroption('sellbluepieceofcloth',true)&#10;showuseroption('sellyellowpieceofcloth',true)&#10;showuseroption('sellbootsofhaste',true)&#10;showuseroption('sellstoneskinamulet',true)&#10;showuseroption('sellgreatmanapotion',true)&#10;showuseroption('sellultimatehealthpotion',true)&#10;showuseroption('selljewelcase',true)&#10;showuseroption('sellwhitepieceofcloth',true)&#10;showuseroption('sellbrownpieceofcloth',true)&#10;showuseroption('sellamuletofloss',true)&#10;showuseroption('sellbluegem',true)&#10;showuseroption('sellsteelboots',true)&#10;showuseroption('sellgoldenboots',true)&#10;else&#10;showuseroption('Enable checkbox to see market items list',true)&#10;showuseroption('Market Prices',false)&#10;showuseroption('sellsoulorb',false)&#10;showuseroption('sellgreatspiritpotion',false)&#10;showuseroption('sellredpieceofcloth',false)&#10;showuseroption('sellgreenpieceofcloth',false)&#10;showuseroption('selldemonhorn',false)&#10;showuseroption('sellgreathealthpotion',false)&#10;showuseroption('selldemonicessence',false)&#10;showuseroption('sellbluepieceofcloth',false)&#10;showuseroption('sellyellowpieceofcloth',false)&#10;showuseroption('sellbootsofhaste',false)&#10;showuseroption('sellstoneskinamulet',false)&#10;showuseroption('sellgreatmanapotion',false)&#10;showuseroption('sellultimatehealthpotion',false)&#10;showuseroption('selljewelcase',false)&#10;showuseroption('sellwhitepieceofcloth',false)&#10;showuseroption('sellbrownpieceofcloth',false)&#10;showuseroption('sellamuletofloss',false)&#10;showuseroption('sellbluegem',false)&#10;showuseroption('sellsteelboots',false)&#10;showuseroption('sellgoldenboots',false)&#10;&#10;end&#10;&#10;if sellsoulorb  then  &#10;showuseroption('pricesoulorb',true)&#10;else&#10;showuseroption('pricesoulorb',false)&#10;end &#10;if sellgreatspiritpotion  then  &#10;showuseroption('pricegreatspiritpotion',true)&#10;else&#10;showuseroption('pricegreatspiritpotion',false)&#10;end &#10;if sellredpieceofcloth  then  &#10;showuseroption('priceredpieceofcloth',true)&#10;else&#10;showuseroption('priceredpieceofcloth',false)&#10;end &#10;if sellgreenpieceofcloth  then  &#10;showuseroption('pricegreenpieceofcloth',true)&#10;else&#10;showuseroption('pricegreenpieceofcloth',false)&#10;end &#10;if selldemonhorn  then  &#10;showuseroption('pricedemonhorn',true)&#10;else&#10;showuseroption('pricedemonhorn',false)&#10;end&#10;if sellgreathealthpotion  then  &#10;showuseroption('pricegreathealthpotion',true)&#10;else&#10;showuseroption('pricegreathealthpotion',false)&#10;end &#10;if selldemonicessence  then  &#10;showuseroption('pricedemonicessence',true)&#10;else&#10;showuseroption('pricedemonicessence',false)&#10;end &#10;if sellbluepieceofcloth  then  &#10;showuseroption('pricebluepieceofcloth',true)&#10;else&#10;showuseroption('pricebluepieceofcloth',false)&#10;end &#10;if sellyellowpieceofcloth  then  &#10;showuseroption('priceyellowpieceofcloth',true)&#10;else&#10;showuseroption('priceyellowpieceofcloth',false)&#10;end &#10;if sellbootsofhaste  then  &#10;showuseroption('pricebootsofhaste',true)&#10;else&#10;showuseroption('pricebootsofhaste',false)&#10;end &#10;if sellstoneskinamulet  then  &#10;showuseroption('pricestoneskinamulet',true)&#10;else&#10;showuseroption('pricestoneskinamulet',false)&#10;end &#10;if sellgreatmanapotion  then  &#10;showuseroption('pricegreatmanapotion',true)&#10;else&#10;showuseroption('pricegreatmanapotion',false)&#10;end &#10;if sellultimatehealthpotion  then  &#10;showuseroption('priceultimatehealthpotion',true)&#10;else&#10;showuseroption('priceultimatehealthpotion',false)&#10;end &#10;if selljewelcase  then  &#10;showuseroption('pricejewelcase',true)&#10;else&#10;showuseroption('pricejewelcase',false)&#10;end &#10;if sellwhitepieceofcloth  then  &#10;showuseroption('pricewhitepieceofcloth',true)&#10;else&#10;showuseroption('pricewhitepieceofcloth',false)&#10;end &#10;if sellbrownpieceofcloth  then  &#10;showuseroption('pricebrownpieceofcloth',true)&#10;else&#10;showuseroption('pricebrownpieceofcloth',false)&#10;end &#10;if sellamuletofloss  then  &#10;showuseroption('priceamuletofloss',true)&#10;else&#10;showuseroption('priceamuletofloss',false)&#10;end &#10;if sellbluegem  then  &#10;showuseroption('pricebluegem',true)&#10;else&#10;showuseroption('pricebluegem',false)&#10;end &#10;if sellsteelboots  then  &#10;showuseroption('pricesteelboots',true)&#10;else&#10;showuseroption('pricesteelboots',false)&#10;end &#10;if sellgoldenboots  then  &#10;showuseroption('pricegoldenboots',true)&#10;else&#10;showuseroption('pricegoldenboots',false)&#10;end &#10;&#10;end" enabled="yes"/>
            <PersistentScript name="Spells" script="auto(100)&#10;if $attacked.dist &gt; 0 and $attacked.dist &lt;= 5 and $attacked.hppc &gt; 1 and not dontshootspell then&#10;if $attacked.name == &quot;Zugurosh&quot; then&#10;if cancast(&quot;exori san&quot;) then&#10;cast(&quot;exori san&quot;)&#10;end&#10;end&#10;end" enabled="yes"/>
            <PersistentScript name="MasSan" script="--messages&#10;init start&#10;losttarget = false&#10;&#10;init end&#10;auto(100)&#10;foreach newmessage m do &#10;&#10;if string.find(m.content,&quot;hitpoints due to an attack by Zugurosh.&quot;) and maround(10,&quot;Zugurosh&quot;) == 0 then&#10;if cancast(&quot;exevo mas san&quot;) then&#10;cast(&quot;exevo mas san&quot;)&#10;end&#10;end&#10;&#10;&#10;&#10;if m.content == &quot;Target lost.&quot; then&#10;&#10;&#10;&#10;if $wptsection == &quot;Hunt&quot; or&#10;$wptsection == &quot;North Linia&quot; or&#10;$wptsection == &quot;South Linia&quot; then&#10;losttarget = true&#10;&#10;end&#10;end&#10;end&#10;&#10;if losttarget then&#10;if $standtime &gt; 400 then&#10;for i=1,5 do&#10;if cancast(&quot;exevo mas san&quot;) then&#10;cast(&quot;exevo mas san&quot;)&#10;end&#10;end&#10;losttarget = false&#10;end&#10;if maround(10,&quot;Zugurosh&quot;) then&#10;pausewalking(3000)&#10;end&#10;end&#10;&#10;" enabled="yes"/>
        </PersistentScripts>
    </Scripter>
    <HUDs>
        <HUDScripts>
            <HUDScript name="MonitorMyStats" script="init start&#10;    --&#10;    --              88                                                                  &#10;    --              &quot;&quot;                                                ,d                &#10;    --                                                                88                &#10;    --   ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;    --   I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;    --    `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;    --   aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;    --   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;    --&#10;&#10;    --   Name: Monitor My Stats&#10;    --   Last Updated: 19/12/2013&#10;    --   Version: 1.0&#10;&#10;    local MMS = {&#10;        ShowInfo = true,&#10;&#10;        Title = &quot;Zugurosh&quot;,&#10;        Creator = &quot;Yoko&quot;,&#10;        Info = 'RP Version',&#10;        Version = '1.0.0'&#10;    }&#10;&#10;    -- [[ Do not change anything below this line. ]] --&#10;&#10;    filterinput(false, true, false, false)&#10;&#10;    local HUD_Sections = {&#10;        {Name = 'OTHERS', State = true, Items = {&#10;                {'Ping', function() return $ping .. ' (avg: ' .. $pingaverage .. ')' end},&#10;                {'Bank Balance', function() return num($balance) end},&#10;            }&#10;        },&#10;&#10;        {Name = 'CHARACTER STATS', State = true, Items = {&#10;                {'Level', function() return $level .. ' (' .. 100 - math.floor(($exp - expatlvl($level)) * 100 / (expatlvl($level + 1) - expatlvl($level))) .. '%)' end},&#10;                {'Experience', function() return num($exp) end},&#10;                {'Magic Level', function() return $mlevel .. ' (' .. 100 - $mlevelpc .. '%)' end},&#10;                {'Weapon Skill', function() local _ = WeaponSkill() return _.skill .. ' (' .. 100 - _.skillpc .. '%)' end},&#10;                {'Shielding', function() return $shielding .. ' (' .. 100 - $shieldingpc .. '%)' end},&#10;                {'Fishing', function() return $fishing .. ' (' .. 100 - $fishingpc .. '%)' end}&#10;            }&#10;        },&#10;&#10;        {Name = 'ENGINE STATES', State = true, Items = {&#10;                {'Spell Healer', function() return getsetting('SpellHealer/Enabled') end, function() return toggle('SpellHealer/Enabled') end},&#10;                {'Potion Healer', function() return getsetting('PotionHealer/Enabled') end, function() return toggle('PotionHealer/Enabled') end},&#10;                {'Condition Healer', function() return getsetting('ConditionHealer/Enabled') end, function() return toggle('ConditionHealer/Enabled') end},&#10;                {'Mana Training', function() return getsetting('ManaTrainer/Enabled') end, function() return toggle('ManaTrainer/Enabled') end},&#10;                {'Cavebot', function() return getsetting('Cavebot/Enabled') end, function() return toggle('Cavebot/Enabled') end},&#10;                {'Looting', function() return getsetting('Looting/Enabled') end, function() return toggle('Looting/Enabled') end},&#10;                {'Targeting', function() return getsetting('Targeting/Enabled') end, function() return toggle('Targeting/Enabled') end}&#10;            }&#10;        },&#10;&#10;        {Name = 'BOTTING STATS', State = true, Items = {&#10;                {'Experience per Hour', function() return num($exphour) end},&#10;                {'Experience Left', function() return num(exptolevel()) end},&#10;                {'Experience Today', function() return num($expgained) end},&#10;                {'Time to Next Level', function() return time(timetolevel()) end},&#10;                {'Played Time', function() return time(math.floor($charactertime / 1000)) end},&#10;                {'Stamina', function() return time($stamina) end}&#10;            }&#10;        }&#10;    }&#10;&#10;    local HUD_Colors = {&#10;            Font = color(255, 255, 255, 0),&#10;            SectionHeaderBackground = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)},EntryNameBackground = {0.0, color(41, 105, 100, 105), 0.76, color(37, 94, 50, 50), 0.23, color(19, 19, 19, 20)},&#10;EntryValueBackground = {0.0, color(19, 19, 19, 20), 0.23, color(37, 94, 50, 50), 0.76, color(41, 105, 100, 105)},&#10;EntryValueEnabledBackground = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)},&#10;            EntryValueDisabledBackground = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)},&#10;    }&#10;&#10;    function WeaponSkill()&#10;        local SkillTypes = {&#10;            ['axe'] = {type = 'axe', skill = $axe, skillpc = $axepc},&#10;            ['club'] = {type = 'club', skill = $club, skillpc = $clubpc},&#10;            ['sword'] = {type = 'sword', skill = $sword, skillpc = $swordpc},&#10;            ['bow'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['distance weapon'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['no weapon'] = {type = 'fist', skill = $fist, skillpc = $fistpc},&#10;            ['rod'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;            ['wand'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;        }&#10;&#10;        return SkillTypes[findweapontype()]&#10;    end&#10;&#10;    local Moving, Temp, Moved = false, {0, 0}, {0, 0}&#10;&#10;    function inputevents(e)&#10;        if (e.type == IEVENT_LMOUSEDOWN) then&#10;            for _, Section in ipairs(HUD_Sections) do&#10;                if (e.elementid == Section.StateSwitch) then&#10;                    Section.State = not Section.State&#10;                    return&#10;                end&#10;            end&#10;        for _, Section in ipairs(HUD_Sections) do&#10;                if (Section.Name == 'ENGINE STATES') then&#10;                    for _, SectionItem in ipairs(Section.Items) do&#10;                        if (e.elementid == SectionItem[4]) then&#10;                            SectionItem[3]()&#10;                            return&#10;                        end&#10;                    end&#10;                end&#10;            end&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEDOWN) then&#10;            Moving, Temp = true, {$cursor.x - Moved[1], $cursor.y - Moved[2]}&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEUP) then&#10;            Moving = false&#10;        end&#10;    end&#10;    &#10;    setmaskcolorxp(0)&#10;init end&#10;&#10;if (Moving) then&#10;    auto(10)&#10;    Moved = {$cursor.x - Temp[1], $cursor.y - Temp[2]}&#10;end&#10;&#10;setposition($clientwin.left + 5 + Moved[1], $worldwin.top + Moved[2])&#10;setfontstyle('Tahoma', 8, 75, 0xFFFFFF, 1, color(0, 0, 0, 20))&#10;&#10;local YPosition, SectionRow, SectionItemsRow = 0, 0, 0&#10;&#10;if MMS.ShowInfo then&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, 0, 240, 21, 2, 2)&#10;    drawtext(MMS.Title, 6, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 0, 110, 21, 2, 2)&#10;    drawtext(MMS.Creator, 136, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfontsize(7)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 0 * 18, 240, 15, 2, 2)&#10;    drawtext(MMS.Info, 6, 24 + 0 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 1 * 18, 240, 15, 2, 2)&#10;    drawtext('Script version:', 6, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 24 + 1 * 18, 110, 15, 2, 2)&#10;    drawtext(MMS.Version, 136, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;    &#10;    YPosition = 22 + 2 * 19&#10;end&#10;&#10;for SectionIndex, Section in ipairs(HUD_Sections) do&#10;    setfontsize(8)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 20, 2, 2)&#10;    drawtext(Section.Name, 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    if (Section.State) then&#10;        addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;    else&#10;        addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;    end&#10;    Section.StateSwitch = drawroundrect(220, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 20, 20, 2, 2)&#10;    drawtext('X', 228, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    SectionRow = SectionRow + 1&#10;&#10;    if (Section.State) then&#10;        setfontsize(7)&#10;&#10;        local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;        for SectionItemIndex, SectionItem in ipairs(Section.Items) do&#10;            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)     &#10;            addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;            drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 16, 2, 2)&#10;            drawtext(SectionItem[1], 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;&#10;            if (Section.Name == 'ENGINE STATES') then&#10;                local EngineCurrentState = SectionItem[2]()&#10;&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                if (EngineCurrentState == 'yes') then&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;                else&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;                end&#10;                HUD_Sections[SectionIndex].Items[SectionItemIndex][4] = drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;&#10;&#10;                drawtext((EngineCurrentState == 'yes' and ('On')) or ('Off'), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            else&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;                drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;                drawtext(SectionItem[2](), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            end&#10;&#10;            SectionItemsRow = SectionItemsRow + 1&#10;        end&#10;    end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="MonitorMyHunting" script="init start&#10;&#9;--&#10;&#9;--                        88                                                                  &#10;&#9;--                        &quot;&quot;                                                ,d                &#10;&#9;--                                                                          88                &#10;&#9;--             ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;&#9;--             I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;&#9;--              `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;&#9;--             aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;&#9;--   Author:   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;&#9;--   &#10;&#9;--   Monitor My Hunting!&#10;&#9;--&#10;&#9;--   Version: 1.0&#10;&#9;--   Created: 29.12.2013&#10;&#9;--   Last update: 29.12.2013&#10;&#9;--&#10;&#10;&#9;local MMH = {&#10;&#9;&#9;SHOW_ALL_ITEMS = false,&#10;&#9;&#9;SHOW_ALL_SUPPLIES = false,&#10;&#9;}&#10;&#10;&#9;-- [[ Do not change anything below this line. ]] --&#10;&#10;&#9;-- [[ COLORS ]] --&#10;&#9;MMH.COLORS = {}&#10;&#9;MMH.COLORS.FONT_COLOR = color(255, 255, 255, 0)&#10;&#9;MMH.COLORS.SECTION_HEADER_BACKGROUND = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)}&#10;&#9;MMH.COLORS.ENTRY_NAME_BACKGROUND = {0.0, color(41, 105, 100, 105), 0.76, color(37, 94, 50, 50), 0.23, color(19, 19, 19, 20)}&#10;&#9;MMH.COLORS.ENTRY_VALUE_BACKGROUND = {0.0, color(19, 19, 19, 20), 0.23, color(37, 94, 50, 50), 0.76, color(41, 105, 100, 105)}&#10;&#9;MMH.COLORS.RESULT_POSITIVE_BACKGROUND = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)}&#10;&#9;MMH.COLORS.RESULT_NEGATIVE_BACKGROUND = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)}&#10;&#9;MMH.COLORS.RESET_BUTTON_BACKGROUND = {0.0, color(100, 255, 100, 100), 0.23, color(50, 100, 255, 100), 0.76, color(100, 100, 100, 255)}&#10;&#10;&#9;-- [[ ELEMENTS ]] --&#10;&#9;MMH.ELEMENTS = {}&#10;&#9;MMH.ELEMENTS.RESET_BUTTON = -1&#10;&#9;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = -1&#10;&#9;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = -1&#10;&#10;&#9;-- [[ SECTION STATES ]] --&#10;&#9;MMH.SECTIONS = {}&#10;&#9;MMH.SECTIONS.ITEMS_LOOTED = true&#10;&#9;MMH.SECTIONS.SUPPLIES_USED = true&#10;&#10;&#9;-- [[ OTHERS ]] --&#9;&#10;&#9;filterinput(false, true, false, false)&#10;&#10;&#9;local MOVING, TEMP, MOVED = false, {0, 0}, {0, 0}&#10;&#10;&#9;function inputevents(e)&#10;&#9;&#9;if (e.type == IEVENT_LMOUSEDOWN) then&#10;&#9;&#9;&#9;if (e.elementid == MMH.ELEMENTS.RESET_BUTTON) then&#10;&#9;&#9;&#9;&#9;resetcharactertime()&#10;&#9;&#9;&#9;&#9;resetlootcounter()&#10;&#9;&#9;&#9;&#9;resetexpcounter()&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_ITEMS_LOOTED) then&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.ITEMS_LOOTED = not MMH.SECTIONS.ITEMS_LOOTED&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_SUPPLIES_USED) then&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.SUPPLIES_USED = not MMH.SECTIONS.SUPPLIES_USED&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEDOWN) then&#10;&#9;&#9;&#9;MOVING, TEMP = true, {$cursor.x - MOVED[1], $cursor.y - MOVED[2]}&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEUP) then&#10;&#9;&#9;&#9;MOVING = false&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;if (MOVING) then&#10;    auto(10)&#10;    MOVED = {$cursor.x - TEMP[1], $cursor.y - TEMP[2]}&#10;end&#10;&#10;setposition($clientwin.right - 424 + MOVED[1], $worldwin.top + MOVED[2])&#10;setfontstyle('Tahoma', 8, 75, MMH.COLORS.FONT_COLOR, 1, color(0, 0, 0, 20))&#10;&#10;local ROW_QUANTITY, STRING_WIDTH, STRING_HEIGHT = 0, measurestring('TEMP')&#10;local ITEMS_LOOTED_WORTH, ITEM_LOOTED_QUANTITY, ITEM_LOOTED_WORTH = 0, 0, 0&#10;local SUPPLIES_USED_WORTH, SUPPLY_USED_QUANTITY, SUPPLY_USED_WORTH = 0, 0, 0&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 0, 240, 20, 2, 2)&#10;drawtext('Monitor My Hunting v1.0', 6, 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.RESET_BUTTON_BACKGROUND))&#10;MMH.ELEMENTS.RESET_BUTTON = drawroundrect(196, 0, 44, 20, 2, 2)&#10;drawtext('RESET', 202, 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 23, 240, 15, 2, 2)&#10;drawtext('Looting Accuracy', 6, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;drawroundrect(130, 23, 110, 15, 2, 2)&#10;drawtext(string.format('%.2f', $lootaccuracy) .. '%', 136, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;drawroundrect(0, 41, 240, 20, 2, 2)&#10;drawtext('ITEMS LOOTED', 6, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = drawroundrect(220, 41, 20, 20, 2, 2)&#10;drawtext('X', 228, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;foreach lootingitem ItemEntry do&#10;&#9;if (MMH.SHOW_ALL_ITEMS or ItemEntry.amountlooted &gt; 0) then&#10;&#9;&#9;ITEM_LOOTED_QUANTITY = ItemEntry.amountlooted&#10;&#9;&#9;ITEM_LOOTED_WORTH = ItemEntry.sellprice * ITEM_LOOTED_QUANTITY&#10;&#10;&#9;&#9;if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#9;&#9;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 64 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(130, 64 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;&#9;&#9;drawtext(num(ITEM_LOOTED_QUANTITY) .. ' (' .. math.floor(ITEM_LOOTED_WORTH / 100) / 10 .. 'K)', 136, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;ITEMS_LOOTED_WORTH = ITEMS_LOOTED_WORTH + ITEM_LOOTED_WORTH&#10;&#9;end&#10;end&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;drawtext('Total: ' .. num(ITEMS_LOOTED_WORTH) .. ' GPs', 6, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;drawtext('SUPPLIES USED', 6, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = drawroundrect(220, 64 + ROW_QUANTITY * 18, 20, 20, 2, 2)&#10;drawtext('X', 228, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;foreach supplyitem ItemEntry do&#10;&#9;if (MMH.SHOW_ALL_SUPPLIES or ItemEntry.amountused &gt; 0) then&#10;&#9;&#9;SUPPLY_USED_QUANTITY = ItemEntry.amountused&#10;&#9;&#9;SUPPLY_USED_WORTH = ItemEntry.buyprice * SUPPLY_USED_QUANTITY&#10;&#10;&#9;&#9;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;&#9;&#9;drawtext(num(SUPPLY_USED_QUANTITY) .. ' (' .. math.floor(SUPPLY_USED_WORTH / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + SUPPLY_USED_WORTH&#10;&#9;end&#10;end&#10;&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#10;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;drawitem(3031, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;drawtext('Money Spent', 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;drawtext(num($moneyspent) .. ' (' .. math.floor($moneyspent / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;end&#10;&#10;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + $moneyspent&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;drawtext('Total: ' .. num(SUPPLIES_USED_WORTH) .. ' GPs', 6, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;drawtext(((ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH and ('PROFIT: ')) or ('WASTE: ')) .. num(ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) .. ' GPs (' .. math.abs(math.floor(((ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) * 3600) / ($charactertime / 1000) / 100) / 10) .. ' k/h)', 6, 87 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)" enabled="yes" refreshRate="100"/>
            <HUDScript name="ContextMenu" script="init start&#10;&#9;-- local SCRIPT_VERSION = '2.2.0'&#10;&#10;&#9;local showProfile = true&#10;&#9;local showRelation = true&#10;&#9;local showWaypoints = true&#10;&#9;local mainWaypoints = {'Node', 'Stand', 'Action', 'Lure'}&#10;&#9;local secondaryWaypoints = {'Walk', 'Shovel', 'Rope', 'Machete', 'Ladder', 'Use'}&#10;&#9;local showSpecialAreas = true&#10;&#9;local specialAreas = {'none', 'cavebot', 'targeting', 'cavebot &amp; targeting'}&#10;&#10;&#9;-- DO NOT EDIT BELOW THIS LINE --&#10;&#10;&#9;local defFontColor        = color(223, 223, 223)&#10;&#9;local defBackColor        = color(70, 70, 70)&#10;&#9;local defHighColor        = color(128, 128, 128)&#10;&#9;local boxColor            = color(70, 70, 70)&#10;&#9;local boxLightShadowColor = color(117, 117, 117)&#10;&#9;local boxDarkShadowColor  = color(41, 41, 41)&#10;&#10;&#9;local borderSize = 4&#10;&#9;local paddingSize = 3&#10;&#10;&#9;local PROFILE_URL = &quot;http://www.tibia.com/community/?subtopic=characters&amp;name=&quot;&#10;&#10;&#9;ALIGN_LEFT   = 0&#10;&#9;ALIGN_CENTER = 1&#10;&#9;ALIGN_RIGHT  = 2&#10;&#10;&#9;MENU_SEPARATOR = '-- SEPARATOR --'&#10;&#10;&#9;local items, highlight, contextMenu, maxWidth, maxHeight, clicked&#10;&#10;&#9;do -- Register default handlers&#10;&#9;&#9;if showProfile then&#10;&#9;&#9;&#9;local function showProfileName(m)&#10;&#9;&#9;&#9;&#9;return 'Show page for ' .. m.creature.name&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;local function showProfileCall(m)&#10;&#9;&#9;&#9;&#9;openbrowser(PROFILE_URL .. m.creature.name:gsub(' ', '+'))&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', showProfileName, showProfileCall)&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if showRelation then&#10;&#9;&#9;&#9;local function currentRelationName(m)&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id then&#10;&#9;&#9;&#9;&#9;&#9;return m.creature.name .. ': ' .. m.creature.teamname, m.creature.teamcolor, nil, color(70, 70, 70)&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', currentRelationName, nil)&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#10;&#10;&#9;&#9;&#9;-- enemy&#10;&#9;&#9;&#9;local function setEnemyName(m)&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and not m.creature.isenemy then&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as enemy'&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;local function setEnemyCall(m)&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'enemy')&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setEnemyName, setEnemyCall)&#10;&#10;&#9;&#9;&#9;-- ally&#10;&#9;&#9;&#9;local function setAllyName(m)&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and (not m.creature.isally or m.creature.isleader) then&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as ally'&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;local function setAllyCall(m)&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'ally')&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setAllyName, setAllyCall)&#10;&#10;&#9;&#9;&#9;-- leader&#10;&#9;&#9;&#9;local function setLeaderName(m)&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and not m.creature.isleader then&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as leader'&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;local function setLeaderCall(m)&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'leader')&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setLeaderName, setLeaderCall)&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if showWaypoints then&#10;&#9;&#9;&#9;for _, v in ipairs({mainWaypoints, secondaryWaypoints}) do&#10;&#9;&#9;&#9;&#9;for _, vv in ipairs(v) do&#10;&#9;&#9;&#9;&#9;&#9;-- I learned this trick with JavaScript; basically, we call a anonymous&#10;&#9;&#9;&#9;&#9;&#9;-- function that returns the function we'll actually use. The trick is&#10;&#9;&#9;&#9;&#9;&#9;-- that we pass to this first anonymous function the type of the node&#10;&#9;&#9;&#9;&#9;&#9;-- we want the returned function to add. This works because the inner&#10;&#9;&#9;&#9;&#9;&#9;-- function is created in a scope where `type` has the desired value,&#10;&#9;&#9;&#9;&#9;&#9;-- so it's value is retained for future calls.&#10;&#9;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', 'Add ' .. vv, (function(type)&#10;&#9;&#9;&#9;&#9;&#9;&#9;return function(m)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;addwaypoint(type, m.posx, m.posy, m.posz)&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;&#9;end)(vv))&#10;&#9;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', MENU_SEPARATOR, nil)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if showSpecialAreas then&#10;&#9;&#9;&#9;for _, v in ipairs(specialAreas) do&#10;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', 'Add Special Area (' .. v:capitalizeall() .. ')', (function(type)&#10;&#9;&#9;&#9;&#9;&#9;return function(m)&#10;&#9;&#9;&#9;&#9;&#9;&#9;addspecialarea(type, m.posx, m.posy, m.posz)&#10;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;end)(v))&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_world', MENU_SEPARATOR, nil)&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function loadCategories(...)&#10;&#9;&#9;local categories = {...}&#10;&#10;&#9;&#9;for _, v in ipairs(categories) do&#10;&#9;&#9;&#9;local cat = 'contextMenu_' .. v&#10;&#9;&#9;&#9;foreach messagehandler m cat do&#10;&#9;&#9;&#9;&#9;local text, fontColor, backColor, highColor, align&#10;&#10;&#9;&#9;&#9;&#9;if type(m.name) == 'function' then&#10;&#9;&#9;&#9;&#9;&#9;text, fontColor, highColor, backColor, align = m.name(contextMenu)&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;text = m.name&#10;&#9;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;&#9;if text and text ~= '' then&#10;&#9;&#9;&#9;&#9;&#9;local width&#10;&#9;&#9;&#9;&#9;&#9;if text == MENU_SEPARATOR then&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxHeight = maxHeight + 8&#10;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;width = (measurestring(text))&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxHeight = maxHeight + 19&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxWidth = math.max(maxWidth, width)&#10;&#9;&#9;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;&#9;&#9;table.insert(items, {&#10;&#9;&#9;&#9;&#9;&#9;&#9;text      = text,&#10;&#9;&#9;&#9;&#9;&#9;&#9;width     = width,&#10;&#9;&#9;&#9;&#9;&#9;&#9;callback  = m.callback,&#10;&#9;&#9;&#9;&#9;&#9;&#9;fontColor = fontColor or defFontColor,&#10;&#9;&#9;&#9;&#9;&#9;&#9;highColor = highColor or defHighColor,&#10;&#9;&#9;&#9;&#9;&#9;&#9;backColor = backColor or defBackColor&#10;&#9;&#9;&#9;&#9;&#9;});&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;filterinput(false, true, true, false)&#10;&#9;function inputevents(e)&#10;&#9;&#9;local eventItem, itemIndex&#10;&#9;&#9;for i, v in ipairs(items) do&#10;&#9;&#9;&#9;if v.id == e.elementid then&#10;&#9;&#9;&#9;&#9;eventItem = v&#10;&#9;&#9;&#9;&#9;itemIndex = i&#10;&#9;&#9;&#9;&#9;break&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#10;&#9;&#9;highlight = itemIndex&#10;&#9;&#9;if e.type == IEVENT_LMOUSEUP then&#10;&#9;&#9;&#9;if eventItem and eventItem.callback then&#10;&#9;&#9;&#9;&#9;eventItem.callback(contextMenu)&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;clicked = true&#10;&#9;&#9;&#9;highlight = nil&#10;&#9;&#9;&#9;waitforevents(false)&#10;&#9;&#9;&#9;press('[ESC]')&#10;&#9;&#9;&#9;waitforevents(true)&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;setfontstyle('Tahoma', 7, 75, defFontColor, 1, 0x000000)&#10;&#9;setantialiasing(true)&#10;init end&#10;&#10;auto(10)&#10;&#10;contextMenu = contextmenuinfo()&#10;&#10;-- This prevents the HUD from redrawing after clicking&#10;if clicked then&#10;&#9;clicked = contextMenu ~= nil&#10;&#9;contextMenu = nil&#10;end&#10;&#10;if contextMenu == nil then&#10;&#9;highlight = nil&#10;&#9;return&#10;end&#10;&#10;items = {}&#10;maxWidth, maxHeight = 0, -4&#10;local fullWidth, fullHeight&#10;do -- Bootstrap&#10;&#10;&#9;-- Load categories&#10;&#9;if contextMenu.type == 'battle' or contextMenu.itemid == 99 then&#10;&#9;&#9;contextMenu.creature = getcreaturebyid(contextMenu.creatureid)&#10;&#10;&#9;&#9;if contextMenu.creature.isplayer then&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'Player', 'player')&#10;&#9;&#9;elseif contextMenu.creature.isnpc then&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'NPC', 'NPC')&#10;&#9;&#9;elseif contextMenu.creature.ismonster then&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'Monster', 'monster')&#10;&#9;&#9;end&#10;&#10;&#9;&#9;loadCategories(contextMenu.type .. 'Creature', 'creature')&#10;&#9;end&#10;&#10;&#9;if contextMenu.type == 'world' then&#10;&#9;&#9;if not contextMenu.creature then&#10;&#9;&#9;&#9;loadCategories('worldItem', 'item')&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if contextMenu.posz == $posz then&#10;&#10;&#9;&#9;&#9;do&#10;&#9;&#9;&#9;&#9;local i = 0&#10;&#9;&#9;&#9;&#9;foreach settingsentry e 'Cavebot/Waypoints' do&#10;&#9;&#9;&#9;&#9;&#9;local x, y, z = get(e, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;&#9;&#9;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;&#9;&#9;&#9;&#9;if z == $posz then&#10;&#9;&#9;&#9;&#9;&#9;&#9;local diffX, diffY = contextMenu.posx - x, contextMenu.posy - y&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &gt;= 0 and diffY &gt;= 0 then&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local w, h = get(e, 'Range'):match(REGEX_RANGE)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;w, h = tonumber(w), tonumber(h)&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &lt; w and diffY &lt; h then&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.waypoint = e&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.waypointID = i&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;&#9;&#9;i = i + 1&#10;&#9;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;&#9;if contextMenu.waypoint then&#10;&#9;&#9;&#9;&#9;&#9;loadCategories('worldWaypoint', 'waypoint')&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;do&#10;&#9;&#9;&#9;&#9;foreach settingsentry e 'Cavebot/SpecialAreas' do&#10;&#9;&#9;&#9;&#9;&#9;local x, y, z = get(e, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;&#9;&#9;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;&#9;&#9;&#9;&#9;if z == $posz then&#10;&#9;&#9;&#9;&#9;&#9;&#9;local diffX, diffY = contextMenu.posx - x, contextMenu.posy - y&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &gt;= 0 and diffY &gt;= 0 then&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local w, h = get(e, 'Size'):match(REGEX_RANGE)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;w, h = tonumber(w), tonumber(h)&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &lt; w and diffY &lt; h then&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.specialArea = e&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.specialAreaName = get(e, 'Name')&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;&#9;if contextMenu.specialArea then&#10;&#9;&#9;&#9;&#9;&#9;loadCategories('worldSpecialArea', 'specialArea')&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;elseif contextMenu.type == 'container' then&#10;&#9;&#9;loadCategories('containerItem', 'item')&#10;&#9;elseif contextMenu.type == 'equip' then&#10;&#9;&#9;loadCategories('equipItem', 'item')&#10;&#9;end&#10;&#9;loadCategories(contextMenu.type)&#10;&#10;&#9;-- We set it as true from the beginning so that it also removes the first&#10;&#9;-- item if it's a separator; we obviously don't want the first item to be a&#10;&#9;-- separator. NOTE: relies on the fact that ipairs() will traverse the&#10;&#9;-- table in ascending order, which isn't guaranteed by the reference manual&#10;&#9;-- but is the common implementation&#10;&#9;local lastSep = true&#10;&#10;&#9;-- Instead of removing the items at the for loop, we simply set it to nil&#10;&#9;-- and normalize it after; this is because if we did remove it, it would&#10;&#9;-- shift the indexes and end up fucking up posterior checks&#10;&#9;for i, v in ipairs(items) do&#10;&#9;&#9;local curSep = v.text == MENU_SEPARATOR&#10;&#9;&#9;if curSep and (lastSep or i == #items) then&#10;&#9;&#9;&#9;items[i] = nil&#10;&#9;&#9;&#9;maxHeight = maxHeight - 8&#10;&#9;&#9;end&#10;&#10;&#9;&#9;lastSep = curSep&#10;&#9;end&#10;&#9;table.normalize(items)&#10;&#10;&#9;-- No item to display, abort mission!&#10;&#9;if #items == 0 then&#10;&#9;&#9;return&#10;&#9;end&#10;&#10;&#9;-- The Tibia context menu has an extra width of 44 pixels for the longest&#10;&#9;-- item; here we account for that&#10;&#9;maxWidth = maxWidth + 44&#10;&#10;&#9;fullWidth, fullHeight = maxWidth + 2*borderSize, maxHeight + 2*borderSize&#10;&#9;setposition($clientwin.x + contextMenu.x - fullWidth - 2,$clientwin.y + contextMenu.y)&#10;end&#10;&#10;do -- Draw Container&#10;&#9;-- Draw main box&#10;&#9;setfillstyle('color', boxColor)&#10;&#9;setbordercolor(-1)&#10;&#9;drawrect(0, 0, fullWidth, fullHeight)&#10;&#10;&#9;-- Draw shadows&#10;&#9;setbordercolor(boxLightShadowColor)&#10;&#9;drawline(0, 0, fullWidth, 0)&#10;&#9;drawline(0, 0, 0, fullHeight)&#10;&#9;drawline(2, fullHeight - 2, fullWidth - borderSize, 0)&#10;&#9;drawline(fullWidth - 2, 2, 0, fullHeight - borderSize)&#10;&#10;&#9;setbordercolor(boxDarkShadowColor)&#10;&#9;drawline(2, 2, fullWidth - borderSize, 0)&#10;&#9;drawline(2, 2, 0, fullHeight - borderSize)&#10;&#9;drawline(0, fullHeight, fullWidth, 0)&#10;&#9;drawline(fullWidth, 0, 0, fullHeight)&#10;end&#10;&#10;do -- Draw items&#10;&#9;local curHeight = borderSize&#10;&#9;for i, v in ipairs(items) do&#10;&#9;&#9;-- Separators get special treatment here&#10;&#9;&#9;if v.text == MENU_SEPARATOR then&#10;&#9;&#9;&#9;setbordercolor(boxDarkShadowColor)&#10;&#9;&#9;&#9;drawline(borderSize, curHeight, maxWidth, 0)&#10;&#10;&#9;&#9;&#9;setbordercolor(boxLightShadowColor)&#10;&#9;&#9;&#9;drawline(borderSize, curHeight + 1, maxWidth, 0)&#10;&#10;&#9;&#9;&#9;curHeight = curHeight + 8&#10;&#9;&#9;else&#10;&#10;&#9;&#9;&#9;-- This is a dirty, dirrty attempt of making the code shorter; and&#10;&#9;&#9;&#9;-- that's what I love the most about programming&#10;&#9;&#9;&#9;local alignOffset = ((maxWidth - paddingSize - v.width) / 2) * (v.align or ALIGN_LEFT)&#10;&#10;&#9;&#9;&#9;-- Set style&#10;&#9;&#9;&#9;setbordercolor(-1)&#10;&#9;&#9;&#9;setfontcolor(v.fontColor)&#10;&#9;&#9;&#9;setfillstyle('color', tern(i == highlight, v.highColor, v.backColor))&#10;&#10;&#9;&#9;&#9;-- Draw stuff&#10;&#9;&#9;&#9;v.id = drawrect(borderSize, curHeight, maxWidth, 15)&#10;&#9;&#9;&#9;drawtext(v.text, borderSize + paddingSize + alignOffset, curHeight + paddingSize)&#10;&#10;&#9;&#9;&#9;curHeight = curHeight + 19&#10;&#9;&#9;end&#10;&#9;end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="ShowSpecialAreas" script="init start&#13;&#10;&#9;-- local SCRIPT_VERSION = '1.2.1'&#13;&#10;&#13;&#10;&#9;local function deleteSpecialAreaCall(menu)&#13;&#10;&#9;&#9;removespecialarea(menu.specialAreaName)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function moveSpecialAreaName()&#13;&#10;&#9;&#9;if resizedSP == nil then&#13;&#10;&#9;&#9;&#9;return tern(draggedSP == nil, 'Move Special Area', 'Stop Moving')&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function moveSpecialAreaCall(menu)&#13;&#10;&#9;&#9;if draggedSP == nil then&#13;&#10;&#9;&#9;&#9;draggedSP = menu.specialArea&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;draggedSP = nil&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function resizeSpecialAreaName()&#13;&#10;&#9;&#9;if draggedSP == nil then&#13;&#10;&#9;&#9;&#9;return tern(resizedSP == nil, 'Resize Special Area', 'Stop Resizing')&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function resizeSpecialAreaCall(menu)&#13;&#10;&#9;&#9;if resizedSP == nil then&#13;&#10;&#9;&#9;&#9;resizedSP = menu.specialArea&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;resizedSP = nil&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;registermessagehandler('contextMenu_specialArea', moveSpecialAreaName, moveSpecialAreaCall)&#13;&#10;&#9;registermessagehandler('contextMenu_specialArea', resizeSpecialAreaName, resizeSpecialAreaCall)&#13;&#10;&#9;registermessagehandler('contextMenu_specialArea', 'Delete Special Area', deleteSpecialAreaCall)&#13;&#10;&#9;registermessagehandler('contextMenu_specialArea', MENU_SEPARATOR, nil)&#13;&#10;&#13;&#10;&#9;local worldWidth, worldHeight, x, y, z, width, height, avoidance, name, policy, areaType&#13;&#10;&#9;local specialAreaRect = {}&#13;&#10;&#9;local innerRect = {}&#13;&#10;&#13;&#10;&#9;local function gettilepos(x, y, z)&#13;&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#13;&#10;&#13;&#10;&#9;&#9;if tile == nil then&#13;&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#13;&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#13;&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#13;&#10;&#9;&#9;&#9;&#9;xDiff = 0&#13;&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#13;&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#13;&#10;&#9;&#9;&#9;&#9;yDiff = 0&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#13;&#10;&#9;&#9;&#9;-- adding this as a precaution.&#13;&#10;&#9;&#9;&#9;if tile ~= nil then&#13;&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#13;&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#13;&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#13;&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#13;&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#13;&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;return tile&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function getAreaRect(x, y, w, h)&#13;&#10;&#9;&#9;local ret = {x = 0, y = 0, w = 0, h = 0}&#13;&#10;&#13;&#10;&#9;&#9;local topLeftTilePos = gettilepos(x, y, $posz)&#13;&#10;&#9;&#9;local botRightTilePos = gettilepos(x + w - 1, y + h - 1, $posz)&#13;&#10;&#13;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#13;&#10;&#9;&#9;&#9;ret.x = math.max(topLeftTilePos.left, 0)&#13;&#10;&#9;&#9;&#9;ret.y = math.max(topLeftTilePos.top, 0)&#13;&#10;&#9;&#9;&#9;ret.w = math.min(botRightTilePos.right, worldWidth) - ret.x&#13;&#10;&#9;&#9;&#9;ret.h = math.min(botRightTilePos.bottom, worldHeight) - ret.y&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;return ret&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function drawInnerRect(areaType, x, y, width, height)&#13;&#10;&#9;&#9;innerRect = {w = 0, h = 0}&#13;&#10;&#9;&#9;if areaType == 'Square (Border Only)' then&#13;&#10;&#9;&#9;&#9;innerRect = getAreaRect(x + 1, y + 1, width - 2, height - 2)&#13;&#10;&#9;&#9;elseif areaType == 'Square (Double Border)' then&#13;&#10;&#9;&#9;&#9;innerRect = getAreaRect(x + 2, y + 2, width - 4, height - 4)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if innerRect.w &gt; 0 and innerRect.h &gt; 0 then&#13;&#10;&#9;&#9;&#9;setfillstyle('color', 0xFF000000)&#13;&#10;&#9;&#9;&#9;drawroundrect(innerRect.x, innerRect.y, innerRect.w, innerRect.h, 10, 10)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;useworldhud()&#13;&#10;init end&#13;&#10;&#13;&#10;setfontstyle('Arial', 8, 75, 0xFFFFFF, 1, 0x000000)&#13;&#10;&#13;&#10;worldWidth, worldHeight = $worldwin.width - 2, $worldwin.height - 2&#13;&#10;&#13;&#10;foreach settingsentry e 'Cavebot/SpecialAreas' do&#13;&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match('.-(%d+).-(%d+).-(%d+)')&#13;&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#13;&#10;&#13;&#10;&#9;if z == $posz then&#13;&#10;&#9;&#9;width, height = getsetting(e, 'Size'):match('(%d+).-(%d+)')&#13;&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#13;&#10;&#13;&#10;&#9;&#9;specialAreaRect = getAreaRect(x, y, width, height)&#13;&#10;&#9;&#9;if specialAreaRect.w &gt; 0 and specialAreaRect.h &gt; 0 then&#13;&#10;&#9;&#9;&#9;avoidance = tonumber(getsetting(e, 'Avoidance'))&#13;&#10;&#9;&#9;&#9;areaType = getsetting(e, 'Type')&#13;&#10;&#9;&#9;&#9;name = getsetting(e, 'Name')&#13;&#10;&#9;&#9;&#9;policy = getsetting(e, 'Policy'):gsub('[^A-Z]', '')&#13;&#10;&#13;&#10;&#9;&#9;&#9;setfillstyle('color', color(255, 0, 0, math.round(100 - (avoidance / 4))))&#13;&#10;&#9;&#9;&#9;drawroundrect(specialAreaRect.x, specialAreaRect.y, specialAreaRect.w, specialAreaRect.h, 10, 10)&#13;&#10;&#9;&#9;&#9;drawInnerRect(areaType, x, y, width, height)&#13;&#10;&#13;&#10;&#9;&#9;&#9;if specialAreaRect.w &gt; 10 then&#13;&#10;&#9;&#9;&#9;&#9;drawtext(&#13;&#10;&#9;&#9;&#9;&#9;&#9;string.fit(name, specialAreaRect.w - 10, '...', true),&#13;&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.x + 5,&#13;&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.y + 3&#13;&#10;&#9;&#9;&#9;&#9;)&#13;&#10;&#9;&#9;&#9;&#9;drawtext(&#13;&#10;&#9;&#9;&#9;&#9;&#9;string.fit(policy, specialAreaRect.w - 10, '...', true),&#13;&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.x + 5,&#13;&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.y + 15&#13;&#10;&#9;&#9;&#9;&#9;)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;if contextmenuinfo() == nil then&#13;&#10;&#9;if draggedSP then&#13;&#10;&#9;&#9;set(draggedSP, 'Coordinates', string.format('x:%i, y:%i, z:%i', $cursorinfo.x, $cursorinfo.y, $cursorinfo.z))&#13;&#10;&#9;elseif resizedSP then&#13;&#10;&#9;&#9;local x, y = get(resizedSP, 'Coordinates'):match(REGEX_COORDS)&#13;&#10;&#9;&#9;x, y = tonumber(x), tonumber(y)&#13;&#10;&#13;&#10;&#9;&#9;set(resizedSP, 'Size', string.format('%i x %i', math.max(1, 1 + ($cursorinfo.x - x)) , math.max(1, 1 + ($cursorinfo.y - y))))&#13;&#10;&#9;end&#13;&#10;end" enabled="no" refreshRate="100"/>
            <HUDScript name="ShowWaypoints" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.2.1'&#10;&#10;&#9;local waypointColors = {&#10;&#9;&#9;walk    = 0xAAF200,&#10;&#9;&#9;node    = 0x2A0736,&#10;&#9;&#9;stand   = 0x00AACC,&#10;&#9;&#9;shovel  = 0xEB8540,&#10;&#9;&#9;rope    = 0xFFCC00,&#10;&#9;&#9;machete = 0x003366,&#10;&#9;&#9;ladder  = 0xC55186,&#10;&#9;&#9;use     = 0x36693E,&#10;&#9;&#9;action  = 0x00FFFF,&#10;&#9;&#9;lure    = 0xCCCCCC&#10;&#9;}&#10;&#10;&#9;local function deleteWaypointCall(menu)&#10;&#9;&#9;removewaypoint(menu.waypointID)&#10;&#9;end&#10;&#10;&#9;local function moveWaypointName()&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;return tern(draggedWpt == nil, 'Move Waypoint', 'Stop Moving')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function moveWaypointCall(menu)&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;draggedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;draggedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointName()&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;return tern(resizedWpt == nil, 'Resize Waypoint', 'Stop Resizing')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointCall(menu)&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;resizedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;resizedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;registermessagehandler('contextMenu_waypoint', moveWaypointName, moveWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', resizeWaypointName, resizeWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', 'Delete Waypoint', deleteWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', MENU_SEPARATOR, nil)&#10;&#10;&#9;local xOffset, yOffset, worldWidth, worldHeight, x, y, z, topLeftTilePos,&#10;&#9;      botRightTilePos, width, height, text, label&#10;&#9;local waypointRect = {}&#10;&#10;&#9;function gettilepos(x, y, z)&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#10;&#10;&#9;&#9;if tile == nil then&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#10;&#9;&#9;&#9;&#9;xDiff = 0&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#10;&#9;&#9;&#9;&#9;yDiff = 0&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#10;&#9;&#9;&#9;-- adding this as a precaution.&#10;&#9;&#9;&#9;if tile ~= nil then&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#10;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return tile&#10;&#9;end&#10;&#10;&#9;useworldhud()&#10;init end&#10;&#10;setfontstyle('Tahoma', 7, 75, 0xFFFFFF, 1, 0x000000)&#10;&#10;xOffset, yOffset = $worldwin.left - $clientwin.left, $worldwin.top - $clientwin.top&#10;worldWidth, worldHeight = $worldwin.right - $worldwin.left - 2, $worldwin.bottom - $worldwin.top - 2&#10;&#10;local i = 0&#10;foreach settingsentry e 'Cavebot/Waypoints' do&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match(REGEX_SPA_COORDS)&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;if z == $posz then&#10;&#9;&#9;width, height = getsetting(e, 'Range'):match(REGEX_SPA_SIZE)&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#10;&#10;&#9;&#9;topLeftTilePos = gettilepos(x, y, z)&#10;&#9;&#9;botRightTilePos = gettilepos(x + width - 1, y + height - 1, z)&#10;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#10;&#9;&#9;&#9;waypointRect.left   = math.max(topLeftTilePos.left  , 0)&#10;&#9;&#9;&#9;waypointRect.top    = math.max(topLeftTilePos.top   , 0)&#10;&#9;&#9;&#9;waypointRect.right  = math.min(botRightTilePos.right , worldWidth)&#10;&#9;&#9;&#9;waypointRect.bottom = math.min(botRightTilePos.bottom, worldHeight)&#10;&#9;&#9;&#9;waypointRect.width  = waypointRect.right - waypointRect.left&#10;&#9;&#9;&#9;waypointRect.height = waypointRect.bottom - waypointRect.top&#10;&#10;&#9;&#9;&#9;if waypointRect.width &gt; 0 and waypointRect.height &gt; 0 then&#10;&#9;&#9;&#9;&#9;label = getsetting(e, 'Label')&#10;&#9;&#9;&#9;&#9;text = tern(#label == 0, tostring(i), label .. ' (' .. i .. ')')&#10;&#9;&#9;&#9;&#9;wptType = getsetting(e, 'Type')&#10;&#10;&#9;&#9;&#9;&#9;setfillstyle('color', (waypointColors[wptType:lower()] or 0) + (math.floor(2.55*50)*16777216))&#10;&#9;&#9;&#9;&#9;drawroundrect(&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.left,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.top,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.width,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.height,&#10;&#9;&#9;&#9;&#9;&#9;10, 10&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;&#9;if waypointRect.width &gt; 10 then&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(text, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 3&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(wptType, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 15&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;i = i + 1&#10;end&#10;&#10;if contextmenuinfo() == nil then&#10;&#9;if draggedWpt then&#10;&#9;&#9;set(draggedWpt, 'Coordinates', string.format('x:%i, y:%i, z:%i', $cursorinfo.x, $cursorinfo.y, $cursorinfo.z))&#10;&#9;elseif resizedWpt then&#10;&#9;&#9;local x, y = get(resizedWpt, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;x, y = tonumber(x), tonumber(y)&#10;&#10;&#9;&#9;set(resizedWpt, 'Range', string.format('%i x %i', math.max(1, 1 + ($cursorinfo.x - x)) , math.max(1, 1 + ($cursorinfo.y - y))))&#10;&#9;end&#10;end" enabled="no" refreshRate="100"/>
            <HUDScript name="GeneralInfo" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.0.0'&#10;&#9;&#10;&#9;local fontsize = 10&#10;&#9;local fontspacing = fontsize + 6&#10;&#9;setfontstyle(&quot;MS Serif&quot;, 10, 100, 0xCCCCCC, 1, 0x555555)&#10;&#9;&#10;&#9;local displayontitle = true -- set it to false to display it as a rectangular info instead&#10;&#9;local maxsize = 220&#10;&#9;&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;auto(100)&#10;local info = {&#10;&#9;{color = 0xff5577, text = 'Exp/h: ', value = num($exphour)},&#10;&#9;{color = 0x77ff77, text = 'Level up: ', value = num($exptonextlevel) .. ' / ' .. time(timetolevel())},&#10;&#9;{color = 0x44eeff, text = 'Stamina: ', value = num($stamina)},&#10;&#9;{color = 0xcccccc, text = 'Ping: ', value = num($pingaverage)},&#10;&#9;{color = 0xc6b2ea, text = 'ItemID: ', value = $cursorinfo.id},&#10;&#9;{color = 0xc6b2ea, text = 'Posx: ', value = $cursorinfo.x},&#10;&#9;{color = 0xc6b2ea, text = 'PosY: ', value = $cursorinfo.y},&#10;}&#10;&#10;if (displayontitle) then&#10;&#9;local x = 0&#10;&#9;for _,j in ipairs(info) do&#10;&#9;&#9;local str = j.text .. j.value&#10;&#9;&#9;local w = measurestring(str)&#10;&#9;&#9;&#10;&#9;&#9;setfontcolor(j.color)&#10;&#9;&#9;drawtext(str, x, 0)&#10;&#9;&#9;x = x + w + 50&#10;&#9;end&#10;&#10;&#9;setposition($clientwin.left + 30, $clientwin.top - 21)&#10;else&#10;&#9;for i,j in ipairs(info) do&#10;&#9;&#9;local w = measurestring(j.value)&#10;&#9;&#9;local posy = (i-1)*fontspacing&#10;&#9;&#9;&#10;&#9;&#9;setfontcolor(j.color)&#10;&#9;&#9;drawtext(j.text, 2, posy)&#10;&#9;&#9;drawtext(j.value, maxsize-w, posy)&#10;&#9;end&#10;&#9;&#10;&#9;setposition($worldwin.left+20, $worldwin.top+8)&#10;end" enabled="no" refreshRate="100"/>
        </HUDScripts>
    </HUDs>
    <GeneralSettings>
        <Input>
            <MouseOption mouseMode="Simulate Mouse"/>
            <MouseOption scrollMode="Use mouse wheel"/>
            <MouseOption stuckCursorPolicy="If Cavebot on, Release Instantly"/>
            <MouseOption moveSpeed="Instantaneous"/>
            <MouseOption clickWaitMin="30" clickWaitMax="30"/>
            <KeyboardOption keyboardMode="Simulate Keyboard"/>
            <KeyboardOption stuckCtrlShiftPolicy="If Cavebot on, Release Instantly"/>
            <KeyboardOption typeWaitMin="30" typeWaitMax="30"/>
            <KeyboardOption pressWaitMin="30" pressWaitMax="30"/>
            <FocusOption focusPolicy="Don't auto-focus"/>
            <FocusOption openMenuPolicy="Confirm if cavebotting"/>
        </Input>
    </GeneralSettings>
    <Alerts disableSounds="no">
        <alert name="Player On Screen" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Player Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Monster Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Private Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Default Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="GM Detected" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Disconnected" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Character Stuck" playSound="no" pauseBot="no" logout="no" standTime="30000"/>
        <alert name="Health Below" playSound="no" pauseBot="no" logout="no" healthPercent="50"/>
        <alert name="Mana Below" playSound="no" pauseBot="no" logout="no" manaPercent="50"/>
        <alert name="Unjust Kill" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Enemies Online" playSound="no" pauseBot="no" logout="no" enemiesCount="50"/>
    </Alerts>
    <Cavebot enabled="no">
        <Options>
            <Option shovel="9594"/>
            <Option rope="3003"/>
            <Option machete="3308"/>
            <Option pick="3456"/>
            <Option nodeRange="4"/>
            <Option pauseBotOnDeath="yes"/>
            <Option refillAmmo="no" refillAmmoMin="30" refillAmmoMax="70"/>
            <Option autoMount="yes"/>
            <Option fireAvoidanceMin="0" fireAvoidanceMax="0"/>
            <Option energyAvoidanceMin="0" energyAvoidanceMax="0"/>
            <Option poisonAvoidanceMin="0" poisonAvoidanceMax="0"/>
            <Option walkThroughPlayers="yes"/>
            <Option walkMethod="Walk With Map-Clicks"/>
            <Option walkableItems="7, 140, 404, 831, 832, 833, 834, 883, 1020, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2131, 2132, 2133, 2134, 2135, 2314, 2315, 2316, 2319, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2431, 2432, 2433, 2434, 2441, 2442, 2443, 2444, 2469, 2471, 2472, 2473, 2478, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2519, 2523, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2981, 2982, 2983, 2984, 2985, 2987, 2988, 3503, 3504, 3514, 3807, 5086, 5087, 5088, 6114, 6115, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6371, 6372, 7864, 8455, 8763, 9061, 9062, 10209, 10216, 10286, 10287, 10288, 11009, 11010, 11011, 11800, 11801, 11802, 11803, 11804, 11805, 11806, 11807, 11808, 11809, 11810, 17972"/>
            <Option mapWalkDistMin="20" mapWalkDistMax="30"/>
            <Option userOptionsScript="    {&#10;    &quot;type&quot;: &quot;scriptinfo&quot;,&#10;    &quot;name&quot;: &quot;RP - Annihilator by Yoko&quot;,&#10;    &quot;version&quot;: &quot;1.0.0&quot;&#10;    },&#10;&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;text&quot; : &quot;Reminder&quot;,&#10;    &quot;name&quot; : &quot;Reminder&quot;,&#10;    &quot;children&quot; : [&#10;&#10;&#9;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;name&quot; : &quot;&lt;-- Remember to change rope!&quot;&#10;}&#10;    ]&#10;    },&#10;{&#10;&#10;&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Character Backpacks Setup&quot;,&#10;    &quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;mainbp&quot;,&#10;&quot;text&quot; : &quot;Main BP&quot;,&#10;&quot;description&quot; : &quot;Backpack on character's back&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;ammobp&quot;,&#10;&quot;text&quot; : &quot;Ammo BP&quot;,&#10;&quot;description&quot; : &quot;Backpack with supplies inside main backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;potionbp&quot;,&#10;&quot;text&quot; : &quot;Potion BP&quot;,&#10;&quot;description&quot; : &quot;Backpack with potions inside main backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;lootbp&quot;,&#10;&quot;text&quot; : &quot;Loot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for loot inside main backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                }&#10;    ]&#10;    },&#10;&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Depot Backpacks Setup&quot;,&#10;&#9;&quot;column&quot; : 2,&#10;    &quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;maindpbp&quot;,&#10;&quot;text&quot; : &quot;Main Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack inside depot chest&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;stackdpbp&quot;,&#10;&quot;text&quot; : &quot;Stackable Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for stackable items inside main depot backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;raredpbp&quot;,&#10;&quot;text&quot; : &quot;Rare Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for rare items inside main depot backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;ringdpbp&quot;,&#10;&quot;text&quot; : &quot;Ring Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for Dwarven Rings inside depot chest&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;ammodpbp&quot;,&#10;&quot;text&quot; : &quot;Ammo Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for Ammunition inside depot chest&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                }&#10;    ]&#10;    },&#10;    {&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Potions Setup&quot;,&#10;&#9;&quot;column&quot;:2,&#10;    &quot;children&quot; : [&#10;    {&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;maxsmp&quot;,&#10;    &quot;text&quot; : &quot;Max Strong Mana potion&quot;,&#10;    &quot;description&quot; : &quot;Amount of strong mana potions to buy&quot;,&#10;    &quot;suffix&quot; : &quot; SMP&quot;,&#10;    &quot;min&quot; : 100,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 700&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;minsmp&quot;,&#10;    &quot;text&quot; : &quot;Min Strong Mana potion&quot;,&#10;    &quot;description&quot; : &quot;Amount of strong mana potions to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; MP&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 100&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;maxgsp&quot;,&#10;    &quot;text&quot; : &quot;Max Great Spirit Potions&quot;,&#10;    &quot;description&quot; : &quot;Amount of great spirit potions to buy&quot;,&#10;    &quot;suffix&quot; : &quot; GSP&quot;,&#10;    &quot;min&quot; : 10,&#10;    &quot;max&quot; : 1000,&#10;    &quot;value&quot; : 100&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;mingsp&quot;,&#10;    &quot;text&quot; : &quot;Min Great Spirit Potions&quot;,&#10;    &quot;description&quot; : &quot;Amount of great spirit potions to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; GSP&quot;,&#10;    &quot;min&quot; : 0,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 30&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;maxew&quot;,&#10;    &quot;text&quot; : &quot;Max Energy Wall Runes&quot;,&#10;    &quot;description&quot; : &quot;Amount of energy wall runes to buy&quot;,&#10;    &quot;suffix&quot; : &quot; EW&quot;,&#10;    &quot;min&quot; : 0,&#10;    &quot;max&quot; : 10000,&#10;    &quot;value&quot; : 300&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;minew&quot;,&#10;    &quot;text&quot; : &quot;Min Energy Wall Runes&quot;,&#10;    &quot;description&quot; : &quot;Amount of energy wall runes to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; EW&quot;,&#10;    &quot;min&quot; : 0,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 30&#10;    },&#10;&#10;&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;ammotype&quot;,&#10;&quot;text&quot; : &quot;Ammo type&quot;,&#10;&quot;description&quot; : &quot;Ammunition type to use&quot;,&#10;&quot;items&quot; : [&quot;Prismatic Bolt[[item: Prismatic Bolt]]&quot;,&quot;Crystalline Arrow[[item: Crystalline Arrow]]&quot;,&quot;Infernal Bolt[[item: Infernal Bolt]]&quot;]&#10;                },&#10;&#9;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;name&quot; : &quot;infoammob&quot;,&#10;&quot;text&quot; : &quot;Rembmber that if you want to use infernal bolt, you need to enable 'Take ammo from Depot'&quot;&#10;},&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;maxammo&quot;,&#10;    &quot;text&quot; : &quot;Max Ammo&quot;,&#10;    &quot;description&quot; : &quot;Amount of ammo to buy&quot;,&#10;    &quot;suffix&quot; : &quot; Ammo&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 900&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;minammo&quot;,&#10;    &quot;text&quot; : &quot;Min Ammo&quot;,&#10;    &quot;description&quot; : &quot;Amount of ammo to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; Ammo&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 130&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;mincap&quot;,&#10;    &quot;text&quot; : &quot;Min Cap&quot;,&#10;    &quot;description&quot; : &quot;Amount of cap to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; Cap&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 130&#10;    }&#10;    ]&#10;    },&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Extra Options&quot;,&#9;&#10;&#9;&quot;column&quot; : 1,&#10;    &quot;children&quot; : [&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;takeammofromdp&quot;,&#10;&quot;text&quot; : &quot;Take ammo from Depot&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will Try to take ammunition from depot&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;pvpe&quot;,&#10;&quot;text&quot; : &quot;Server PvPe&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will consider players with&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;traymessages&quot;,&#10;&quot;text&quot; : &quot;Tray Messages&quot;,&#10;&quot;description&quot; : &quot;When windbot is minimized to tray (next to clock) then you will be notified about advance in level / skill, task done, someone on spawn, someone attack you, character death&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;&#10;&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;usealertonspawn&quot;,&#10;&quot;text&quot; : &quot;Player On Spawn Alert&quot;,&#10;&quot;description&quot; : &quot;If Checked, bot will alert you if someone enter spawn&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;keephaste&quot;,&#10;&quot;text&quot; : &quot;Keep Haste&quot;,&#10;&quot;description&quot; : &quot;If you enable this checkbox then character will use utani hur if he have not speed up&quot;,&#10;&quot;value&quot; : true&#9;&#10;&#10;}&#10;]&#10;},&#10;{&#10;&quot;type&quot; : &quot;group&quot;,&#10;&quot;name&quot; : &quot;Sell Items On Market&quot;, &#10;&quot;column&quot; : 1, &#10;&quot;checkable&quot; : true,&#10;&quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;name&quot; : &quot;Enable checkbox to see market items list&quot;,&#10;&quot;text&quot; : &quot;Enable checkbox to see market items list&quot;,&#10;&quot;description&quot; : &quot;If You select this checkbox then u will see list of items to sell&quot;&#10;},&#10;&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;createnewoffer&quot;,&#10;&quot;text&quot; : &quot;Create new offers in market&quot;,&#10;&quot;description&quot; : &quot;Character will create new offer in market if he couldnt sell items for their Sell&quot;,&#10;&quot;value&quot; : false&#10;},&#10;&#9;{&#10;&quot;type&quot; : &quot;separator&quot;&#10;},&#10;&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellsoulorb&quot;,&#10;&quot;text&quot; : &quot;Sell Soul Orb&quot;,&#10;&quot;description&quot; : &quot;Sell Soul Orb on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgreatspiritpotion&quot;,&#10;&quot;text&quot; : &quot;Sell Great Spirit Potion&quot;,&#10;&quot;description&quot; : &quot;Sell Great Spirit Potion on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellredpieceofcloth&quot;,&#10;&quot;text&quot; : &quot;Sell Red Piece of Cloth&quot;,&#10;&quot;description&quot; : &quot;Sell Red Piece of Cloth on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgreenpieceofcloth&quot;,&#10;&quot;text&quot; : &quot;Sell Green Piece of Cloth&quot;,&#10;&quot;description&quot; : &quot;Sell Green Piece of Cloth on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;selldemonhorn&quot;,&#10;&quot;text&quot; : &quot;Sell Demon Horn&quot;,&#10;&quot;description&quot; : &quot;Sell Demon Horn on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgreathealthpotion&quot;,&#10;&quot;text&quot; : &quot;Sell Great Health Potion&quot;,&#10;&quot;description&quot; : &quot;Sell Great Health Potion on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;selldemonicessence&quot;,&#10;&quot;text&quot; : &quot;Sell Demonic Essence&quot;,&#10;&quot;description&quot; : &quot;Sell Demonic Essence on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellbluepieceofcloth&quot;,&#10;&quot;text&quot; : &quot;Sell Blue Piece of Cloth&quot;,&#10;&quot;description&quot; : &quot;Sell Blue Piece of Cloth on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellyellowpieceofcloth&quot;,&#10;&quot;text&quot; : &quot;Sell Yellow Piece of Cloth&quot;,&#10;&quot;description&quot; : &quot;Sell Yellow Piece of Cloth on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellbootsofhaste&quot;,&#10;&quot;text&quot; : &quot;Sell Boots of Haste&quot;,&#10;&quot;description&quot; : &quot;Sell Boots of Haste on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellstoneskinamulet&quot;,&#10;&quot;text&quot; : &quot;Sell Stone Skin Amulet&quot;,&#10;&quot;description&quot; : &quot;Sell Stone Skin Amulet on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgreatmanapotion&quot;,&#10;&quot;text&quot; : &quot;Sell Great Mana Potion&quot;,&#10;&quot;description&quot; : &quot;Sell Great Mana Potion on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellultimatehealthpotion&quot;,&#10;&quot;text&quot; : &quot;Sell Ultimate Health Potion&quot;,&#10;&quot;description&quot; : &quot;Sell Ultimate Health Potion on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;selljewelcase&quot;,&#10;&quot;text&quot; : &quot;Sell Jewel Case&quot;,&#10;&quot;description&quot; : &quot;Sell Jewel Case on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellwhitepieceofcloth&quot;,&#10;&quot;text&quot; : &quot;Sell White Piece of Cloth&quot;,&#10;&quot;description&quot; : &quot;Sell White Piece of Cloth on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellbrownpieceofcloth&quot;,&#10;&quot;text&quot; : &quot;Sell Brown Piece of Cloth&quot;,&#10;&quot;description&quot; : &quot;Sell Brown Piece of Cloth on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellamuletofloss&quot;,&#10;&quot;text&quot; : &quot;Sell Amulet of Loss&quot;,&#10;&quot;description&quot; : &quot;Sell Amulet of Loss on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellbluegem&quot;,&#10;&quot;text&quot; : &quot;Sell Blue Gem&quot;,&#10;&quot;description&quot; : &quot;Sell Blue Gem on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellsteelboots&quot;,&#10;&quot;text&quot; : &quot;Sell Steel Boots&quot;,&#10;&quot;description&quot; : &quot;Sell Steel Boots on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgoldenboots&quot;,&#10;&quot;text&quot; : &quot;Sell Golden Boots&quot;,&#10;&quot;description&quot; : &quot;Sell Golden Boots on market&quot;,&#10;&quot;value&quot; : true&#10;}&#10;]&#10;},&#10;{&#10;&quot;type&quot; : &quot;group&quot;,&#10;&quot;name&quot; : &quot;Market Prices&quot;,&#10;&quot;column&quot; : 2,&#10;&quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricesoulorb&quot;,&#10;&quot;text&quot; : &quot;Price Soul Orb&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricegreatspiritpotion&quot;,&#10;&quot;text&quot; : &quot;Price Great Spirit Potion&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceredpieceofcloth&quot;,&#10;&quot;text&quot; : &quot;Price Red Piece of Cloth&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricegreenpieceofcloth&quot;,&#10;&quot;text&quot; : &quot;Price Green Piece of Cloth&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricedemonhorn&quot;,&#10;&quot;text&quot; : &quot;Price Demon Horn&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricegreathealthpotion&quot;,&#10;&quot;text&quot; : &quot;Price Great Health Potion&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricedemonicessence&quot;,&#10;&quot;text&quot; : &quot;Price Demonic Essence&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricebluepieceofcloth&quot;,&#10;&quot;text&quot; : &quot;Price Blue Piece of Cloth&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceyellowpieceofcloth&quot;,&#10;&quot;text&quot; : &quot;Price Yellow Piece of Cloth&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricebootsofhaste&quot;,&#10;&quot;text&quot; : &quot;Price Boots of Haste&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricestoneskinamulet&quot;,&#10;&quot;text&quot; : &quot;Price Stone Skin Amulet&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricegreatmanapotion&quot;,&#10;&quot;text&quot; : &quot;Price Great Mana Potion&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceultimatehealthpotion&quot;,&#10;&quot;text&quot; : &quot;Price Ultimate Health Potion&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricejewelcase&quot;,&#10;&quot;text&quot; : &quot;Price Jewel Case&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricewhitepieceofcloth&quot;,&#10;&quot;text&quot; : &quot;Price White Piece of Cloth&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricebrownpieceofcloth&quot;,&#10;&quot;text&quot; : &quot;Price Brown Piece of Cloth&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceamuletofloss&quot;,&#10;&quot;text&quot; : &quot;Price Amulet of Loss&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricebluegem&quot;,&#10;&quot;text&quot; : &quot;Price Blue Gem&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricesteelboots&quot;,&#10;&quot;text&quot; : &quot;Price Steel Boots&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricegoldenboots&quot;,&#10;&quot;text&quot; : &quot;Price Golden Boots&quot;,&#10;&quot;suffix&quot; : &quot; GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 0&#10;}&#10;]&#10;}"/>
        </Options>
        <SpecialAreas>
            <Area name="SArea" x="33192" y="31691" z="11" type="Square (Filled)" width="11" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea1" x="33201" y="31690" z="11" type="Square (Filled)" width="1" height="11" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea2" x="33192" y="31699" z="11" type="Square (Filled)" width="11" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea3" x="33193" y="31690" z="11" type="Square (Filled)" width="1" height="11" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea4" x="32657" y="31681" z="8" type="Square (Filled)" width="11" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea5" x="32666" y="31680" z="8" type="Square (Filled)" width="1" height="11" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea6" x="32657" y="31689" z="8" type="Square (Filled)" width="11" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea7" x="32658" y="31680" z="8" type="Square (Filled)" width="1" height="11" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea8" x="33188" y="31682" z="14" type="Square (Filled)" width="1" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Cavebot" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
        </SpecialAreas>
        <CavebotScripts/>
        <WaypointSection name="Refill">
            <Waypoint type="Node" x="33171" y="31812" z="7" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Action" x="33171" y="31796" z="8" rangeX="1" rangeY="1" label="healing" script="setsetting('Cavebot/WalkingMethod', 'Walk With Arrow Keys')&#10;setsetting('Looting/Enabled', 'yes')&#10;setsetting('SpellHealer/Enabled', 'yes')"/>
            <Waypoint type="Stand" x="33169" y="31812" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33171" y="31808" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33171" y="31800" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33171" y="31800" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33171" y="31800" z="8" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;start&quot;)&#10;end"/>
            <Waypoint type="Action" x="33171" y="31800" z="8" rangeX="1" rangeY="1" script="depot()"/>
            <Waypoint type="Action" x="33171" y="31797" z="8" rangeX="1" rangeY="1" script="if ammotype == &quot;Infernal Bolt&quot; and itemcount(ammotype, ammobp) &lt; maxammo then&#10;messagebox(&quot;HEY!&quot;,&quot;You have not enough infernal bolts inside ammo depot backpack and character cant buy them anywhere please put more infernal bolts inside ammo depot backpack or change ammo type&quot;)&#10;setsetting('Cavebot/Enabled', 'no')&#10;end"/>
            <Waypoint type="Stand" x="33170" y="31805" z="8" rangeX="1" rangeY="1" label="gotobank"/>
            <Waypoint type="Stand" x="33170" y="31812" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33169" y="31812" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33173" y="31803" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33173" y="31803" z="7" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gotobank&quot;)&#10;end"/>
            <Waypoint type="Action" x="33173" y="31803" z="7" rangeX="1" rangeY="1" script="withdrawmoney()"/>
            <Waypoint type="Stand" x="33172" y="31806" z="7" rangeX="1" rangeY="1" label="gotovenore"/>
            <Waypoint type="Node" x="33190" y="31817" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33193" y="31821" z="7" rangeX="1" rangeY="1" script="if itemcount(&quot;energy wall rune&quot;) &gt;= maxew then&#10;gotolabel(&quot;norunes&quot;)&#10;end"/>
            <Waypoint type="Node" x="33192" y="31789" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33190" y="31778" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33178" y="31776" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33175" y="31775" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Ladder" x="33175" y="31775" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33176" y="31765" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33176" y="31765" z="6" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gotovenore&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33176" y="31765" z="6" rangeX="1" rangeY="1" label="sailtov"/>
            <Waypoint type="Action" x="33176" y="31765" z="6" rangeX="1" rangeY="1" script="local cre = getcreature(&quot;Captain Seahorse&quot;)&#10;if cre.onscreen then&#10;if cre.dist &gt;= 3 then&#10;reachcreature(&quot;Captain Seahorse&quot;)&#10;wait(200)&#10;travel(&quot;venore&quot;)&#10;else&#10;travel(&quot;venore&quot;)&#10;end&#10;end"/>
            <Waypoint type="Stand" x="32954" y="32023" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32954" y="32023" z="6" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;sailtov&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32954" y="32023" z="6" rangeX="1" rangeY="1" label="gotovenoremshop"/>
            <Waypoint type="Node" x="32954" y="32037" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32056" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32072" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32972" y="32073" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32971" y="32082" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32971" y="32082" z="6" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gotovenoremshop&quot;)&#10;end"/>
            <Waypoint type="Action" x="32971" y="32082" z="6" rangeX="1" rangeY="1" script="buyrune(&quot;energy wall rune&quot;,maxew)"/>
            <Waypoint type="Stand" x="32971" y="32082" z="6" rangeX="1" rangeY="1" label="backtoedron"/>
            <Waypoint type="Node" x="32971" y="32073" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32953" y="32068" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32953" y="32048" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32954" y="32023" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32954" y="32023" z="6" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;backtoedron&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32954" y="32023" z="6" rangeX="1" rangeY="1" label="sailtoe"/>
            <Waypoint type="Action" x="32954" y="32023" z="6" rangeX="1" rangeY="1" script="local cre = getcreature(&quot;Captain Fearless&quot;)&#10;if cre.onscreen then&#10;if cre.dist &gt;= 3 then&#10;reachcreature(&quot;Captain Fearless&quot;)&#10;wait(200)&#10;travel(&quot;edron&quot;)&#10;else&#10;travel(&quot;edron&quot;)&#10;end&#10;end"/>
            <Waypoint type="Stand" x="33175" y="31764" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33175" y="31764" z="6" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;sailtoe&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33175" y="31767" z="6" rangeX="1" rangeY="1" label="goforammo"/>
            <Waypoint type="Stand" x="33175" y="31771" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33175" y="31775" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33183" y="31777" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33190" y="31781" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33193" y="31790" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33202" y="31789" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33208" y="31789" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Ladder" x="33208" y="31789" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33213" y="31796" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33213" y="31796" z="6" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;goforammo&quot;)&#10;end"/>
            <Waypoint type="Action" x="33213" y="31796" z="6" rangeX="1" rangeY="1" script="ammoshop()"/>
            <Waypoint type="Stand" x="33213" y="31796" z="6" rangeX="1" rangeY="1" label="gotoedronmshop"/>
            <Waypoint type="Node" x="33209" y="31801" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33209" y="31807" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33209" y="31814" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33209" y="31818" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33201" y="31819" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33194" y="31820" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33193" y="31833" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33208" y="31843" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33222" y="31841" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33237" y="31841" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33247" y="31841" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33255" y="31838" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33255" y="31840" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33255" y="31840" z="7" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gotoedronmshop&quot;)&#10;end"/>
            <Waypoint type="Action" x="33255" y="31840" z="7" rangeX="1" rangeY="1" script="suppshop()"/>
            <Waypoint type="Stand" x="33255" y="31839" z="7" rangeX="1" rangeY="1" label="alldone"/>
            <Waypoint type="Stand" x="33255" y="31838" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33253" y="31841" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33251" y="31841" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33247" y="31841" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33237" y="31840" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33237" y="31840" z="7" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;alldone&quot;)&#10;end"/>
            <Waypoint type="Action" x="33237" y="31840" z="7" rangeX="1" rangeY="1" script="bpsforhunt()"/>
            <Waypoint type="Action" x="33237" y="31840" z="7" rangeX="1" rangeY="1" script="if  itemcount(mptype)+10 &lt; maxsmp or itemcount(&quot;energy wall rune&quot;)+5 &lt; maxew then&#10;gotolabel(&quot;backtorefillagain&quot;)&#10;else&#10;gotolabel(&quot;runtohunt&quot;)&#10;setsetting('Cavebot/WalkingMethod', 'Walk With Map-Clicks')&#10;end"/>
            <Waypoint type="Stand" x="33229" y="31841" z="7" rangeX="1" rangeY="1" label="backtorefillagain"/>
            <Waypoint type="Stand" x="33214" y="31843" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33203" y="31843" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33195" y="31839" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33191" y="31827" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33182" y="31820" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33173" y="31816" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33173" y="31816" z="7" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;backtorefillagain&quot;)&#10;else&#10;gotolabel(&quot;start&quot;)&#10;end"/>
            <Waypoint type="Node" x="33249" y="31769" z="7" rangeX="1" rangeY="1" label="runtohunt"/>
            <Waypoint type="Action" x="33164" y="31641" z="13" rangeX="1" rangeY="1" script="running = true"/>
            <Waypoint type="Stand" x="33241" y="31767" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33224" y="31769" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33215" y="31761" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33216" y="31757" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33215" y="31740" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33190" y="31707" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33176" y="31655" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33171" y="31650" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33162" y="31643" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33163" y="31637" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33163" y="31636" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33162" y="31629" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33161" y="31624" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33154" y="31624" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33141" y="31623" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33141" y="31612" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33143" y="31607" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33148" y="31605" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33149" y="31601" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33148" y="31597" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33144" y="31597" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33140" y="31596" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33138" y="31595" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33136" y="31593" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33138" y="31594" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33138" y="31594" z="10" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;runtohunt&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33139" y="31595" z="10" rangeX="1" rangeY="1" label="cave1"/>
            <Waypoint type="Node" x="33150" y="31595" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33166" y="31596" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33169" y="31588" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33164" y="31593" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33155" y="31595" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33150" y="31595" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33150" y="31597" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33143" y="31601" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33139" y="31593" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33144" y="31589" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33146" y="31594" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33146" y="31594" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;cave1&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33146" y="31595" z="13" rangeX="1" rangeY="1" label="cave2"/>
            <Waypoint type="Node" x="33146" y="31606" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33146" y="31615" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33146" y="31638" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33157" y="31642" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33162" y="31642" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33169" y="31642" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33176" y="31642" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33182" y="31642" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33188" y="31642" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33191" y="31642" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33191" y="31648" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33192" y="31653" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33192" y="31653" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;cave2&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33192" y="31656" z="13" rangeX="1" rangeY="1" label="wejscienawarlocki"/>
            <Waypoint type="Stand" x="33192" y="31658" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33192" y="31662" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33192" y="31665" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33187" y="31675" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33190" y="31683" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Use" x="33190" y="31684" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33190" y="31686" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33190" y="31686" z="14" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;gotolabel(&quot;wejscienawarlocki&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33192" y="31690" z="14" rangeX="1" rangeY="1" label="passhff"/>
            <Waypoint type="Stand" x="33192" y="31691" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33168" y="31690" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33168" y="31693" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33169" y="31698" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33168" y="31703" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33168" y="31707" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33168" y="31710" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33168" y="31712" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33168" y="31712" z="14" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;passhff&quot;)&#10;else&#10;keepring = true&#10;end&#10;"/>
            <Waypoint type="Stand" x="33169" y="31706" z="14" rangeX="1" rangeY="1" label="gotozugu"/>
            <Waypoint type="Action" x="33169" y="31706" z="14" rangeX="1" rangeY="1" script="if islocation(1) then&#10;while $mppc &lt; 95 do&#10;useoncreature(mptype,$self)&#10;waitping()&#10;end&#10;end&#10;setsetting('Looting/Enabled', 'no')&#10;setsetting('Targeting/Enabled', 'no')&#10;running = true&#10;"/>
            <Waypoint type="Stand" x="33169" y="31706" z="14" rangeX="1" rangeY="1" label="gtz1"/>
            <Waypoint type="Stand" x="33169" y="31705" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33070" y="31782" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33070" y="31782" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz1&quot;)&#10;end"/>
            <Waypoint type="Node" x="33077" y="31787" z="13" rangeX="1" rangeY="1" label="gtz2"/>
            <Waypoint type="Action" x="33077" y="31787" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz2&quot;)&#10;end"/>
            <Waypoint type="Node" x="33084" y="31787" z="13" rangeX="1" rangeY="1" label="gtz3"/>
            <Waypoint type="Action" x="33084" y="31787" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz3&quot;)&#10;end"/>
            <Waypoint type="Node" x="33090" y="31783" z="13" rangeX="1" rangeY="1" label="gtz4"/>
            <Waypoint type="Action" x="33090" y="31783" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz4&quot;)&#10;end"/>
            <Waypoint type="Node" x="33096" y="31781" z="13" rangeX="1" rangeY="1" label="gtz5"/>
            <Waypoint type="Action" x="33096" y="31781" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz5&quot;)&#10;end"/>
            <Waypoint type="Node" x="33102" y="31777" z="13" rangeX="1" rangeY="1" label="gtz6"/>
            <Waypoint type="Action" x="33102" y="31777" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz6&quot;)&#10;end"/>
            <Waypoint type="Node" x="33108" y="31772" z="13" rangeX="1" rangeY="1" label="gtz7"/>
            <Waypoint type="Action" x="33108" y="31772" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz7&quot;)&#10;end"/>
            <Waypoint type="Node" x="33113" y="31767" z="13" rangeX="1" rangeY="1" label="gtz8"/>
            <Waypoint type="Action" x="33113" y="31767" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz8&quot;)&#10;end"/>
            <Waypoint type="Node" x="33121" y="31767" z="13" rangeX="1" rangeY="1" label="gtz9"/>
            <Waypoint type="Action" x="33121" y="31767" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz9&quot;)&#10;end"/>
            <Waypoint type="Node" x="33126" y="31771" z="13" rangeX="1" rangeY="1" label="gtz10"/>
            <Waypoint type="Action" x="33126" y="31771" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz10&quot;)&#10;end"/>
            <Waypoint type="Node" x="33131" y="31776" z="13" rangeX="1" rangeY="1" label="gtz11"/>
            <Waypoint type="Action" x="33131" y="31776" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz11&quot;)&#10;end"/>
            <Waypoint type="Node" x="33131" y="31784" z="13" rangeX="1" rangeY="1" label="gtz12"/>
            <Waypoint type="Action" x="33131" y="31784" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz12&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33127" y="31788" z="13" rangeX="1" rangeY="1" label="gtz13"/>
            <Waypoint type="Action" x="33127" y="31788" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz13&quot;)&#10;end"/>
            <Waypoint type="Node" x="33119" y="31791" z="13" rangeX="1" rangeY="1" label="gtz14"/>
            <Waypoint type="Action" x="33119" y="31791" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz14&quot;)&#10;end"/>
            <Waypoint type="Node" x="33113" y="31792" z="13" rangeX="1" rangeY="1" label="gtz15"/>
            <Waypoint type="Action" x="33113" y="31792" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz15&quot;)&#10;end"/>
            <Waypoint type="Node" x="33107" y="31792" z="13" rangeX="1" rangeY="1" label="gtz16"/>
            <Waypoint type="Action" x="33107" y="31792" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz16&quot;)&#10;end"/>
            <Waypoint type="Node" x="33102" y="31792" z="13" rangeX="1" rangeY="1" label="gtz17"/>
            <Waypoint type="Action" x="33102" y="31792" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz17&quot;)&#10;end"/>
            <Waypoint type="Node" x="33097" y="31793" z="13" rangeX="1" rangeY="1" label="gtz18"/>
            <Waypoint type="Action" x="33097" y="31793" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz18&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33095" y="31793" z="13" rangeX="1" rangeY="1" label="gtz19"/>
            <Waypoint type="Stand" x="33094" y="31791" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33094" y="31791" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz19&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33100" y="31789" z="12" rangeX="1" rangeY="1" label="gtz20"/>
            <Waypoint type="Stand" x="33106" y="31789" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33107" y="31788" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33107" y="31788" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz20&quot;)&#10;end"/>
            <Waypoint type="Node" x="33105" y="31782" z="11" rangeX="1" rangeY="1" label="gtz21"/>
            <Waypoint type="Action" x="33105" y="31782" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz21&quot;)&#10;end"/>
            <Waypoint type="Node" x="33099" y="31779" z="11" rangeX="1" rangeY="1" label="gtz22"/>
            <Waypoint type="Action" x="33099" y="31779" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz22&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33094" y="31779" z="11" rangeX="1" rangeY="1" label="gtz23"/>
            <Waypoint type="Stand" x="33093" y="31778" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33091" y="31775" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33091" y="31775" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz23&quot;)&#10;end"/>
            <Waypoint type="Node" x="33094" y="31770" z="12" rangeX="1" rangeY="1" label="gtz24"/>
            <Waypoint type="Action" x="33094" y="31770" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz24&quot;)&#10;end"/>
            <Waypoint type="Node" x="33101" y="31765" z="12" rangeX="1" rangeY="1" label="gtz25"/>
            <Waypoint type="Action" x="33101" y="31765" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz25&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33104" y="31760" z="12" rangeX="1" rangeY="1" label="gtz26"/>
            <Waypoint type="Stand" x="33104" y="31759" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33102" y="31758" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33102" y="31758" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz26&quot;)&#10;end"/>
            <Waypoint type="Node" x="33095" y="31760" z="11" rangeX="1" rangeY="1" label="gtz27"/>
            <Waypoint type="Action" x="33095" y="31760" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz27&quot;)&#10;end"/>
            <Waypoint type="Node" x="33088" y="31762" z="11" rangeX="1" rangeY="1" label="gtz28"/>
            <Waypoint type="Action" x="33088" y="31762" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz28&quot;)&#10;end"/>
            <Waypoint type="Node" x="33086" y="31769" z="11" rangeX="1" rangeY="1" label="gtz29"/>
            <Waypoint type="Action" x="33086" y="31769" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz29&quot;)&#10;end"/>
            <Waypoint type="Node" x="33086" y="31776" z="11" rangeX="1" rangeY="1" label="gtz30"/>
            <Waypoint type="Action" x="33086" y="31776" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz30&quot;)&#10;end"/>
            <Waypoint type="Node" x="33086" y="31782" z="11" rangeX="1" rangeY="1" label="gtz31"/>
            <Waypoint type="Action" x="33086" y="31782" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz31&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33084" y="31784" z="11" rangeX="1" rangeY="1" label="gtz32"/>
            <Waypoint type="Stand" x="33084" y="31785" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33084" y="31788" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33084" y="31788" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz32&quot;)&#10;end"/>
            <Waypoint type="Node" x="33082" y="31795" z="12" rangeX="1" rangeY="1" label="gtz33"/>
            <Waypoint type="Action" x="33082" y="31795" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz33&quot;)&#10;end"/>
            <Waypoint type="Node" x="33082" y="31803" z="12" rangeX="1" rangeY="1" label="gtz34"/>
            <Waypoint type="Action" x="33082" y="31803" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz34&quot;)&#10;end"/>
            <Waypoint type="Node" x="33076" y="31807" z="12" rangeX="1" rangeY="1" label="gtz35"/>
            <Waypoint type="Action" x="33076" y="31807" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz35&quot;)&#10;end"/>
            <Waypoint type="Node" x="33067" y="31807" z="12" rangeX="1" rangeY="1" label="gtz36"/>
            <Waypoint type="Action" x="33067" y="31807" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz36&quot;)&#10;end"/>
            <Waypoint type="Node" x="33057" y="31807" z="12" rangeX="1" rangeY="1" label="gtz37"/>
            <Waypoint type="Action" x="33057" y="31807" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz37&quot;)&#10;end"/>
            <Waypoint type="Node" x="33051" y="31803" z="12" rangeX="1" rangeY="1" label="gtz38"/>
            <Waypoint type="Action" x="33051" y="31803" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz38&quot;)&#10;end"/>
            <Waypoint type="Node" x="33051" y="31795" z="12" rangeX="1" rangeY="1" label="gtz39"/>
            <Waypoint type="Action" x="33051" y="31795" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz39&quot;)&#10;end"/>
            <Waypoint type="Node" x="33050" y="31787" z="12" rangeX="1" rangeY="1" label="gtz40"/>
            <Waypoint type="Action" x="33050" y="31787" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz40&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33050" y="31785" z="12" rangeX="1" rangeY="1" label="gtz41"/>
            <Waypoint type="Stand" x="33050" y="31784" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33048" y="31787" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33048" y="31787" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz41&quot;)&#10;end"/>
            <Waypoint type="Node" x="33048" y="31794" z="11" rangeX="1" rangeY="1" label="gtz42"/>
            <Waypoint type="Action" x="33048" y="31794" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz42&quot;)&#10;end"/>
            <Waypoint type="Node" x="33052" y="31799" z="11" rangeX="1" rangeY="1" label="gtz43"/>
            <Waypoint type="Action" x="33052" y="31799" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz43&quot;)&#10;end"/>
            <Waypoint type="Node" x="33060" y="31799" z="11" rangeX="1" rangeY="1" label="gtz44"/>
            <Waypoint type="Action" x="33060" y="31799" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz44&quot;)&#10;end"/>
            <Waypoint type="Node" x="33065" y="31795" z="11" rangeX="1" rangeY="1" label="gtz45"/>
            <Waypoint type="Action" x="33065" y="31795" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz45&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33066" y="31790" z="11" rangeX="1" rangeY="1" label="gtz46"/>
            <Waypoint type="Stand" x="33066" y="31789" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33064" y="31788" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33064" y="31788" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz46&quot;)&#10;end"/>
            <Waypoint type="Node" x="33063" y="31781" z="12" rangeX="1" rangeY="1" label="gtz47"/>
            <Waypoint type="Action" x="33063" y="31781" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz47&quot;)&#10;end"/>
            <Waypoint type="Node" x="33060" y="31775" z="12" rangeX="1" rangeY="1" label="gtz48"/>
            <Waypoint type="Action" x="33060" y="31775" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz48&quot;)&#10;end"/>
            <Waypoint type="Node" x="33051" y="31775" z="12" rangeX="1" rangeY="1" label="gtz49"/>
            <Waypoint type="Action" x="33051" y="31775" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz49&quot;)&#10;end"/>
            <Waypoint type="Node" x="33044" y="31771" z="12" rangeX="1" rangeY="1" label="gtz50"/>
            <Waypoint type="Action" x="33044" y="31771" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz50&quot;)&#10;end"/>
            <Waypoint type="Node" x="33043" y="31765" z="12" rangeX="1" rangeY="1" label="gtz51"/>
            <Waypoint type="Action" x="33043" y="31765" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz51&quot;)&#10;end"/>
            <Waypoint type="Node" x="33043" y="31757" z="12" rangeX="1" rangeY="1" label="gtz52"/>
            <Waypoint type="Action" x="33043" y="31757" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz52&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33043" y="31755" z="12" rangeX="1" rangeY="1" label="gtz53"/>
            <Waypoint type="Stand" x="33043" y="31754" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33047" y="31753" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33047" y="31753" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz53&quot;)&#10;end"/>
            <Waypoint type="Node" x="33056" y="31753" z="11" rangeX="1" rangeY="1" label="gtz54"/>
            <Waypoint type="Action" x="33056" y="31753" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz54&quot;)&#10;end"/>
            <Waypoint type="Node" x="33062" y="31757" z="11" rangeX="1" rangeY="1" label="gtz55"/>
            <Waypoint type="Action" x="33062" y="31757" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz55&quot;)&#10;end"/>
            <Waypoint type="Node" x="33064" y="31765" z="11" rangeX="1" rangeY="1" label="gtz56"/>
            <Waypoint type="Action" x="33064" y="31765" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz56&quot;)&#10;end"/>
            <Waypoint type="Node" x="33065" y="31775" z="11" rangeX="1" rangeY="1" label="gtz57"/>
            <Waypoint type="Action" x="33065" y="31775" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz57&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33066" y="31778" z="11" rangeX="1" rangeY="1" label="gtz58"/>
            <Waypoint type="Stand" x="33067" y="31778" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33067" y="31776" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33067" y="31776" z="10" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz58&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33065" y="31772" z="10" rangeX="1" rangeY="1" label="beforequaras"/>
            <Waypoint type="Action" x="33065" y="31772" z="10" rangeX="1" rangeY="1" script="-- naladowanie sie mana przed quarami&#10;keepring = false&#10;running = false&#10;if islocation(2) then&#10;while $mppc &lt; 90 do&#10;useoncreature(mptype,$self)&#10;waitping()&#10;end&#10;end&#10;running = true&#10;&#10;&#10;-- dodac zakladanie time ringa&#10;"/>
            <Waypoint type="Stand" x="33065" y="31771" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33170" y="31755" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33170" y="31755" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;beforequaras&quot;)&#10;end"/>
            <Waypoint type="Node" x="33182" y="31758" z="13" rangeX="1" rangeY="1" label="gtz59"/>
            <Waypoint type="Action" x="33182" y="31758" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz59&quot;)&#10;end"/>
            <Waypoint type="Node" x="33188" y="31762" z="13" rangeX="1" rangeY="1" label="gtz60"/>
            <Waypoint type="Action" x="33188" y="31762" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz60&quot;)&#10;end"/>
            <Waypoint type="Node" x="33197" y="31762" z="13" rangeX="1" rangeY="1" label="gtz61"/>
            <Waypoint type="Action" x="33197" y="31762" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz61&quot;)&#10;end"/>
            <Waypoint type="Node" x="33203" y="31758" z="13" rangeX="1" rangeY="1" label="gtz62"/>
            <Waypoint type="Action" x="33203" y="31758" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz62&quot;)&#10;end"/>
            <Waypoint type="Node" x="33206" y="31755" z="13" rangeX="1" rangeY="1" label="gtz63"/>
            <Waypoint type="Action" x="33206" y="31755" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz63&quot;)&#10;end"/>
            <Waypoint type="Node" x="33211" y="31750" z="13" rangeX="1" rangeY="1" label="gtz64"/>
            <Waypoint type="Action" x="33211" y="31750" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz64&quot;)&#10;end"/>
            <Waypoint type="Node" x="33218" y="31748" z="13" rangeX="1" rangeY="1" label="gtz65"/>
            <Waypoint type="Action" x="33218" y="31748" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz65&quot;)&#10;end"/>
            <Waypoint type="Node" x="33225" y="31748" z="13" rangeX="1" rangeY="1" label="gtz66"/>
            <Waypoint type="Action" x="33225" y="31748" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz66&quot;)&#10;end"/>
            <Waypoint type="Node" x="33230" y="31752" z="13" rangeX="1" rangeY="1" label="gtz67"/>
            <Waypoint type="Action" x="33230" y="31752" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz67&quot;)&#10;end"/>
            <Waypoint type="Node" x="33235" y="31756" z="13" rangeX="1" rangeY="1" label="gtz68"/>
            <Waypoint type="Action" x="33235" y="31756" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz68&quot;)&#10;end"/>
            <Waypoint type="Node" x="33241" y="31756" z="13" rangeX="1" rangeY="1" label="gtz69"/>
            <Waypoint type="Action" x="33241" y="31756" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz69&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33243" y="31752" z="13" rangeX="1" rangeY="1" label="gtz70"/>
            <Waypoint type="Action" x="33243" y="31752" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz70&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33248" y="31748" z="13" rangeX="1" rangeY="1" label="gtz71"/>
            <Waypoint type="Action" x="33248" y="31748" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz71&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33259" y="31750" z="13" rangeX="1" rangeY="1" label="gtz72"/>
            <Waypoint type="Action" x="33259" y="31750" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gtz72&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33260" y="31750" z="13" rangeX="1" rangeY="1" label="standonzugu"/>
            <Waypoint type="Stand" x="33126" y="31692" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33126" y="31692" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;standonzugu&quot;)&#10;else&#10;running = false&#10;walkdone = true&#10;setsetting('Looting/Enabled', 'yes')&#10;gotolabel(&quot;start&quot;,&quot;Hunt&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Hunt">
            <Waypoint type="Stand" x="33135" y="31692" z="11" rangeX="1" rangeY="1" label="start"/>
        </WaypointSection>
        <WaypointSection name="North Linia">
            <Waypoint type="Stand" x="33124" y="31688" z="11" rangeX="1" rangeY="1" label="a33124"/>
            <Waypoint type="Action" x="33124" y="31688" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33125" y="31688" z="11" rangeX="1" rangeY="1" label="a33125"/>
            <Waypoint type="Action" x="33125" y="31688" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33126" y="31688" z="11" rangeX="1" rangeY="1" label="a33126"/>
            <Waypoint type="Action" x="33126" y="31688" z="11" rangeX="1" rangeY="1" script="----ew1&#10;checkewall(1)&#10;walk()"/>
            <Waypoint type="Stand" x="33127" y="31688" z="11" rangeX="1" rangeY="1" label="a33127"/>
            <Waypoint type="Action" x="33127" y="31688" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33128" y="31688" z="11" rangeX="1" rangeY="1" label="a33128"/>
            <Waypoint type="Action" x="33128" y="31688" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33129" y="31688" z="11" rangeX="1" rangeY="1" label="a33129"/>
            <Waypoint type="Action" x="33129" y="31688" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33130" y="31688" z="11" rangeX="1" rangeY="1" label="a33130"/>
            <Waypoint type="Action" x="33130" y="31688" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33131" y="31688" z="11" rangeX="1" rangeY="1" label="a33131"/>
            <Waypoint type="Action" x="33131" y="31688" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33132" y="31688" z="11" rangeX="1" rangeY="1" label="a33132"/>
            <Waypoint type="Action" x="33132" y="31688" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33133" y="31688" z="11" rangeX="1" rangeY="1" label="a33133"/>
            <Waypoint type="Action" x="33133" y="31688" z="11" rangeX="1" rangeY="1" script="----ew2&#10;checkewall(2)&#10;walk()"/>
            <Waypoint type="Stand" x="33134" y="31688" z="11" rangeX="1" rangeY="1" label="a33134"/>
            <Waypoint type="Action" x="33134" y="31688" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33135" y="31688" z="11" rangeX="1" rangeY="1" label="a33135"/>
            <Waypoint type="Action" x="33135" y="31688" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33136" y="31688" z="11" rangeX="1" rangeY="1" label="a33136"/>
            <Waypoint type="Action" x="33136" y="31688" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33137" y="31688" z="11" rangeX="1" rangeY="1" label="a33137"/>
            <Waypoint type="Action" x="33137" y="31688" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33138" y="31688" z="11" rangeX="1" rangeY="1" label="a33138"/>
            <Waypoint type="Action" x="33138" y="31688" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33139" y="31688" z="11" rangeX="1" rangeY="1" label="a33139"/>
            <Waypoint type="Action" x="33139" y="31688" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33140" y="31688" z="11" rangeX="1" rangeY="1" label="a33140"/>
            <Waypoint type="Action" x="33140" y="31688" z="11" rangeX="1" rangeY="1" script="----ew3&#10;checkewall(3)&#10;walk()"/>
            <Waypoint type="Stand" x="33141" y="31688" z="11" rangeX="1" rangeY="1" label="a33141"/>
            <Waypoint type="Action" x="33141" y="31688" z="11" rangeX="1" rangeY="1" script="walk()&#10;"/>
            <Waypoint type="Stand" x="33142" y="31688" z="11" rangeX="1" rangeY="1" label="a33142"/>
            <Waypoint type="Action" x="33142" y="31688" z="11" rangeX="1" rangeY="1" script="walk()"/>
        </WaypointSection>
        <WaypointSection name="South Linia">
            <Waypoint type="Stand" x="33124" y="31690" z="11" rangeX="1" rangeY="1" label="a33124"/>
            <Waypoint type="Action" x="33124" y="31690" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33125" y="31690" z="11" rangeX="1" rangeY="1" label="a33125"/>
            <Waypoint type="Action" x="33125" y="31690" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33126" y="31690" z="11" rangeX="1" rangeY="1" label="a33126"/>
            <Waypoint type="Action" x="33126" y="31690" z="11" rangeX="1" rangeY="1" script="checkewall(1)&#10;walk()"/>
            <Waypoint type="Stand" x="33127" y="31690" z="11" rangeX="1" rangeY="1" label="a33127"/>
            <Waypoint type="Action" x="33127" y="31690" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33128" y="31690" z="11" rangeX="1" rangeY="1" label="a33128"/>
            <Waypoint type="Action" x="33128" y="31690" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33129" y="31690" z="11" rangeX="1" rangeY="1" label="a33129"/>
            <Waypoint type="Action" x="33129" y="31690" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33130" y="31690" z="11" rangeX="1" rangeY="1" label="a33130"/>
            <Waypoint type="Action" x="33130" y="31690" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33131" y="31690" z="11" rangeX="1" rangeY="1" label="a33131"/>
            <Waypoint type="Action" x="33131" y="31690" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33132" y="31690" z="11" rangeX="1" rangeY="1" label="a33132"/>
            <Waypoint type="Action" x="33132" y="31690" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33133" y="31690" z="11" rangeX="1" rangeY="1" label="a33133"/>
            <Waypoint type="Action" x="33133" y="31690" z="11" rangeX="1" rangeY="1" script="checkewall(2)&#10;walk()"/>
            <Waypoint type="Stand" x="33134" y="31690" z="11" rangeX="1" rangeY="1" label="a33134"/>
            <Waypoint type="Action" x="33134" y="31690" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33135" y="31690" z="11" rangeX="1" rangeY="1" label="a33135"/>
            <Waypoint type="Action" x="33135" y="31690" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33136" y="31690" z="11" rangeX="1" rangeY="1" label="a33136"/>
            <Waypoint type="Action" x="33136" y="31690" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33137" y="31690" z="11" rangeX="1" rangeY="1" label="a33137"/>
            <Waypoint type="Action" x="33137" y="31690" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33138" y="31690" z="11" rangeX="1" rangeY="1" label="a33138"/>
            <Waypoint type="Action" x="33138" y="31690" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33139" y="31690" z="11" rangeX="1" rangeY="1" label="a33139"/>
            <Waypoint type="Action" x="33139" y="31690" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33140" y="31690" z="11" rangeX="1" rangeY="1" label="a33140"/>
            <Waypoint type="Action" x="33140" y="31690" z="11" rangeX="1" rangeY="1" script="checkewall(3)&#10;walk()"/>
            <Waypoint type="Stand" x="33141" y="31690" z="11" rangeX="1" rangeY="1" label="a33141"/>
            <Waypoint type="Action" x="33141" y="31690" z="11" rangeX="1" rangeY="1" script="walk()"/>
            <Waypoint type="Stand" x="33142" y="31690" z="11" rangeX="1" rangeY="1" label="a33142"/>
            <Waypoint type="Action" x="33142" y="31690" z="11" rangeX="1" rangeY="1" script="walk()"/>
        </WaypointSection>
        <WaypointSection name="Leave">
            <Waypoint type="Stand" x="33124" y="31692" z="11" rangeX="1" rangeY="1" label="Leave"/>
            <Waypoint type="Action" x="33146" y="31636" z="13" rangeX="1" rangeY="1" script="running = true"/>
            <Waypoint type="Stand" x="33372" y="31614" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33372" y="31614" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33123" y="31692" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33197" y="31702" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33197" y="31704" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33199" y="31687" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33165" y="31709" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33134" y="31690" z="11" rangeX="1" rangeY="1" script="if pinge then&#10;messagebox(&quot;Ping!&quot;,&quot;Bot has been stopped because your ping was above 1000 ms, You could die with that lags. Start cavebot again when you fix your connection&quot;)&#10;pinge = false&#10;running = false&#10;setsetting('Cavebot/Enabled', 'no')&#10;end"/>
            <Waypoint type="Action" x="33165" y="31709" z="14" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;Leave&quot;)&#10;else&#10;cancheckfb = false&#10;running = true&#10;end"/>
            <Waypoint type="Stand" x="33167" y="31710" z="14" rangeX="1" rangeY="1" label="rhff"/>
            <Waypoint type="Stand" x="33168" y="31710" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33168" y="31704" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33168" y="31683" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33168" y="31682" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33193" y="31687" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33193" y="31687" z="14" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;rhff&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33195" y="31685" z="14" rangeX="1" rangeY="1" label="ewarlock"/>
            <Waypoint type="Use" x="33195" y="31684" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33197" y="31674" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33192" y="31664" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33192" y="31663" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33192" y="31658" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33192" y="31656" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33192" y="31656" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;ewarlock&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33192" y="31656" z="13" rangeX="1" rangeY="1" label="cave3"/>
            <Waypoint type="Stand" x="33192" y="31649" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33191" y="31643" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33187" y="31641" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33171" y="31641" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33150" y="31641" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33145" y="31636" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33146" y="31630" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33146" y="31622" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33145" y="31619" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33146" y="31613" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33146" y="31607" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33146" y="31601" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33145" y="31591" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33144" y="31589" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Ladder" x="33144" y="31589" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33142" y="31590" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33142" y="31590" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;cave3&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33139" y="31591" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33139" y="31596" z="12" rangeX="1" rangeY="1" label="cave4"/>
            <Waypoint type="Stand" x="33146" y="31601" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33150" y="31595" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33150" y="31595" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="33150" y="31595" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33154" y="31595" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33159" y="31596" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33164" y="31593" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33169" y="31588" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="33169" y="31588" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33169" y="31592" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33159" y="31596" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33144" y="31596" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33136" y="31593" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="33136" y="31593" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33147" y="31597" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33149" y="31604" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33142" y="31606" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33140" y="31615" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33148" y="31624" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33161" y="31624" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="33161" y="31624" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33162" y="31626" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33162" y="31626" z="8" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;cave4&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33163" y="31636" z="8" rangeX="1" rangeY="1" label="cave5"/>
            <Waypoint type="Rope" x="33163" y="31636" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33162" y="31640" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33162" y="31640" z="7" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;cave5&quot;)&#10;end&#10;running = false&#10;setsetting('Cavebot/WalkingMethod', 'Walk With Arrow Keys')"/>
            <Waypoint type="Stand" x="33162" y="31640" z="7" rangeX="1" rangeY="1" label="btdp"/>
            <Waypoint type="Node" x="33170" y="31653" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33178" y="31668" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33182" y="31684" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33188" y="31699" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33194" y="31710" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33211" y="31721" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33215" y="31740" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33216" y="31756" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33224" y="31769" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33240" y="31767" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33241" y="31767" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33250" y="31783" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33242" y="31794" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33242" y="31812" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33236" y="31825" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33228" y="31840" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33200" y="31842" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33190" y="31826" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33180" y="31820" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33171" y="31812" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33171" y="31812" z="7" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;btdp&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Refill&quot;)&#10;end"/>
        </WaypointSection>
    </Cavebot>
    <Looting enabled="yes">
        <Options>
            <Option range="10"/>
            <Option moveItemsQuickly="yes"/>
            <Option eatFoodFromCorpse="yes"/>
            <Option openNextBP="no"/>
            <Option openBPsAtLogin="no"/>
            <Option valuableBodies="3000"/>
            <Option ultraValuableBodies="50000"/>
            <Option alertOnValuableBodies="no"/>
            <Option openValuableBodiesOnly="no"/>
            <Option openUltraValuableBodiesImmediately="no"/>
            <Option policy="Smart Looting"/>
            <LootingDestinations>
                <lootingDestination name="lootbp" destination="anniversary backpack"/>
                <lootingDestination name="mainbp" destination="anniversary backpack"/>
                <lootingDestination name="suppbp" destination="anniversary backpack"/>
                <lootingDestination name="maindpbp" destination="anniversary backpack"/>
                <lootingDestination name="stackdpbp" destination="anniversary backpack"/>
                <lootingDestination name="raredpbp" destination="anniversary backpack"/>
            </LootingDestinations>
        </Options>
        <LootingProfile name="LootList" isCurrentProfile="yes">
            <LootItem name="platinum coin" id="3035" sellPrice="100" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="blue gem" id="3041" sellPrice="5000" weight="0.30" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="amulet of loss" id="3057" sellPrice="45000" weight="4.20" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="boots of haste" id="3079" sellPrice="30000" weight="7.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="small sapphire" id="3029" sellPrice="250" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="talon" id="3034" sellPrice="320" weight="0.20" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="black pearl" id="3027" sellPrice="280" weight="0.20" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="steel boots" id="3554" sellPrice="30000" weight="29.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="demonic essence" id="6499" sellPrice="1000" weight="1.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="gold ingot" id="9058" sellPrice="5000" weight="18.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="silver brooch" id="3017" sellPrice="150" weight="1.16" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="soul orb" id="5944" sellPrice="25" weight="0.20" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="demon horn" id="5954" sellPrice="1000" weight="10.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="stone skin amulet" id="3081" sellPrice="500" weight="7.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="red piece of cloth" id="5911" sellPrice="300" weight="5.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="green piece of cloth" id="5910" sellPrice="200" weight="5.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="blue piece of cloth" id="5912" sellPrice="200" weight="5.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="yellow piece of cloth" id="5914" sellPrice="150" weight="5.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="white piece of cloth" id="5909" sellPrice="100" weight="5.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="brown piece of cloth" id="5913" sellPrice="100" weight="5.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="crystal ball" id="3076" sellPrice="190" weight="34.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="golden boots" id="3555" sellPrice="0" weight="31.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="yes" alertOnMiss="yes"/>
            <LootItem name="jewel case" id="6104" sellPrice="0" weight="1.70" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="great spirit potion" id="7642" sellPrice="0" weight="3.10" destination="" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="rusty legs (rare)" id="8899" sellPrice="0" weight="70.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="rusty armor (rare)" id="8896" sellPrice="0" weight="120.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
        </LootingProfile>
    </Looting>
    <Supplies>
        <Options>
            <Option defaultBackpack=""/>
            <Option extraCashMin="1000" extraCashMax="2500"/>
            <Option autoSwitchProfiles="no"/>
        </Options>
        <SupplyProfile name="SupplyList" vocation="Paladin" level="276" isCurrentProfile="yes">
            <SupplyItem name="energy wall rune" id="3166" buyPrice="85" weight="0.52" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="thunderstorm rune" id="3202" buyPrice="37" weight="0.52" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="strong mana potion" id="237" buyPrice="80" weight="2.90" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="" id="100" buyPrice="0" weight="0.00" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="great spirit potion" id="7642" buyPrice="190" weight="3.10" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="prismatic bolt" id="16141" buyPrice="20" weight="0.85" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="crystalline arrow" id="15793" buyPrice="20" weight="0.75" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="infernal bolt" id="6528" buyPrice="0" weight="0.90" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
        </SupplyProfile>
    </Supplies>
    <Targeting enabled="no" allowDiagonalMovement="no" autoSwitchProfiles="no" nonPvPMode="no">
        <TargetingProfile name="TargetList" vocation="Knight, Paladin, Sorcerer, Druid" level="0" targetMustBeShootable="no" targetMustBeReachable="yes" isCurrentProfile="yes">
            <Priorities>
                <Priority health="20"/>
                <Priority proximity="30"/>
                <Priority danger="10"/>
                <Priority random="0"/>
                <Priority lure="30"/>
                <Priority stick="2"/>
            </Priorities>
            <Creatures>
                <Creature name="Zugurosh" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="yes">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="2" attackMode="No Change" firstSpell="Holy Flash" secondSpell="Divine Missile" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="Envenom" secondSpell="Terra Wave" thirdSpell="Energy Strike" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Others" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
            </Creatures>
        </TargetingProfile>
    </Targeting>
    <OtherBots>
        <HealingPaths/>
        <TargetingPaths/>
    </OtherBots>
</WindbotSettings>
