<?xml version="1.0" encoding="UTF-8"?>
<WindbotSettings>
    <Healer>
        <SpellHealer enabled="yes">
            <HealRule name="NewHealRule" spell="Ultimate Healing" condition="Health Percent below" conditionMin="60" conditionMax="60" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="NewHealRule1" spell="Intense Healing" condition="Health Percent below" conditionMin="75" conditionMax="75" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="NewHealRule2" spell="Light Healing" condition="Health Percent below" conditionMin="94" conditionMax="94" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </SpellHealer>
        <PotionHealer enabled="yes">
            <HealRule name="NewHealRule" spell="Strong Mana Potion" condition="Mana Percent below" conditionMin="65" conditionMax="65" extraCondition="Up to..." extraConditionMin="80" extraConditionMax="80" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </PotionHealer>
        <ConditionHealer enabled="yes">
            <HealRule name="NewHealRule" spell="Strong Haste" condition="Not Hasted" conditionMin="0" conditionMax="0" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="no" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </ConditionHealer>
        <ManaTrainer manaTrainCondition="Mana Percent above" manaTrainMin="87" manaTrainMax="93" enabled="no"/>
    </Healer>
    <Scripter>
        <HotkeyScripts/>
        <PersistentScripts>
            <PersistentScript name="Settings" script="init start&#10;&#10;init end&#10;auto(100)&#10;&#10;&#10;&#10;&#10;hunthero = getuseroption('hunthero')&#10;&#10;mainbp = getuseroption('mainbp')&#10;supplybp = getuseroption('suppbp')&#10;lootbp = getuseroption('lootbp')&#10;goldbp = getuseroption('goldbp')&#10;&#10;&#10;maindp = getuseroption('maindpbp')&#10;lootdp = getuseroption('lootdpbp')&#10;stackdp = getuseroption('stackdpbp')&#10;raredp = getuseroption('raredpbp')&#10;&#10;&#10;&#10;&#10;maxgmp = getuseroption('MaxMana')&#10;mingmp = getuseroption('MinMana')&#10;mananame = getuseroption('mptype')&#10;keephaste = getuseroption('KeepHasted')&#10;&#10;--&#10;&#10;&#10;&#10;--init variables&#10;&#10;lootgold = getuseroption('lootgold')&#10;usestrongspells = getuseroption('usestrongspells') or true&#10;mtoava = getuseroption('mtoava') or 2&#10;mtoue = getuseroption('mtoue') or 6&#10;&#10;if usestrongspells then&#10;egranamount = 1&#10;else&#10;egranamount = 10&#10;end&#10;&#10;lightspell = &quot;exori flam&quot;&#10;&#10;--backpacks&#10;usegoldbp = true&#10;uselootbp = true&#10;buyarearune = false&#10;buysd = false&#10;--arearunes&#10;arearunename = &quot;Great fireball rune&quot;&#10;maxarearune = maxgfb&#10;--sd&#10;sdname = &quot;sudden death rune&quot;&#10;maxsd = maxsds&#10;--potions&#10;potionname = mananame&#10;maxpotions = maxgmp&#10;&#10;&#10;&#10;&#10;setsetting('PotionHealer/Rules/NewHealRule/Spell', mananame)&#10;&#10;&#10;if $voc == 16 then -- ed&#10;egranspell = &quot;Exori Gran Frigo&quot;&#10;uetype = &quot;exevo gran mas frigo&quot;&#10;elseif $voc == 8 then -- ms&#10;egranspell = &quot;Exori Gran Flam&quot;&#10;uetype = &quot;exevo gran mas flam&quot;&#10;end&#10;&#10;&#10;&#10;&#10;if lootgold then&#10;setsetting('Looting/LootList/gold coin/Action', 'Loot')&#10;else&#10;setsetting('Looting/LootList/gold coin/Action', 'Ignore')&#10;end&#10;&#10;&#10;if keephaste then&#10;setsetting('ConditionHealer/Rules/NewHealRule/Enabled', 'yes')&#10;else&#10;setsetting('ConditionHealer/Rules/NewHealRule/Enabled', 'no')&#10;end&#10;&#10;setlootingdestination(&quot;mainbp&quot;, mainbp) &#10;setlootingdestination(&quot;supplybp&quot;, supplybp) &#10;setlootingdestination(&quot;lootbp&quot;, lootbp) &#10;setlootingdestination(&quot;goldbp&quot;, goldbp) &#10;&#10;setlootingdestination(&quot;maindp&quot;, maindp) &#10;setlootingdestination(&quot;lootdp&quot;, lootdp) &#10;setlootingdestination(&quot;stackdp&quot;, stackdp) &#10;setlootingdestination(&quot;raredp&quot;, raredp) &#10;&#10;if getuseroption('pvpes') then&#10;if $pzone then&#10;setsetting('Cavebot/WalkThroughPlayers', 'yes')&#10;else&#10;setsetting('Cavebot/WalkThroughPlayers', 'no')&#10;end&#10;&#10;else&#10;&#10;setsetting('Cavebot/WalkThroughPlayers', 'yes')&#10;&#10;end&#10;&#10;&#10;if itemcount(mananame) &lt; tonumber(mingmp) then&#10;if $wptsection == &quot;Hunt&quot; then&#10;if $posz == 7 or ($posz == 5 and $posx &gt; 32899 and $posy &lt;= 31082) then&#10;gotolabel(&quot;start&quot;,&quot;Leave&quot;)&#10;end&#10;end&#10;end&#10;&#10;&#10;&#10;&#10;-----------------------&#10;" enabled="yes"/>
            <PersistentScript name="Functions" script="init start&#10;&#10;&#10;&#10;&#10;&#10;function depot()&#10;setsetting('PotionHealer/Enabled', 'no')&#10;setsetting('SpellHealer/Enabled', 'no')&#10;setsetting('ConditionHealer/Enabled', 'no')&#10;&#10;&#10;setsetting('Looting/OpenNextBP', 'no')&#10;closewindows()&#10;wait(2000)&#10;while windowcount() &lt; 2 do&#10;closewindows()&#10;wait(500,1200)&#10;openitem(mainbp, &quot;back&quot;, true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;openitem(lootbp,mainbp,true)&#10;wait(500,1200)&#10;resizewindows()&#10;end&#10;&#10;&#10;while windowcount(&quot;Depot Chest&quot;) == 0 do&#10;&#9;opendepot()&#10;&#9;wait(500)&#10;end&#10;&#10;&#10;while windowcount(lootbp) == 0 do&#10;openitem(lootbp,mainbp,true)&#10;wait(300)&#10;end&#10;&#10;&#10;while windowcount(maindp) == 0 do &#10;openitem(maindp, &quot;Depot Chest&quot;) &#10;wait(300,500) &#10;resizewindows(1000,maindp) &#10;wait(300,500) &#10;end &#10;&#10;&#10;&#10;setsetting('Looting/OpenNextBP', 'no')&#10;waitping()&#10;&#10;&#10;local CONFIG = {&#10;    LOOT_BACKPACK = lootbp,&#10;    MAIN_DP_BACKPACK = maindp,&#10;    STACKABLE_BACKPACK = stackdp,&#10;    NOT_STACKABLE_BACKPACK = raredp,&#10;}&#10; &#10;clearlastonto()&#10; &#10;while (true) do&#10;&#9;foreach lootingitem ITEM_ENTRY do&#10;if ITEM_ENTRY.id == 3035 then&#10;else&#10;&#9;&#9;while (itemcount(ITEM_ENTRY.id, CONFIG.LOOT_BACKPACK) &gt; 0) do&#10;&#10;&#9;&#9;&#9;if (itemproperty(ITEM_ENTRY.id, ITEM_STACKABLE)) then&#10;&#9;&#9;&#9;&#9;moveitemsonto(ITEM_ENTRY.id, CONFIG.STACKABLE_BACKPACK, 1, CONFIG.MAIN_DP_BACKPACK, CONFIG.LOOT_BACKPACK) wait(600, 1200)&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;moveitemsonto(ITEM_ENTRY.id, CONFIG.NOT_STACKABLE_BACKPACK, $lastonto, CONFIG.MAIN_DP_BACKPACK, CONFIG.LOOT_BACKPACK) wait(600, 200)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;end&#10;end&#10;&#10; &#10;    if (itemcount(CONFIG.LOOT_BACKPACK, CONFIG.LOOT_BACKPACK) &gt; 0) then&#10;        openitem(CONFIG.LOOT_BACKPACK, CONFIG.LOOT_BACKPACK, false) waitcontainer(CONFIG.LOOT_BACKPACK, false)&#10;    else&#10;        break&#10;    end&#10; &#10;    wait(100)&#10;end&#10;&#10;&#10;&#10;setsetting('PotionHealer/Enabled', 'yes')&#10;setsetting('SpellHealer/Enabled', 'yes')&#10;setsetting('ConditionHealer/Enabled', 'yes')&#10;&#10;end&#10;&#10;&#10;&#10;&#10;&#10;&#10;function bpsforbank()&#10;if not islocation(1) then&#10;&#9;gotolabel(&quot;gobank&quot;)&#10;else&#10;closewindows()&#10;waitping(3)&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;&#9;closewindows()&#10;waitping(3)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;waitping(3)&#10;&#9;&#9;resizewindows()&#10;waitping(3)&#10;&#9;&#9;openitem(supplybp,mainbp,true)&#10;waitping(3)&#10;&#9;&#9;resizewindows()&#10;end&#10;&#10;end&#10;end&#10;----------------------------------------------------------------------------------------------------------&#10;&#10;function withdrawmoney()&#10;&#10;Mana = math.positive(maxpotions - itemcount(potionname)) * itemcost(potionname)&#10;if buyarearune then&#10;AreaRune = math.positive(maxarearune - itemcount(arearunename)) * 45&#10;else&#10;AreaRune = 0&#10;end&#10;if buysd then&#10;SDS = math.positive(maxsd - itemcount(sdname)) * 118&#10;else&#10;SDS = 0&#10;end&#10;Total = math.ceil(Mana + AreaRune + SDS, 1000)&#10;&#10;&#10;if islocation(1) then&#10;&#9;npctalk(&quot;hi&quot;, &quot;deposit all&quot;,&quot;yes&quot;,&quot;withdraw &quot;..Total, &quot;yes&quot;, &quot;balance&quot;)&#10;else&#10;gotolabel(&quot;enterbank&quot;)&#10;end&#10;end&#10;&#10;function suppshop()&#10;if islocation() then&#10;&#10;&#10;bpsforhunt()&#10;&#10;sellflasks()&#10;&#10;function buysupply(suppname,maxsupp)&#10;amount = 0&#10;amount = tonumber(maxsupp) - itemcount(suppname)&#10;while amount &gt; 0 and islocation(1) do &#10;&#9;buyitems(suppname, amount) &#10;&#9;waitping(2,3)&#10;&#10;&#9;&#9;moveitems(suppname,supplybp, mainbp) &#10;&#10;&#9;waitping(2,3)&#10;&#9;amount = amount-100&#10;end&#10;end&#10;&#10;&#10;waitping(3)&#10;&#10;&#10;&#10;&#10;&#10;&#10;buysupply(potionname,maxpotions)&#10;if buyarearune then&#10;buysupply(arearunename,maxarearune)&#10;end&#10;if buysd then&#10;buysupply(sdname,maxsd)&#10;end&#10;&#10;&#10;end&#10;&#10;npcsay(&quot;bye&quot;)&#10;end&#10;&#10;function checksupp(czytohunt)&#10;&#10;&#9;&#9;if itemcount(mananame) + 10 &lt; tonumber(maxgmp) then&#10;&#9;&#9;&#9;return false&#10;&#9;&#9;else&#10;&#9;&#9;&#9;return true&#10;&#9;&#9;end&#10;&#10;&#10;end&#10;&#10;&#10;&#10;&#10;&#10;function bpsforhunt()&#10;higherwindows('equip')&#10;&#10;closewindows()&#10;waitping(3)&#10;&#10;local standardamount = 4&#10;&#10;&#10;while windowcount() &lt; standardamount do&#10;closewindows()&#10;waitping(3)&#10;  openitem(mainbp, &quot;back&quot;, true)&#10;waitping(3)&#10;  resizewindows()&#10;waitping(3)&#10;  openitem(supplybp,mainbp,true)&#10;waitping(3)&#10;  resizewindows()&#10;waitping(3)&#10;waitping(3)&#10;  openitem(lootbp,mainbp,true)&#10;waitping(3)&#10;  resizewindows()&#10;waitping(3)&#10;  openitem(goldbp,mainbp,true)&#10;waitping(3)&#10;  resizewindows()&#10;&#10;&#10;&#10; end&#10;&#10;  &#10;setsetting('Looting/OpenNextBP', 'yes')&#10;end&#10;&#10;&#10;&#10;&#10;init end" enabled="yes"/>
            <PersistentScript name="Strike" script="init start&#10;init end&#10;auto(100)&#10;&#10;if cancast(&quot;exori frigo&quot;) then&#10;if $attacked.id ~= 0 and $attacked.dist &lt;= 3 then&#10;&#9;if $attacked.name == &quot;Necromancer&quot; then&#10;&#9;&#9;if getuseroption('securespells') then&#10;&#9;&#9;&#9;if paround(1) == 0 then&#10;&#9;&#9;&#9;&#9;cast(&quot;exori flam&quot;)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;else&#10;&#9;&#9;&#9;cast(&quot;exori flam&quot;)&#10;&#9;&#9;end&#10;&#9;elseif $attacked.name == &quot;Hero&quot; then&#10;&#9;&#9;if getuseroption('securespells') then&#10;&#9;&#9;&#9;if paround(1) == 0 then&#10;&#9;&#9;&#9;&#9;cast(&quot;exori frigo&quot;)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;else&#10;&#9;&#9;&#9;cast(&quot;exori frigo&quot;)&#10;&#9;&#9;end&#10;&#9;elseif $attacked.hppc &gt; 50 then&#10;&#9;&#9;if getuseroption('securespells') then&#10;&#9;&#9;&#9;if paround(1) == 0 then&#10;&#9;&#9;&#9;&#9;cast(&quot;exori frigo&quot;)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;else&#10;&#9;&#9;&#9;cast(&quot;exori frigo&quot;)&#10;&#9;&#9;end&#10;&#9;&#9;&#10;&#9;end&#10;end&#10;end" enabled="yes"/>
            <PersistentScript name="Player Alert" script="auto(500)&#10;if getuseroption(&quot;PlayerAlert&quot;) and $wptsection == &quot;Hunt&quot; and paround(9) &gt; 0 then&#10;&#9;playsound('playeronscreen.wav')&#10;&#9;wait(2000,3000)&#10;&#9;flashclient()&#10;end" enabled="yes"/>
        </PersistentScripts>
    </Scripter>
    <HUDs>
        <HUDScripts>
            <HUDScript name="YokoMMH" script="init start&#10;&#9;--&#10;&#9;--                        88                                                                  &#10;&#9;--                        &quot;&quot;                                                ,d                &#10;&#9;--                                                                          88                &#10;&#9;--             ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;&#9;--             I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;&#9;--              `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;&#9;--             aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;&#9;--   Author:   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;&#9;--   &#10;&#9;--   Monitor My Hunting!&#10;&#9;--&#10;&#9;--   Version: 1.0&#10;&#9;--   Created: 29.12.2013&#10;&#9;--   Last update: 29.12.2013&#10;&#9;--&#10;&#10;&#9;local MMH = {&#10;&#9;&#9;SHOW_ALL_ITEMS = false,&#10;&#9;&#9;SHOW_ALL_SUPPLIES = false,&#10;&#9;}&#10;&#10;&#9;-- [[ Do not change anything below this line. ]] --&#10;&#10;&#9;-- [[ COLORS ]] --&#10;&#9;MMH.COLORS = {}&#10;&#9;MMH.COLORS.FONT_COLOR = color(255, 255, 255, 0)&#10;&#9;MMH.COLORS.SECTION_HEADER_BACKGROUND = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)}&#10;&#9;MMH.COLORS.ENTRY_NAME_BACKGROUND = {0.0, color(41, 105, 100, 105), 0.76, color(37, 94, 50, 50), 0.23, color(19, 19, 19, 20)}&#10;&#9;MMH.COLORS.ENTRY_VALUE_BACKGROUND = {0.0, color(19, 19, 19, 20), 0.23, color(37, 94, 50, 50), 0.76, color(41, 105, 100, 105)}&#10;&#9;MMH.COLORS.RESULT_POSITIVE_BACKGROUND = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)}&#10;&#9;MMH.COLORS.RESULT_NEGATIVE_BACKGROUND = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)}&#10;&#9;MMH.COLORS.RESET_BUTTON_BACKGROUND = {0.0, color(100, 255, 100, 100), 0.23, color(50, 100, 255, 100), 0.76, color(100, 100, 100, 255)}&#10;&#10;&#9;-- [[ ELEMENTS ]] --&#10;&#9;MMH.ELEMENTS = {}&#10;&#9;MMH.ELEMENTS.RESET_BUTTON = -1&#10;&#9;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = -1&#10;&#9;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = -1&#10;&#10;&#9;-- [[ SECTION STATES ]] --&#10;&#9;MMH.SECTIONS = {}&#10;&#9;MMH.SECTIONS.ITEMS_LOOTED = true&#10;&#9;MMH.SECTIONS.SUPPLIES_USED = true&#10;&#10;&#9;-- [[ OTHERS ]] --&#9;&#10;&#9;filterinput(false, true, false, false)&#10;&#10;&#9;local MOVING, TEMP, MOVED = false, {0, 0}, {0, 0}&#10;&#10;&#9;function inputevents(e)&#10;&#9;&#9;if (e.type == IEVENT_LMOUSEDOWN) then&#10;&#9;&#9;&#9;if (e.elementid == MMH.ELEMENTS.RESET_BUTTON) then&#10;&#9;&#9;&#9;&#9;resetcharactertime()&#10;&#9;&#9;&#9;&#9;resetlootcounter()&#10;&#9;&#9;&#9;&#9;resetexpcounter()&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_ITEMS_LOOTED) then&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.ITEMS_LOOTED = not MMH.SECTIONS.ITEMS_LOOTED&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_SUPPLIES_USED) then&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.SUPPLIES_USED = not MMH.SECTIONS.SUPPLIES_USED&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEDOWN) then&#10;&#9;&#9;&#9;MOVING, TEMP = true, {$cursor.x - MOVED[1], $cursor.y - MOVED[2]}&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEUP) then&#10;&#9;&#9;&#9;MOVING = false&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;if (MOVING) then&#10;    auto(10)&#10;    MOVED = {$cursor.x - TEMP[1], $cursor.y - TEMP[2]}&#10;end&#10;&#10;setposition($clientwin.right - 424 + MOVED[1], $worldwin.top + MOVED[2])&#10;setfontstyle('Tahoma', 8, 75, MMH.COLORS.FONT_COLOR, 1, color(0, 0, 0, 20))&#10;&#10;local ROW_QUANTITY, STRING_WIDTH, STRING_HEIGHT = 0, measurestring('TEMP')&#10;local ITEMS_LOOTED_WORTH, ITEM_LOOTED_QUANTITY, ITEM_LOOTED_WORTH = 0, 0, 0&#10;local SUPPLIES_USED_WORTH, SUPPLY_USED_QUANTITY, SUPPLY_USED_WORTH = 0, 0, 0&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 0, 240, 20, 2, 2)&#10;drawtext('Monitor My Hunting v1.0', 6, 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.RESET_BUTTON_BACKGROUND))&#10;MMH.ELEMENTS.RESET_BUTTON = drawroundrect(196, 0, 44, 20, 2, 2)&#10;drawtext('RESET', 202, 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 23, 240, 15, 2, 2)&#10;drawtext('Looting Accuracy', 6, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;drawroundrect(130, 23, 110, 15, 2, 2)&#10;drawtext(string.format('%.2f', $lootaccuracy) .. '%', 136, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;drawroundrect(0, 41, 240, 20, 2, 2)&#10;drawtext('ITEMS LOOTED', 6, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = drawroundrect(220, 41, 20, 20, 2, 2)&#10;drawtext('X', 228, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;foreach lootingitem ItemEntry do&#10;&#9;if (MMH.SHOW_ALL_ITEMS or ItemEntry.amountlooted &gt; 0) then&#10;&#9;&#9;ITEM_LOOTED_QUANTITY = ItemEntry.amountlooted&#10;&#9;&#9;ITEM_LOOTED_WORTH = ItemEntry.sellprice * ITEM_LOOTED_QUANTITY&#10;&#10;&#9;&#9;if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#9;&#9;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 64 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(130, 64 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;&#9;&#9;drawtext(num(ITEM_LOOTED_QUANTITY) .. ' (' .. math.floor(ITEM_LOOTED_WORTH / 100) / 10 .. 'K)', 136, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;ITEMS_LOOTED_WORTH = ITEMS_LOOTED_WORTH + ITEM_LOOTED_WORTH&#10;&#9;end&#10;end&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;drawtext('Total: ' .. num(ITEMS_LOOTED_WORTH) .. ' GPs', 6, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;drawtext('SUPPLIES USED', 6, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = drawroundrect(220, 64 + ROW_QUANTITY * 18, 20, 20, 2, 2)&#10;drawtext('X', 228, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;foreach supplyitem ItemEntry do&#10;&#9;if (MMH.SHOW_ALL_SUPPLIES or ItemEntry.amountused &gt; 0) then&#10;&#9;&#9;SUPPLY_USED_QUANTITY = ItemEntry.amountused&#10;&#9;&#9;SUPPLY_USED_WORTH = ItemEntry.buyprice * SUPPLY_USED_QUANTITY&#10;&#10;&#9;&#9;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;&#9;&#9;drawtext(num(SUPPLY_USED_QUANTITY) .. ' (' .. math.floor(SUPPLY_USED_WORTH / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + SUPPLY_USED_WORTH&#10;&#9;end&#10;end&#10;&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#10;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;drawitem(3031, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;drawtext('Money Spent', 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;drawtext(num($moneyspent) .. ' (' .. math.floor($moneyspent / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;end&#10;&#10;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + $moneyspent&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;drawtext('Total: ' .. num(SUPPLIES_USED_WORTH) .. ' GPs', 6, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;drawtext(((ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH and ('PROFIT: ')) or ('WASTE: ')) .. num(ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) .. ' GPs (' .. math.abs(math.floor(((ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) * 3600) / ($charactertime / 1000) / 100) / 10) .. ' k/h)', 6, 87 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)" enabled="yes" refreshRate="100"/>
            <HUDScript name="YokoStats" script="init start&#10;    --&#10;    --              88                                                                  &#10;    --              &quot;&quot;                                                ,d                &#10;    --                                                                88                &#10;    --   ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;    --   I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;    --    `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;    --   aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;    --   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;    --&#10;&#10;    --   Name: Monitor My Stats&#10;    --   Last Updated: 19/12/2013&#10;    --   Version: 1.0&#10;&#10;    local MMS = {&#10;        ShowInfo = true,&#10;&#10;        Title = &quot;MS / ED&quot;,&#10;        Creator = &quot;Yoko&quot;,&#10;        Info = 'Yalahar Necro / Hero',&#10;        Version = '1.0.0'&#10;    }&#10;&#10;    -- [[ Do not change anything below this line. ]] --&#10;&#10;    filterinput(false, true, false, false)&#10;&#10;    local HUD_Sections = {&#10;        {Name = 'OTHERS', State = true, Items = {&#10;                {'Ping', function() return $ping .. ' (avg: ' .. $pingaverage .. ')' end},&#10;                {'Bank Balance', function() return num($balance) end},&#10;            }&#10;        },&#10;&#10;        {Name = 'CHARACTER STATS', State = true, Items = {&#10;                {'Level', function() return $level .. ' (' .. 100 - math.floor(($exp - expatlvl($level)) * 100 / (expatlvl($level + 1) - expatlvl($level))) .. '%)' end},&#10;                {'Experience', function() return num($exp) end},&#10;                {'Magic Level', function() return $mlevel .. ' (' .. 100 - $mlevelpc .. '%)' end},&#10;                {'Weapon Skill', function() local _ = WeaponSkill() return _.skill .. ' (' .. 100 - _.skillpc .. '%)' end},&#10;                {'Shielding', function() return $shielding .. ' (' .. 100 - $shieldingpc .. '%)' end},&#10;                {'Fishing', function() return $fishing .. ' (' .. 100 - $fishingpc .. '%)' end}&#10;            }&#10;        },&#10;&#10;        {Name = 'ENGINE STATES', State = true, Items = {&#10;                {'Spell Healer', function() return getsetting('SpellHealer/Enabled') end, function() return toggle('SpellHealer/Enabled') end},&#10;                {'Potion Healer', function() return getsetting('PotionHealer/Enabled') end, function() return toggle('PotionHealer/Enabled') end},&#10;                {'Condition Healer', function() return getsetting('ConditionHealer/Enabled') end, function() return toggle('ConditionHealer/Enabled') end},&#10;                {'Mana Training', function() return getsetting('ManaTrainer/Enabled') end, function() return toggle('ManaTrainer/Enabled') end},&#10;                {'Cavebot', function() return getsetting('Cavebot/Enabled') end, function() return toggle('Cavebot/Enabled') end},&#10;                {'Looting', function() return getsetting('Looting/Enabled') end, function() return toggle('Looting/Enabled') end},&#10;                {'Targeting', function() return getsetting('Targeting/Enabled') end, function() return toggle('Targeting/Enabled') end}&#10;            }&#10;        },&#10;&#10;        {Name = 'BOTTING STATS', State = true, Items = {&#10;                {'Experience per Hour', function() return num($exphour) end},&#10;                {'Experience Left', function() return num(exptolevel()) end},&#10;                {'Experience Today', function() return num($expgained) end},&#10;                {'Time to Next Level', function() return time(timetolevel()) end},&#10;                {'Played Time', function() return time(math.floor($charactertime / 1000)) end},&#10;                {'Stamina', function() return time($stamina) end}&#10;            }&#10;        }&#10;    }&#10;&#10;&#10;    local HUD_Colors = {&#10;            Font = color(255, 255, 255, 0),&#10;            SectionHeaderBackground = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)},EntryNameBackground = {0.0, color(41, 105, 100, 105), 0.76, color(37, 94, 50, 50), 0.23, color(19, 19, 19, 20)},&#10;EntryValueBackground = {0.0, color(19, 19, 19, 20), 0.23, color(37, 94, 50, 50), 0.76, color(41, 105, 100, 105)},&#10;EntryValueEnabledBackground = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)},&#10;            EntryValueDisabledBackground = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)},&#10;    }&#10;&#10;    function WeaponSkill()&#10;        local SkillTypes = {&#10;            ['axe'] = {type = 'axe', skill = $axe, skillpc = $axepc},&#10;            ['club'] = {type = 'club', skill = $club, skillpc = $clubpc},&#10;            ['sword'] = {type = 'sword', skill = $sword, skillpc = $swordpc},&#10;            ['bow'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['distance weapon'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['no weapon'] = {type = 'fist', skill = $fist, skillpc = $fistpc},&#10;            ['rod'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;            ['wand'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;        }&#10;&#10;        return SkillTypes[findweapontype()]&#10;    end&#10;&#10;    local Moving, Temp, Moved = false, {0, 0}, {0, 0}&#10;&#10;    function inputevents(e)&#10;        if (e.type == IEVENT_LMOUSEDOWN) then&#10;            for _, Section in ipairs(HUD_Sections) do&#10;                if (e.elementid == Section.StateSwitch) then&#10;                    Section.State = not Section.State&#10;                    return&#10;                end&#10;            end&#10;        for _, Section in ipairs(HUD_Sections) do&#10;                if (Section.Name == 'ENGINE STATES') then&#10;                    for _, SectionItem in ipairs(Section.Items) do&#10;                        if (e.elementid == SectionItem[4]) then&#10;                            SectionItem[3]()&#10;                            return&#10;                        end&#10;                    end&#10;                end&#10;            end&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEDOWN) then&#10;            Moving, Temp = true, {$cursor.x - Moved[1], $cursor.y - Moved[2]}&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEUP) then&#10;            Moving = false&#10;        end&#10;    end&#10;    &#10;    setmaskcolorxp(0)&#10;init end&#10;&#10;if (Moving) then&#10;    auto(10)&#10;    Moved = {$cursor.x - Temp[1], $cursor.y - Temp[2]}&#10;end&#10;&#10;setposition($clientwin.left + 5 + Moved[1], $worldwin.top + Moved[2])&#10;setfontstyle('Tahoma', 8, 75, 0xFFFFFF, 1, color(0, 0, 0, 20))&#10;&#10;local YPosition, SectionRow, SectionItemsRow = 0, 0, 0&#10;&#10;if MMS.ShowInfo then&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, 0, 240, 21, 2, 2)&#10;    drawtext(MMS.Title, 6, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 0, 110, 21, 2, 2)&#10;    drawtext(MMS.Creator, 136, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfontsize(7)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 0 * 18, 240, 15, 2, 2)&#10;    drawtext(MMS.Info, 6, 24 + 0 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 1 * 18, 240, 15, 2, 2)&#10;    drawtext('Script version:', 6, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 24 + 1 * 18, 110, 15, 2, 2)&#10;    drawtext(MMS.Version, 136, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;    &#10;    YPosition = 22 + 2 * 19&#10;end&#10;&#10;for SectionIndex, Section in ipairs(HUD_Sections) do&#10;    setfontsize(8)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 20, 2, 2)&#10;    drawtext(Section.Name, 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    if (Section.State) then&#10;        addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;    else&#10;        addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;    end&#10;    Section.StateSwitch = drawroundrect(220, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 20, 20, 2, 2)&#10;    drawtext('X', 228, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    SectionRow = SectionRow + 1&#10;&#10;    if (Section.State) then&#10;        setfontsize(7)&#10;&#10;        local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;        for SectionItemIndex, SectionItem in ipairs(Section.Items) do&#10;            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)     &#10;            addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;            drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 16, 2, 2)&#10;            drawtext(SectionItem[1], 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;&#10;            if (Section.Name == 'ENGINE STATES') then&#10;                local EngineCurrentState = SectionItem[2]()&#10;&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                if (EngineCurrentState == 'yes') then&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;                else&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;                end&#10;                HUD_Sections[SectionIndex].Items[SectionItemIndex][4] = drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;&#10;&#10;                drawtext((EngineCurrentState == 'yes' and ('On')) or ('Off'), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            else&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;                drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;                drawtext(SectionItem[2](), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            end&#10;&#10;            SectionItemsRow = SectionItemsRow + 1&#10;        end&#10;    end&#10;end" enabled="yes" refreshRate="100"/>
        </HUDScripts>
    </HUDs>
    <GeneralSettings>
        <Input>
            <MouseOption mouseMode="Simulate Mouse"/>
            <MouseOption scrollMode="Use mouse wheel"/>
            <MouseOption stuckCursorPolicy="If Cavebot on, Release Instantly"/>
            <MouseOption moveSpeed="Instantaneous"/>
            <MouseOption clickWaitMin="10" clickWaitMax="30"/>
            <KeyboardOption keyboardMode="Simulate Keyboard"/>
            <KeyboardOption stuckCtrlShiftPolicy="If Cavebot on, Release Instantly"/>
            <KeyboardOption typeWaitMin="20" typeWaitMax="20"/>
            <KeyboardOption pressWaitMin="10" pressWaitMax="10"/>
            <FocusOption focusPolicy="Don't auto-focus"/>
            <FocusOption openMenuPolicy="Confirm if cavebotting"/>
        </Input>
    </GeneralSettings>
    <Alerts disableSounds="no">
        <alert name="Player On Screen" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Player Attacking" playSound="yes" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Monster Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Private Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Default Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="GM Detected" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Disconnected" playSound="yes" pauseBot="no" logout="no"/>
        <alert name="Character Stuck" playSound="no" pauseBot="no" logout="no" standTime="30000"/>
        <alert name="Health Below" playSound="no" pauseBot="no" logout="no" healthPercent="50"/>
        <alert name="Mana Below" playSound="no" pauseBot="no" logout="no" manaPercent="50"/>
        <alert name="Unjust Kill" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Enemies Online" playSound="no" pauseBot="no" logout="no" enemiesCount="50"/>
    </Alerts>
    <Cavebot enabled="no">
        <Options>
            <Option shovel="3457"/>
            <Option rope="3003"/>
            <Option machete="3308"/>
            <Option pick="3456"/>
            <Option nodeRange="4"/>
            <Option pauseBotOnDeath="yes"/>
            <Option refillAmmo="no" refillAmmoMin="30" refillAmmoMax="70"/>
            <Option autoMount="no"/>
            <Option fireAvoidanceMin="0" fireAvoidanceMax="0"/>
            <Option energyAvoidanceMin="0" energyAvoidanceMax="0"/>
            <Option poisonAvoidanceMin="0" poisonAvoidanceMax="0"/>
            <Option walkThroughPlayers="yes"/>
            <Option walkMethod="Walk With Map-Clicks"/>
            <Option walkableItems="7, 140, 404, 831, 832, 833, 834, 883, 1020, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2131, 2132, 2133, 2134, 2135, 2314, 2315, 2316, 2319, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2431, 2432, 2433, 2434, 2441, 2442, 2443, 2444, 2469, 2471, 2472, 2473, 2478, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2519, 2523, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2981, 2982, 2983, 2984, 2985, 2987, 2988, 3503, 3504, 3514, 3807, 5086, 5087, 5088, 6114, 6115, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6371, 6372, 7864, 8455, 8763, 9061, 9062, 10209, 10216, 10286, 10287, 10288, 11009, 11010, 11011, 11800, 11801, 11802, 11803, 11804, 11805, 11806, 11807, 11808, 11809, 11810, 17972"/>
            <Option mapWalkDistMin="20" mapWalkDistMax="30"/>
            <Option userOptionsScript="&#10;{&#10;&quot;type&quot; : &quot;scriptinfo&quot;, &#10;&quot;name&quot; : &quot;ED - MS Yalahar Necro&quot;, &#10;&quot;version&quot; : &quot;1.0.0&quot;&#10;},&#10;&#10;&#10;{&#10;&quot;type&quot;    : &quot;group&quot;,&#10;&quot;name&quot;    : &quot;Backpacks Setup&quot;,&#10;&quot;children&quot;: [&#10;&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;mainbp&quot;,&#10;&quot;text&quot; : &quot;Main BP&quot;,&#10;&quot;description&quot; : &quot;Backpack on character's back&quot;,&#10;&quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;},&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;suppbp&quot;,&#10;&quot;text&quot; : &quot;Supplies BP&quot;,&#10;&quot;description&quot; : &quot;Backpack with supplies inside main backpack&quot;,&#10;&quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;},&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;lootbp&quot;,&#10;&quot;text&quot; : &quot;Loot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for loot inside main backpack&quot;,&#10;&quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;},&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;goldbp&quot;,&#10;&quot;text&quot; : &quot;Gold BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for gold inside main backpack&quot;,&#10;&quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;}&#10;]&#10;},&#10;{&#10;&quot;type&quot;    : &quot;group&quot;,&#10;&quot;name&quot;    : &quot;Depot Setup&quot;,&#10;&quot;column&quot;  : 2,&#10;&quot;children&quot;: [&#10;&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;maindpbp&quot;,&#10;&quot;text&quot; : &quot;Main Depot BP&quot;,&#10;&quot;description&quot; : &quot;Main backpack inside depot&quot;,&#10;&quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;},&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;raredpbp&quot;,&#10;&quot;text&quot; : &quot;Rare Depot BP&quot;,&#10;&quot;description&quot; : &quot;loot backpack inside main depot bp&quot;,&#10;&quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;},&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;stackdpbp&quot;,&#10;&quot;text&quot; : &quot;Stack Depot BP&quot;,&#10;&quot;description&quot; : &quot;stack backpack inside main depot bp&quot;,&#10;&quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;}&#10;]&#10;},&#10;&#10;{&#10;&quot;type&quot;    : &quot;group&quot;,&#10;&quot;name&quot;    : &quot;Extra Options&quot;,&#10;&quot;column&quot;  : 2,&#10;&quot;children&quot;: [&#10;&#10;{&#10;&quot;type&quot;        : &quot;checkbox&quot;,&#10;&quot;name&quot;        : &quot;KeepHasted&quot;,&#10;&quot;description&quot; : &quot;If checked, you will use haste while hunting.&quot;,&#10;&quot;text&quot;        : &quot;Keep Hasted&quot;,&#10;&quot;value&quot;       : true&#10;},&#10;{&#10;&quot;type&quot;        : &quot;checkbox&quot;,&#10;&quot;name&quot;        : &quot;pvpes&quot;,&#10;&quot;description&quot; : &quot;If checked, then character won't enter other characters&quot;,&#10;&quot;text&quot;        : &quot;Server type is pvp?&quot;,&#10;&quot;value&quot;       : false&#10;},&#10;{&#10;&quot;type&quot;        : &quot;checkbox&quot;,&#10;&quot;name&quot;        : &quot;usestrongspells&quot;,&#10;&quot;description&quot; : &quot;If checked, then you will cast Exori gran frigo&quot;,&#10;&quot;text&quot;        : &quot;Cast Exori gran spells&quot;,&#10;&quot;value&quot;       : true&#10;},&#10;{&#10;&quot;type&quot;        : &quot;checkbox&quot;,&#10;&quot;name&quot;        : &quot;securespells&quot;,&#10;&quot;description&quot; : &quot;If checked, then you will not strike to monsters if player is 1 sqm from you (for retor and hardcore pvp)&quot;,&#10;&quot;text&quot;        : &quot;Safe Spells&quot;,&#10;&quot;value&quot;       : false&#10;},&#10;{&#10;&quot;type&quot;        : &quot;checkbox&quot;,&#10;&quot;name&quot;        : &quot;lootgold&quot;,&#10;&quot;description&quot; : &quot;If checked, then you will loot gold&quot;,&#10;&quot;text&quot;        : &quot;Loot Gold&quot;,&#10;&quot;value&quot;       : false&#10;},&#10;{&#10;&quot;type&quot;        : &quot;checkbox&quot;,&#10;&quot;name&quot;        : &quot;hunthero&quot;,&#10;&quot;description&quot; : &quot;If checked, then you will hunt heros&quot;,&#10;&quot;text&quot;        : &quot;Hunt Hero&quot;,&#10;&quot;value&quot;       : false&#10;},&#10;{&#10;&quot;type&quot;        : &quot;checkbox&quot;,&#10;&quot;name&quot;        : &quot;PlayerAlert&quot;,&#10;&quot;text&quot;        : &quot;Player Alert on spawn&quot;,&#10;&quot;value&quot;       : false&#10;}&#10;&#10;&#10;]&#10;},&#10;&#10;&#10;&#10;{&#10;&quot;type&quot;    : &quot;group&quot;,&#10;&quot;name&quot;    : &quot;Supplies&quot;,&#10;&quot;column&quot;  : 1,&#10;&quot;children&quot;: [&#10;&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;mptype&quot;,&#10;&quot;text&quot; : &quot;MP type&quot;,&#10;&quot;description&quot; : &quot;type of potion  to use&quot;,&#10;&quot;items&quot; : [&quot;Great Mana Potion[[item: Great Mana Potion]]&quot;,&quot;Strong Mana Potion[[item: Strong Mana Potion]]&quot;,&quot;Mana Potion[[item: Mana Potion]]&quot;]&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;MaxMana&quot;,&#10;&quot;text&quot; : &quot;Max Mana&quot;,&#10;&quot;description&quot; : &quot;Amount of great mana potions to buy.&quot;,&#10;&quot;suffix&quot; : &quot; GMP &quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 10000,&#10;&quot;value&quot; : 100&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;MinMana&quot;,&#10;&quot;text&quot; : &quot;Min Mana&quot;,&#10;&quot;description&quot; : &quot;Amount of great mana potions to buy.&quot;,&#10;&quot;suffix&quot; : &quot; GMP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 10000,&#10;&quot;value&quot; : 40&#10;}&#10;&#10;]&#10;}&#10;&#10;"/>
        </Options>
        <SpecialAreas>
            <Area name="SArea" x="32925" y="31079" z="3" type="Square (Filled)" width="1" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Cavebot &amp; Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea1" x="32929" y="31078" z="3" type="Square (Filled)" width="1" height="3" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Cavebot &amp; Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea2" x="32927" y="31081" z="3" type="Square (Filled)" width="2" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Cavebot &amp; Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea5" x="32875" y="31084" z="5" type="Square (Filled)" width="6" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea6" x="32877" y="31086" z="5" type="Square (Filled)" width="2" height="2" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea7" x="32877" y="31088" z="5" type="Square (Filled)" width="1" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
        </SpecialAreas>
        <CavebotScripts/>
        <WaypointSection name="Refill">
            <Waypoint type="Stand" x="32800" y="31246" z="7" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Stand" x="32797" y="31246" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32793" y="31246" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32793" y="31246" z="6" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;start&quot;)&#10;end"/>
            <Waypoint type="Action" x="32793" y="31246" z="6" rangeX="1" rangeY="1" script="depot()"/>
            <Waypoint type="Stand" x="32796" y="31246" z="6" rangeX="1" rangeY="1" label="gobank"/>
            <Waypoint type="Stand" x="32797" y="31246" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32805" y="31253" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32811" y="31254" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32818" y="31253" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32819" y="31249" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32819" y="31249" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;gobank&quot;)&#10;end"/>
            <Waypoint type="Action" x="32819" y="31249" z="7" rangeX="1" rangeY="1" script="bpsforbank()&#10;withdrawmoney()"/>
            <Waypoint type="Stand" x="32819" y="31249" z="7" rangeX="1" rangeY="1" label="gomshop"/>
            <Waypoint type="Node" x="32817" y="31239" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32799" y="31232" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32791" y="31233" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32790" y="31239" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32789" y="31239" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32789" y="31238" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32789" y="31238" z="5" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;gomshop&quot;)&#10;end"/>
            <Waypoint type="Action" x="32789" y="31238" z="5" rangeX="1" rangeY="1" script="suppshop()"/>
            <Waypoint type="Stand" x="32789" y="31239" z="5" rangeX="1" rangeY="1" label="gocheck"/>
            <Waypoint type="Stand" x="32790" y="31239" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32790" y="31235" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32797" y="31233" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32797" y="31233" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;gocheck&quot;)&#10;end"/>
            <Waypoint type="Action" x="32797" y="31233" z="7" rangeX="1" rangeY="1" script="if not checksupp() then&#10;gotolabel(&quot;start&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32805" y="31232" z="7" rangeX="1" rangeY="1" label="gohunt"/>
            <Waypoint type="Stand" x="32830" y="31233" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32833" y="31245" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32842" y="31245" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32848" y="31241" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32854" y="31235" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32858" y="31224" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32860" y="31207" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32859" y="31191" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32854" y="31179" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32847" y="31172" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32840" y="31165" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32834" y="31159" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32834" y="31155" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32834" y="31153" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32834" y="31150" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32834" y="31147" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32834" y="31145" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32834" y="31143" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32834" y="31140" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32834" y="31140" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;gohunt&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32834" y="31139" z="7" rangeX="1" rangeY="1" label="gohunt1"/>
            <Waypoint type="Node" x="32836" y="31132" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32841" y="31125" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32847" y="31118" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32854" y="31108" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32864" y="31099" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32867" y="31083" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32872" y="31068" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32882" y="31056" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32884" y="31052" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32885" y="31052" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32888" y="31052" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32889" y="31053" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32889" y="31053" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;gohunt1&quot;)&#10;else&#10;bpsforhunt()&#10;gotolabel(&quot;start&quot;,&quot;Hunt&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Hunt">
            <Waypoint type="Stand" x="32889" y="31069" z="7" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Stand" x="32892" y="31069" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32891" y="31069" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32892" y="31069" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32891" y="31069" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32892" y="31069" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32891" y="31069" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32892" y="31069" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32886" y="31070" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32885" y="31069" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32886" y="31069" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32885" y="31069" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32886" y="31069" z="3" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32885" y="31069" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32886" y="31069" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32885" y="31069" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32885" y="31075" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32880" y="31077" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32878" y="31077" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32879" y="31077" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32878" y="31077" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32879" y="31077" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32878" y="31077" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32883" y="31079" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32886" y="31083" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32886" y="31083" z="7" rangeX="1" rangeY="1" script="if not hunthero then&#10;gotolabel(&quot;skiphero1&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32883" y="31086" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32879" y="31087" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32880" y="31089" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32878" y="31089" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32878" y="31089" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32880" y="31089" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32880" y="31087" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32890" y="31087" z="7" rangeX="1" rangeY="1" label="skiphero1"/>
            <Waypoint type="Stand" x="32893" y="31092" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32893" y="31097" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32893" y="31095" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32893" y="31095" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32894" y="31095" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32893" y="31097" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32893" y="31091" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32901" y="31092" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32904" y="31096" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32907" y="31101" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32907" y="31102" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32908" y="31102" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32907" y="31102" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32908" y="31102" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32908" y="31102" z="3" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32907" y="31102" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32908" y="31102" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32907" y="31102" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32907" y="31100" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32903" y="31095" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32900" y="31091" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32897" y="31086" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32896" y="31085" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32896" y="31082" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32895" y="31080" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32898" y="31080" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32904" y="31079" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32907" y="31079" z="5" rangeX="1" rangeY="1" script="if not hunthero then&#10;gotolabel(&quot;skiphero2&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32904" y="31076" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32904" y="31074" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32905" y="31074" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32904" y="31074" z="3" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32904" y="31074" z="2" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32905" y="31074" z="3" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32904" y="31074" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32905" y="31077" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32907" y="31079" z="5" rangeX="1" rangeY="1" label="skiphero2"/>
            <Waypoint type="Stand" x="32913" y="31079" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32919" y="31080" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32925" y="31080" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32928" y="31079" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32928" y="31078" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32928" y="31078" z="4" rangeX="1" rangeY="1" script="if not hunthero then&#10;gotolabel(&quot;skiphero3&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32927" y="31079" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32927" y="31079" z="3" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32928" y="31080" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32928" y="31079" z="4" rangeX="1" rangeY="1" label="skiphero3"/>
            <Waypoint type="Stand" x="32923" y="31082" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32925" y="31087" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32926" y="31094" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32929" y="31100" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32933" y="31103" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32934" y="31107" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32933" y="31112" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32933" y="31113" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32934" y="31109" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32936" y="31106" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32935" y="31110" z="3" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32936" y="31106" z="3" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32934" y="31113" z="2" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32933" y="31113" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32933" y="31106" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32929" y="31101" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32924" y="31095" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32917" y="31088" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32910" y="31083" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32905" y="31080" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32900" y="31080" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32895" y="31080" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32895" y="31084" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32895" y="31085" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32889" y="31084" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32889" y="31077" z="7" rangeX="1" rangeY="1"/>
        </WaypointSection>
        <WaypointSection name="Leave">
            <Waypoint type="Stand" x="32907" y="31080" z="5" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Stand" x="32900" y="31080" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32895" y="31080" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32895" y="31084" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32895" y="31085" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32889" y="31080" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32889" y="31075" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32889" y="31067" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32889" y="31058" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32888" y="31052" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32886" y="31052" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32884" y="31053" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32884" y="31053" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;start&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32883" y="31057" z="7" rangeX="1" rangeY="1" label="tocity"/>
            <Waypoint type="Node" x="32878" y="31061" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32871" y="31070" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32869" y="31083" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32867" y="31096" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32859" y="31103" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32851" y="31111" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32843" y="31121" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32836" y="31133" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32835" y="31141" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32835" y="31143" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32835" y="31145" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32835" y="31149" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32834" y="31153" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32834" y="31155" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32834" y="31159" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32834" y="31159" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;tocity&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32835" y="31160" z="7" rangeX="1" rangeY="1" label="tocity1"/>
            <Waypoint type="Node" x="32841" y="31166" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32845" y="31171" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32852" y="31174" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32857" y="31180" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32859" y="31197" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32858" y="31210" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32856" y="31226" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32849" y="31231" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32848" y="31240" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32843" y="31247" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32836" y="31253" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32823" y="31254" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32805" y="31254" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32800" y="31249" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32800" y="31249" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;tocity1&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Refill&quot;)&#10;end"/>
        </WaypointSection>
    </Cavebot>
    <Looting enabled="yes">
        <Options>
            <Option range="10"/>
            <Option moveItemsQuickly="yes"/>
            <Option eatFoodFromCorpse="yes"/>
            <Option openNextBP="yes"/>
            <Option openBPsAtLogin="no"/>
            <Option valuableBodies="3000"/>
            <Option ultraValuableBodies="50000"/>
            <Option alertOnValuableBodies="no"/>
            <Option openValuableBodiesOnly="no"/>
            <Option openUltraValuableBodiesImmediately="no"/>
            <Option policy="Smart Looting"/>
            <LootingDestinations>
                <lootingDestination name="lootbp" destination="orange backpack"/>
                <lootingDestination name="goldbp" destination="grey backpack"/>
            </LootingDestinations>
        </Options>
        <LootingProfile name="LootList" isCurrentProfile="yes">
            <LootItem name="gold coin" id="3031" sellPrice="1" weight="0.10" destinationName="goldbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="boots of haste" id="3079" sellPrice="30000" weight="7.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="green mushroom" id="3732" sellPrice="100" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="small notebook" id="11450" sellPrice="480" weight="0.80" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="spellbook of warding" id="8073" sellPrice="8000" weight="21.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="skull staff" id="3324" sellPrice="6000" weight="17.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="scroll of heroic deeds" id="11510" sellPrice="230" weight="0.79" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="noble axe" id="7456" sellPrice="10000" weight="38.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="might ring" id="3048" sellPrice="250" weight="1.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="wedding ring" id="3004" sellPrice="100" weight="0.40" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="crown legs" id="3382" sellPrice="12000" weight="65.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="fire sword" id="3280" sellPrice="4000" weight="23.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="crown shield" id="3419" sellPrice="8000" weight="62.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="crown armor" id="3381" sellPrice="12000" weight="99.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="necromantic robe" id="11475" sellPrice="250" weight="2.20" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="crown helmet" id="3385" sellPrice="2500" weight="29.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="red piece of cloth" id="5911" sellPrice="300" weight="5.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="book of necromantic rituals" id="10320" sellPrice="180" weight="3.58" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="necrotic rod" id="3069" sellPrice="1000" weight="23.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="wand of decay" id="3072" sellPrice="1000" weight="23.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="mystic turban" id="3574" sellPrice="150" weight="8.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="war hammer" id="3279" sellPrice="1200" weight="85.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="small enchanted amethyst" id="678" sellPrice="0" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="reins" id="12308" sellPrice="0" weight="2.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="piggy bank" id="2995" sellPrice="0" weight="7.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="great health potion" id="239" sellPrice="0" weight="3.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
        </LootingProfile>
    </Looting>
    <Supplies>
        <Options>
            <Option defaultBackpack=""/>
            <Option extraCashMin="1000" extraCashMax="2500"/>
            <Option autoSwitchProfiles="no"/>
        </Options>
        <SupplyProfile name="SupplyList" vocation="Druid" level="50" isCurrentProfile="yes">
            <SupplyItem name="mana potion" id="268" buyPrice="50" weight="2.70" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="great mana potion" id="238" buyPrice="120" weight="3.10" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="strong mana potion" id="237" buyPrice="80" weight="2.90" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
        </SupplyProfile>
    </Supplies>
    <Targeting enabled="yes" allowDiagonalMovement="yes" autoSwitchProfiles="no" nonPvPMode="no">
        <TargetingProfile name="TargetList" vocation="Sorcerer, Druid" level="50" targetMustBeShootable="no" targetMustBeReachable="yes" isCurrentProfile="yes">
            <Priorities>
                <Priority health="20"/>
                <Priority proximity="30"/>
                <Priority danger="10"/>
                <Priority random="0"/>
                <Priority lure="30"/>
                <Priority stick="2"/>
            </Priorities>
            <Creatures>
                <Creature name="Hero" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Keep Away" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Necromancer" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Keep Away" distance="2" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Dark Apprentice" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Dark Magician" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="Ice Strike" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Others" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
            </Creatures>
        </TargetingProfile>
    </Targeting>
    <OtherBots>
        <HealingPaths/>
        <TargetingPaths/>
    </OtherBots>
</WindbotSettings>
