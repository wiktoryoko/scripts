<?xml version="1.0" encoding="UTF-8"?>
<WindbotSettings>
    <Healer>
        <SpellHealer enabled="yes">
            <HealRule name="NewHealRule" spell="Wound Cleansing" condition="Health Percent below" conditionMin="90" conditionMax="90" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </SpellHealer>
        <PotionHealer enabled="yes">
            <HealRule name="NewHealRule1" spell="Ultimate Health Potion" condition="Health Percent below" conditionMin="40" conditionMax="40" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="NewHealRule2" spell="Great Health Potion" condition="Health Percent below" conditionMin="50" conditionMax="50" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="NewHealRule" spell="Mana Potion" condition="Mana Percent below" conditionMin="85" conditionMax="85" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </PotionHealer>
        <ConditionHealer enabled="yes">
            <HealRule name="NewHealRule" spell="Haste" condition="Not Hasted" conditionMin="0" conditionMax="0" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </ConditionHealer>
        <ManaTrainer manaTrainCondition="Mana Percent above" manaTrainMin="87" manaTrainMax="93" enabled="no"/>
    </Healer>
    <Scripter>
        <HotkeyScripts/>
        <PersistentScripts>
            <PersistentScript name="Settings" script="init start&#10;&#10;local minAmount = 30&#10;local randMinAmount = minAmount&#10;&#10;init end&#10;    &#10;auto(100)&#10;if keephaste then&#10;setsetting('ConditionHealer/Rules/NewHealRule/Enabled', 'yes')&#10;else&#10;setsetting('ConditionHealer/Rules/NewHealRule/Enabled', 'no')&#10;end&#10;&#10;if getuseroption('lootgold') then&#10;setsetting('Looting/LootList/gold coin/Action', 'Loot')&#10;else&#10;&#10;end&#10;&#10;&#10;&#10;&#10;--[[&#10;if maround(1) == 0 and maround(6) &gt;= 1 and $posz == 6 then&#10;setsetting('Targeting/Creatures/Category A/Setting1/Stance', 'Reach')&#10;else&#10;setsetting('Targeting/Creatures/Category A/Setting1/Stance', 'No Movement')&#10;end&#10;]]--&#10;&#10;&#10;&#10;&#10;&#10;dontlist()&#10;    &#10;if flasks() &gt;= randMinAmount and $cap &lt; 700 then&#10;    if maround() ~= 0 then&#10;     wait(500, 1000)&#10;    else&#10;     pausewalking(10000)&#10;&#10;    for i = 283, 285 do&#10;     if itemcount(i) &gt; 0 then&#10;      moveitems(i, 'ground')&#10;      waitping()&#10;     end&#10;    end&#10;    &#10; pausewalking(0)&#10;&#10;end&#10;    randMinAmount = math.random(minAmount - 5, minAmount + 5)&#10;end&#10;&#10;setlootingdestination(&quot;mainbp&quot;, mainbp) &#10;setlootingdestination(&quot;supplybp&quot;, supplybp) &#10;setlootingdestination(&quot;lootbp&quot;, lootbp) &#10;setlootingdestination(&quot;goldbp&quot;, goldbp) &#10;setlootingdestination(&quot;maindpbp&quot;, maindp) &#10;setlootingdestination(&quot;stackdpbp&quot;, stackdp) &#10;setlootingdestination(&quot;raredpbp&quot;, raredp)&#10;&#10;local cb = getsetting('Cavebot/Enabled')&#10;if cb == 'yes' then&#10;if not $navigation then&#10;setsetting('Cavebot/Enabled', 'no')&#10;messagebox(&quot;Navigation&quot;,&quot;Please connect to navigation server and start cavebot again. If you dont know how to connect NAVIGATION ROOM check navi guide file.&quot;)&#10;end&#10;end&#10;&#10;if getuseroption('pvpes') then&#10;&#10;if $pzone then&#10;setsetting('Cavebot/WalkThroughPlayers', 'yes')&#10;else&#10;setsetting('Cavebot/WalkThroughPlayers', 'no')&#10;end&#10;&#10;else&#10;&#10;setsetting('Cavebot/WalkThroughPlayers', 'yes')&#10;&#10;end&#10;&#10;&#10;&#10;&#10;&#10;-----------------------&#10;&#10;    -- local SCRIPT_VERSION = '1.0.1'&#10;if $wptsection == &quot;Lure1&quot;&#10;or $wptsection == &quot;Lure2&quot;&#10;or $wptsection == &quot;Lure3&quot;&#10;or $wptsection == &quot;Lure4&quot;&#10;or $wptsection == &quot;Lure5&quot;&#10;or $wptsection == &quot;Lure6&quot;&#10;or $wptsection == &quot;Lure7&quot;&#10;or $wptsection == &quot;Lure8&quot;&#10;or $wptsection == &quot;Lure9&quot;  then&#10;    local alerts = {&#10;    {&#10;    name = 'Player on Screen',&#10;    sound = 'playeronscreen.wav',&#10;&#10;    playSound = getuseroption('alertonspawn'),&#10;    pauseBot = false,&#10;    logout = false,&#10;    safelist = {getuseroption('friendname')}&#10;    },&#10;    {&#10;    name = 'Player Attacking',&#10;    sound = 'playerattacking.wav',&#10;&#10;    playSound = getuseroption('alertonspawn'),&#10;    pauseBot = false,&#10;    logout = false,&#10;    safelist = {getuseroption('friendname')}&#10;    },&#10;    {&#10;    name = 'Monster Attacking',&#10;    sound = 'monsterattacking.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    safelist = {'Rat', 'Bat'}&#10;    },&#10;    {&#10;    name = 'Private Message',&#10;    sound = 'privatemessage.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    safelist = {'Bubble', 'Cachero'}&#10;    },&#10;    {&#10;    name = 'Default Message',&#10;    sound = 'defaultmessage.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    safelist = {'Bubble', 'Cachero'}&#10;    },&#10;    {&#10;    name = 'GM Detected',&#10;    sound = 'gmdetected.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false&#10;    },&#10;    {&#10;    name = 'Disconnected',&#10;    sound = 'disconnected.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false&#10;    },&#10;    {&#10;    name = 'Character Stuck',&#10;    sound = 'characterstuck.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    stuckTime = 30000 -- ms&#10;    },&#10;    {&#10;    name = 'Health Below',&#10;    sound = 'lowhealth.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    pcBelow = 50&#10;    },&#10;    {&#10;    name = 'Mana Below',&#10;    sound = 'lowmana.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    pcBelow = 50&#10;    }&#10;    }&#10;&#10;    -- Do not edit below this line&#10;&#10;    do&#10;    local tests = {&#10;    function(safelist) return paroundignore(10, table.unpack(safelist)) &gt; 0 end,&#10;    function(safelist) return $pattacker.id ~= 0 and not table.find(safelist, $pattacker.name:lower()) end,&#10;    function(safelist) return $mattacker.id ~= 0 and not table.find(safelist, $mattacker.name:lower()) end,&#10;    function(safelist) foreach newmessage m do if m.type == MSG_PVT then return true end end return false end,&#10;    function(safelist) foreach newmessage m do if m.type == MSG_WHISPER or m.type == MSG_DEFAULT or m.type == MSG_YELL then return true end end return false end,&#10;    function() foreach creature c do if c.name:starts('GM') or c.name:starts('CM') then return true end end return false end,&#10;    function() return not $connected end,&#10;    function(stuckTime) return $standtime &gt; stuckTime end,&#10;    function(pcBelow) return $hppc &lt; pcBelow end,&#10;    function(pcBelow) return $mppc &lt; pcBelow end&#10;    }&#10;&#10;    for i = 1, #alerts do&#10;    local alert = alerts[i]&#10;    alert.test = tests[i]&#10;&#10;    if alert.safelist then&#10;    table.lower(alert.safelist)&#10;    end&#10;    end&#10;    end&#10;&#10;&#10;    auto(100)&#10;    listas('Alerts')&#10;    for _, v in ipairs(alerts) do&#10;    if v.test(v.safelist or v.stuckTime or v.pcBelow) then&#10;    if v.playSound then&#10;    playsound(v.sound)&#10;    end&#10;    if v.pauseBot then&#10;    pausebot(true)&#10;    end&#10;    if v.logout then&#10;    xlog()&#10;    end&#10;    end&#10;    end&#10;end" enabled="yes"/>
            <PersistentScript name="Functions" script="init start&#10;friendwaste = 0&#10;init end&#10;auto(1000)&#10;fname = getuseroption('friendname')&#10;mainbp = getuseroption('MainBP')&#10;lootbp = getuseroption('LootBP')&#10;supplybp = getuseroption('SuppliesBP')&#10;goldbp = getuseroption('GoldBP')&#10;extrabp = getuseroption('ExtraBP')&#10;golower = getuseroption('enterdown')&#10;&#10;maindp = getuseroption('maindpbp')&#10;stackdp = getuseroption('stackdpbp')&#10;raredp = getuseroption('raredpbp')&#10;&#10;ringname = getuseroption('ringname')&#10;maxuhp = getuseroption('MaxUHP')&#10;maxghp = getuseroption('MaxGHP')&#10;manamax = getuseroption('MaxMana')&#10;useextrabp = getuseroption('uebp')&#10;sharemoney = getuseroption('sharemoney')&#10;cre = getcreature(fname)&#10;manamin = getuseroption('MinMana')&#10;minghp = getuseroption('MinGHP')&#10;minuhp = getuseroption('MinUHP')&#10;keephaste = getuseroption('KeepHasted')&#10;&#10;&#10;&#10;sak1 = getuseroption('bootsofhaste')&#10;sak2 = getuseroption('nightmareblade')&#10;sak3 = getuseroption('assasindagger')&#10;sak4 = getuseroption('sai')&#10;sak5 = getuseroption('hauntedblade')&#10;sak6 = getuseroption('shadowsceptre')&#10;sak7 = getuseroption('terralegs')&#10;sak8 = getuseroption('gloriousaxe')&#10;sak9 = getuseroption('titanaxe')&#10;sak10 = getuseroption('terraboots')&#10;sak11 = getuseroption('diamondsceptre')&#10;&#10;function depot()&#10;setsetting('PotionHealer/Enabled', 'no')&#10;setsetting('SpellHealer/Enabled', 'no')&#10;setsetting('ConditionHealer/Enabled', 'no')&#10;&#10;bala = $balance&#10;&#10;setsetting('Looting/OpenNextBP', 'no')&#10;closewindows()&#10;wait(2000)&#10;while windowcount() &lt; 2 do&#10;closewindows()&#10;wait(500,1200)&#10;openitem(mainbp, &quot;back&quot;, true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;openitem(lootbp,mainbp,true)&#10;wait(500,1200)&#10;resizewindows()&#10;end&#10;&#10;&#10;while windowcount(&quot;Depot Chest&quot;) == 0 do&#10;&#9;opendepot()&#10;&#9;wait(500)&#10;end&#10;&#10;&#10;while windowcount(lootbp) == 0 do&#10;openitem(lootbp,mainbp,true)&#10;wait(300)&#10;end&#10;&#10;&#10;while windowcount(maindp) == 0 do &#10;openitem(maindp, &quot;Depot Chest&quot;) &#10;wait(300,500) &#10;resizewindows(1000,maindp) &#10;wait(300,500) &#10;end &#10;&#10;&#10;&#10;setsetting('Looting/OpenNextBP', 'no')&#10;waitping()&#10;&#10;&#10;local CONFIG = {&#10;    LOOT_BACKPACK = lootbp,&#10;    MAIN_DP_BACKPACK = maindp,&#10;    STACKABLE_BACKPACK = stackdp,&#10;    NOT_STACKABLE_BACKPACK = raredp,&#10;}&#10; &#10;clearlastonto()&#10; &#10;while (true) do&#10;&#9;foreach lootingitem ITEM_ENTRY do&#10;if ITEM_ENTRY.id == 3035 then&#10;else&#10;&#9;&#9;while (itemcount(ITEM_ENTRY.id, CONFIG.LOOT_BACKPACK) &gt; 0) do&#10;&#10;&#9;&#9;&#9;if (itemproperty(ITEM_ENTRY.id, ITEM_STACKABLE)) then&#10;&#9;&#9;&#9;&#9;moveitemsonto(ITEM_ENTRY.id, CONFIG.STACKABLE_BACKPACK, 1, CONFIG.MAIN_DP_BACKPACK, CONFIG.LOOT_BACKPACK) wait(600, 1200)&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;moveitemsonto(ITEM_ENTRY.id, CONFIG.NOT_STACKABLE_BACKPACK, $lastonto, CONFIG.MAIN_DP_BACKPACK, CONFIG.LOOT_BACKPACK) wait(600, 200)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;end&#10;end&#10;&#10; &#10;    if (itemcount(CONFIG.LOOT_BACKPACK, CONFIG.LOOT_BACKPACK) &gt; 0) then&#10;        openitem(CONFIG.LOOT_BACKPACK, CONFIG.LOOT_BACKPACK, false) waitcontainer(CONFIG.LOOT_BACKPACK, false)&#10;    else&#10;        break&#10;    end&#10; &#10;    wait(100)&#10;end&#10;&#10;closewindows()&#10;&#10;wait(700, 900)&#10;&#10;if getuseroption(&quot;market&quot;) then&#10;while not $marketopen do&#10;wait(200)&#10;openmarket()&#10;wait(500)&#10;end&#10;sellitemsmarket('boots of haste', sak1, 9999, true, true)&#10;sellitemsmarket('nightmare blade', sak2, 9999, true, true)&#10;sellitemsmarket('assassin dagger', sak3, 9999, true, true)&#10;sellitemsmarket('sai', sak4, 9999, true, true)&#10;sellitemsmarket('haunted blade', sak5, 9999, true, true)&#10;sellitemsmarket('shadow sceptre', sak6, 9999, true, true)&#10;sellitemsmarket('terra legs', sak7, 9999, true, true)&#10;sellitemsmarket('glorious axe', sak8, 9999, true, true)&#10;sellitemsmarket('titan axe', sak9, 9999, true, true)&#10;sellitemsmarket('terra boots', sak10, 9999, true, true)&#10;sellitemsmarket('diamond sceptre', sak11, 9999, true, true)&#10;&#10;waitping()&#10;closemarket()&#10;end&#10;&#10;setsetting('PotionHealer/Enabled', 'yes')&#10;setsetting('SpellHealer/Enabled', 'yes')&#10;setsetting('ConditionHealer/Enabled', 'yes')&#10;&#10;end&#10;&#10;function bpsforbank()&#10;minimizewindows('equip')&#10;if not islocation(1) then&#10;&#9;gotolabel(&quot;gobank&quot;)&#10;else&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;minimizewindows('equip')&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(supplybp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end&#10;if useextrabp then&#10;while windowcount &lt; 3 do&#10;openitem(extrabp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end &#10;end&#10;end&#10;end&#10;&#10;&#10;function transfermoney()&#10;say(&quot;hi&quot;)&#10;wait(1000)&#10;&#10;if $balance == 0 then&#10;npcsay(&quot;balance&quot;)&#10;wait(1000)&#10;end&#10;&#10;npcsay(&quot;deposit all&quot;)&#10;wait(500)&#10;npcsay(&quot;yes&quot;)&#10;wait(1000)&#10;if sharemoney then&#10;npcsay(&quot;balance&quot;)&#10;wait(2000)&#10;local mtt = positive(($balance - bala) / 2)&#10;local mttt = math.ceil(mtt)&#10;npcsay(&quot;transfer &quot;..mttt..&quot; to &quot;..fname)&#10;wait(1000)&#10;npcsay(&quot;yes&quot;)&#10;end&#10;end&#10;&#10;&#10;function withdrawmoney()&#10;&#10;Mana = math.positive(manamax - itemcount(&quot;mana potion&quot;)) * 50&#10;GHP = math.positive(maxghp - itemcount(&quot;great health potion&quot;)) * 190 &#10;UHP = math.positive(maxuhp - itemcount(&quot;ultimate health potion&quot;)) * 310&#10;Total = math.ceil(Mana + GHP + UHP, 10000) + 10000&#10;&#10;&#10;if islocation(1) then&#10;&#9;npctalk(&quot;hi&quot;, &quot;withdraw &quot;..Total, &quot;yes&quot;, &quot;balance&quot;)&#10;else&#10;gotolabel(&quot;enterbank&quot;)&#10;end&#10;end&#10;&#10;function suppshop()&#10;if islocation() then&#10;&#10;&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;minimizewindows('equip')&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(supplybp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end&#10;if useextrabp then&#10;while windowcount &lt; 3 do&#10;openitem(extrabp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end &#10;end&#10;&#10;sellflasks()&#10;&#10;--GHP&#10;amount2 = tonumber(maxghp) - itemcount(&quot;great health potion&quot;)&#10;while amount2 &gt; 0 and islocation(1) do &#10;&#9;buyitems(&quot;great health potion&quot;, amount2) &#10;&#9;waitping(2,3)&#10;&#10;&#9;&#9;moveitems(&quot;great health potion&quot;,supplybp, mainbp) &#10;&#10;&#9;waitping(2,3)&#10;&#9;amount2 = amount2-100&#10;end&#10;&#10;--UHP&#10;amount3 = tonumber(maxuhp) - itemcount(&quot;ultimate health potion&quot;)&#10;while amount3 &gt; 0 and islocation(1) do &#10;&#9;buyitems(&quot;ultimate health potion&quot;, amount3) &#10;&#9;waitping(2,3)&#10;&#10;&#9;moveitems(&quot;ultimate health potion&quot;,supplybp, mainbp) &#10;&#10;waitping(2,3)&#10;&#9;amount3 = amount3-100&#10;end&#10;&#10;--MANAS&#10;amount1 = tonumber(manamax) - itemcount(&quot;mana potion&quot;)&#10;while amount1 &gt; 0 and islocation(1) do &#10;&#9;buyitems(&quot;mana potion&quot;, amount1) &#10;&#9;waitping(2,3)&#10;&#9;if getcontainer(supplybp).emptycount &gt; 0 then&#10;&#9;&#9;moveitems(&quot;mana potion&quot;,supplybp, mainbp) &#10;&#9;else&#10;&#9;&#9;moveitems(&quot;mana potion&quot;,extrabp, mainbp) &#10;&#9;end&#10;&#9;waitping(2,3)&#10;&#9;amount1 = amount1-100&#10;end&#10;&#10;end&#10;&#10;npcsay(&quot;bye&quot;)&#10;end&#10;&#10;function checksupp()&#10;&#10;if itemcount(&quot;mana potion&quot;) + 10 &lt; tonumber(manamax) or itemcount(&quot;great health potion&quot;) &lt; tonumber(maxghp) or itemcount(&quot;ultimate health potion&quot;) &lt; tonumber(maxuhp) then&#10;&#9;&#9;gotolabel(&quot;start&quot;)&#10;&#9;end&#10;&#10;end&#10;&#10;&#10;&#10;&#10;function selfonlyiftraped()&#10;setsetting('Targeting/Creatures/Category A/Setting1/OnlyIfTrapped', 'yes')&#10;end&#10;&#10;function selfnoonlyiftraped()&#10;setsetting('Targeting/Creatures/Category A/Setting1/OnlyIfTrapped', 'no')&#10;navsay(&quot;youcanreachmonsters&quot;)&#10;end&#10;&#10;function bothonlyiftraped()&#10;navsay(&quot;bothonlyiftraped&quot;)&#10;end&#10;&#10;&#10;function bpsforhunt()&#10;higherwindows('equip')&#10;&#10;closewindows()&#10;wait(1000)&#10;&#10;while windowcount() &lt; 4 do&#10;closewindows()&#10;  wait(500,800)&#10;  openitem(mainbp, &quot;back&quot;, true)&#10;  wait(500,800)&#10;  resizewindows()&#10;  wait(500,800)&#10;  openitem(supplybp,mainbp,true)&#10;  wait(500,800)&#10;  resizewindows()&#10;  openitem(lootbp,mainbp,true)&#10;  wait(500,800)&#10;  resizewindows()&#10;openitem(goldbp,mainbp,true)&#10;  wait(500,800)&#10;  resizewindows()&#10; end&#10;&#10; if useextrabp then&#10;while windowcount &lt; 5 do&#10;openitem(extrabp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end &#10;end&#10;  &#10;setsetting('Looting/OpenNextBP', 'yes')&#10;end&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;" enabled="yes"/>
            <PersistentScript name="Balance Reciver" script="init start&#10;     function navmessages( m)&#10;&#10;--print(m.message)&#10;local msg = m.message&#10;&#10;&#10;local bal = tonumber((msg:match(&quot;waste-:(%d+)&quot;)))&#10;if bal then&#10;balanc =  bal - friendwaste&#10;friendwaste = bal&#10;increasemoneyspent(balanc)&#10;end&#10;&#10;end&#10;init end" enabled="yes"/>
            <PersistentScript name="Variables" script="init start&#10;respon = false&#10;init end&#10;&#10;--Variables&#10;auto(100)&#10;&#10;&#10;setpvpmode(&quot;security&quot;,&quot;white&quot;)&#10;&#10;if itemcount(&quot;mana potion&quot;) &lt;= tonumber(manamin) or itemcount(&quot;great health potion&quot;) &lt;= tonumber(minghp) or itemcount(&quot;ultimate health potion&quot;) &lt;= tonumber(minuhp) then&#10;havesupply = false&#10;else&#10;havesupply = true&#10;end&#10;if cre.onscreen then&#10;friendonscreen = true&#10;else&#10;friendonscreen = false&#10;end&#10;&#10;&#10;mparty = $self.party&#10;fparty = cre.party&#10;if mparty == 0 and fparty == 0 then&#10;party = 'not in party'&#10;elseif fparty == 1 or fparty == 2 then&#10;if fparty == 1 then&#10;party = 'join to party on ed'&#10;elseif fparty == 2 then&#10;party = 'join to party on ek'&#10;end&#10;else&#10;if mparty == 3 or 4 then&#10;party = 'shared is not enabled'&#10;end&#10;if mparty == 7 or mparty == 8 then&#10;party = 'shared not working'&#10;end&#10;if mparty == 5 or mparty == 6 then&#10;party = 'shared working'&#10;end&#10;end" enabled="yes"/>
            <PersistentScript name="Nav Messages" script="init start&#10;     function navmessages( m)&#10;&#10;&#10;&#10;print(&quot;                            ..&quot;..m.message..&quot;..&quot;)&#10;if m.message == 'bothonlyiftraped' then&#10;selfonlyiftraped()&#10;end&#10;--if enterspawn then&#10;&#10;if m.message == &quot;ihavenotpotionshunt&quot; or&#10;m.message == &quot;yesihavepotionshunt&quot; or&#10;m.message == &quot;okletsleave&quot; or&#10;m.message == &quot;yesihavepotions&quot; or &#10;m.message == &quot;noihavenotpotions&quot; or&#10;m.message == &quot;okletsgonextlure&quot; then&#10;respon = m.message&#10;respond = true&#10;end&#10;&#10;if m.message == &quot;lowermlvl&quot; then&#10;edlowermlvl = true&#10;end&#10;&#10;&#10;--end&#10;&#10;&#10;&#10;end&#10;init end" enabled="yes"/>
            <PersistentScript name="Exori" script="    init start&#10;&#10;&#9;local Monsters = {&quot;Frazzlemaw&quot;,&quot;Silencer&quot;,&quot;Shock Head&quot;}&#10;&#9;init end&#10;&#9;auto(100,200)&#10;&#10;    local Players = {&#10;    Consider = false,&#10;    Distance = 2,&#10;    FloorDifference = 1,&#10;    SafeList = {},&#10;    }&#10;&#10;    local Spells = {&#10;    {Name = &quot;exori gran&quot;, Amount = 3},&#10;    {Name = &quot;exori&quot;, Amount = 2},&#10;    {Name = &quot;exori min&quot;, Amount = 3},&#10;    {Name = &quot;exori ico&quot;, Hppc = 10},&#10;    {Name = &quot;exori hur&quot;, Hppc = 10},&#10;    {Name = &quot;exori gran ico&quot;, Hppc = 10},&#10;    {Name = &quot;utito tempo&quot;, Amount = getuseroption('utitoc')},&#10;    }&#10;&#10;    local SpecialAreas = {&#10;    -- {min x, max x, min y, max y, z}&#10;    }&#10;&#10;    local UseTargetState = true&#10;&#10;    -- DO NOT CHANGE ANYTHING BELOW THIS LINE&#10;&#10;    local i, LastFloor, Exhaust = 1, $posz, $timems&#10;&#10;    while Spells[i] ~= nil do&#10;    Spells[i].Info = spellinfo(Spells[i].Name)&#10;&#10;    if Spells[i].Info.words == 0 then&#10;    table.remove(Spells, i)&#10;    else&#10;    Spells[i].Monsters = Spells[i].Monsters or Monsters&#10;    Spells[i].NeedDirection = table.find({&quot;WaveSmall&quot;, &quot;WaveVerySmall&quot;, &quot;WaveBig&quot;, &quot;BeamSmall&quot;, &quot;BeamBig&quot;, &quot;Front&quot;, &quot;Strike&quot;}, Spells[i].Info.castarea) ~= nil&#10;    Spells[i].AttackSupport = Spells[i].Info.group:match(&quot;Support&quot;) ~= nil&#10;&#10;    table.lower(Spells[i].Monsters)&#10;    i = i + 1&#10;    end&#10;    end&#10;&#10;&#10;    auto(200, 400)&#10;&#10;    if $posz ~= LastFloor then&#10;    LastFloor, Exhaust = $posz, $timems + 2000&#10;    return&#10;    end&#10;&#10;    if $timems &gt;= Exhaust and ($targeting or not UseTargetState) then&#10;    for _, Spell in ipairs(Spells) do&#10;    if cancast(Spell.Info) and not isinsidearea(SpecialAreas) then&#10;    if Spell.Amount and (not Players.Consider or paroundfloorignore(Players.Distance, Players.FloorDifference, unpack(Players.SafeList)) == 0) then&#10;    local BestAmount, BestDir = 0, $self.dir&#10;&#10;    if Spell.NeedDirection then&#10;    for Dir, Amount in pairs({n = 0, e = 0, s = 0, w = 0}) do&#10;    Amount = maroundspell(Spell.Name, Dir, unpack(Spell.Monsters))&#10;&#10;    if Amount &gt; BestAmount or (Amount &gt;= BestAmount and Dir == $self.dir) then&#10;    BestAmount, BestDir = Amount, Dir&#10;    end&#10;    end&#10;    else&#10;    BestAmount = not Spell.AttackSupport and maroundspell(Spell.Name, BestDir, unpack(Spell.Monsters)) or maround(1, false, unpack(Spell.Monsters))&#10;    end&#10;&#10;    if BestAmount &gt;= math.max(Spell.Amount, 1) then&#10;    while $self.dir ~= BestDir do&#10;    turn(BestDir) waitping()&#10;    end&#10;    cast(Spell.Name) waitping()&#10;    end&#10;    elseif Spell.Hppc and $attacked.hppc &gt;= math.max(Spell.Hppc, 1) and table.find(Spell.Monsters, $attacked.name:lower()) and cancast(Spell.Info, $attacked) then&#10;    cast(Spell.Name) waitping()&#10;    end&#10;    end&#10;    end&#10;    end" enabled="yes"/>
            <PersistentScript name="Exeta" script="init start&#10;mamb = 0&#10;mam = 0&#10;init end&#10;auto(50)&#10;mam = maround(1)&#10;if mam &gt; mamb then&#10;cast(&quot;exeta res&quot;)&#10;mamb = maround(1)&#10;end&#10;if mam &lt; mamb then&#10;mamb = maround(1)&#10;end&#10;if maround(1) == 0 then&#10;mamb = 0&#10;end&#10;&#10;" enabled="yes"/>
            <PersistentScript name="checkpotions" script="function checkpotions()&#10;print(&quot;starting checkpotions function&quot;)&#10;&#10;if havesupply then---------&#10;pausewalking(1000)&#10;&#10;::askagainpotionshunt::&#10;navsay(&quot;doyouhavepotionshunt&quot;)&#10;wait(1000)&#10;pausewalking(1000)&#10;if respond then&#10;goto gotrespondhunt&#10;else&#10;goto askagainpotionshunt&#10;end&#10;&#10;&#10;&#10;::gotrespondhunt::&#10;if respon == &quot;ihavenotpotionshunt&quot; then&#10;gotolabel(&quot;leave&quot;,&quot;leave&quot;)&#10;respond = false&#10;end&#10;&#10;&#10;&#10;if respon == &quot;yesihavepotionshunt&quot; then&#10;respond = false&#10;end&#10;&#10;else---------&#10;&#10;&#10;::sayekhavenotpotionshunt::&#10;navsay(&quot;ekhavenotpotionshunt&quot;)&#10;wait(1000)&#10;pausewalking(1000)&#10;&#10;if respond then&#10;goto aprovedhunt&#10;else&#10;goto sayekhavenotpotionshunt&#10;end&#10;&#10;::aprovedhunt::&#10;if respon == &quot;okletsleave&quot; then&#10;gotolabel(&quot;leave&quot;,&quot;leave&quot;)&#10;respond = false&#10;end&#10;&#10;end-------&#10;&#10;end&#10;-------------------------------------------------------&#10;function golure(nrlure)---(f golure)&#10;&#10;::gotonextlure::&#10;pausewalking(1000)&#10;navsay(&quot;golure&quot;..nrlure)&#10;wait(1000)&#10;if respond then&#10;goto letsgonextlure&#10;else&#10;goto gotonextlure&#10;end&#10;::letsgonextlure::&#10;if respon == &quot;okletsgonextlure&quot; then&#10;print(respon)&#10;if nrlure == 1 then&#10;gotolabel(&quot;runnext&quot;,&quot;Lure9&quot;)&#10;end&#10;if nrlure &gt; 1 then&#10;gotolabel(&quot;runnext&quot;,&quot;Lure&quot;..nrlure-1)&#10;end&#10;respond = false&#10;end&#10;&#10;&#10;&#10;end---(close f golure)&#10;&#10;&#10;function checkpotsbeforehunt()&#10;&#10;if havesupply then------&#10;pausewalking(1000)&#10;::askagainpotions::&#10;navsay(&quot;doyouhavepotions&quot;)&#10;wait(1000)&#10;pausewalking(1000)&#10;if respond then&#10;goto gotrespond&#10;else&#10;goto askagainpotions&#10;end&#10;&#10;&#10;&#10;::gotrespond::&#10;if respon == &quot;yesihavepotions&quot; then&#10;print(respon)&#10;gotolabel(&quot;enterhunt&quot;)&#10;respond = false&#10;end&#10;&#10;if respon == &quot;noihavenotpotions&quot; then&#10;print(respon)&#10;gotolabel(&quot;leave7&quot;,&quot;leave&quot;)&#10;respond = false&#10;end&#10;&#10;else-----------------&#10;&#10;pausewalking(1000)&#10;::sayekhavenotpotions::&#10;navsay(&quot;ekhavenotpotions&quot;)&#10;wait(1000)&#10;pausewalking(1000)&#10;&#10;if respond then&#10;goto aproved&#10;else&#10;goto sayekhavenotpotions&#10;end&#10;&#10;&#10;::aproved::&#10;if respon == &quot;okletsleave&quot; then&#10;gotolabel(&quot;leave7&quot;,&quot;leave&quot;)&#10;setsetting('Cavebot/Enabled', 'yes')&#10;respond = false&#10;end&#10;&#10;&#10;end------&#10;end" enabled="yes"/>
            <PersistentScript name="walkblock" script="auto(2000)&#10;foreach creature m 'ps' do&#10;if m.walkblock then&#10;print(m)&#10;&#10;end&#10;if m.name == &quot;Zulo&quot; then&#10;print(m.posx..&quot; &quot;..m.posy)&#10;end&#10;end" enabled="no"/>
            <PersistentScript name="lowermlvl" script=" auto(500)&#10;if edlowermlvl then&#10;edlowermlvl = false&#10;setsetting('PotionHealer/Rules/NewHealRule2/ConditionValue', '80 to 80%')&#10;setsetting('PotionHealer/Rules/NewHealRule1/ConditionValue', '70 to 70%')&#10;wait(5000)&#10;else&#10;if maround(10) &gt; 4 then&#10;&#10;setsetting('PotionHealer/Rules/NewHealRule2/ConditionValue', '70 to 70%')&#10;setsetting('PotionHealer/Rules/NewHealRule1/ConditionValue', '60 to 60%')&#10;else&#10;&#10;setsetting('PotionHealer/Rules/NewHealRule2/ConditionValue', '50 to 50%')&#10;setsetting('PotionHealer/Rules/NewHealRule1/ConditionValue', '40 to 40%')&#10;end&#10;end" enabled="yes"/>
        </PersistentScripts>
    </Scripter>
    <HUDs>
        <HUDScripts>
            <HUDScript name="MonitorMyHunting" script="init start&#10;&#9;--&#10;&#9;--                        88                                                                  &#10;&#9;--                        &quot;&quot;                                                ,d                &#10;&#9;--                                                                          88                &#10;&#9;--             ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;&#9;--             I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;&#9;--              `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;&#9;--             aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;&#9;--   Author:   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;&#9;--   &#10;&#9;--   Monitor My Hunting!&#10;&#9;--&#10;&#9;--   Version: 1.0&#10;&#9;--   Created: 29.12.2013&#10;&#9;--   Last update: 29.12.2013&#10;&#9;--&#10;&#10;&#9;local MMH = {&#10;&#9;&#9;SHOW_ALL_ITEMS = false,&#10;&#9;&#9;SHOW_ALL_SUPPLIES = false,&#10;&#9;}&#10;&#10;&#9;-- [[ Do not change anything below this line. ]] --&#10;&#10;&#9;-- [[ COLORS ]] --&#10;&#9;MMH.COLORS = {}&#10;&#9;MMH.COLORS.FONT_COLOR = color(255, 255, 255, 0)&#10;&#9;MMH.COLORS.SECTION_HEADER_BACKGROUND = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)}&#10;&#9;MMH.COLORS.ENTRY_NAME_BACKGROUND = {0.0, color(41, 105, 100, 105), 0.76, color(37, 94, 50, 50), 0.23, color(19, 19, 19, 20)}&#10;&#9;MMH.COLORS.ENTRY_VALUE_BACKGROUND = {0.0, color(19, 19, 19, 20), 0.23, color(37, 94, 50, 50), 0.76, color(41, 105, 100, 105)}&#10;&#9;MMH.COLORS.RESULT_POSITIVE_BACKGROUND = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)}&#10;&#9;MMH.COLORS.RESULT_NEGATIVE_BACKGROUND = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)}&#10;&#9;MMH.COLORS.RESET_BUTTON_BACKGROUND = {0.0, color(100, 255, 100, 100), 0.23, color(50, 100, 255, 100), 0.76, color(100, 100, 100, 255)}&#10;&#10;&#9;-- [[ ELEMENTS ]] --&#10;&#9;MMH.ELEMENTS = {}&#10;&#9;MMH.ELEMENTS.RESET_BUTTON = -1&#10;&#9;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = -1&#10;&#9;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = -1&#10;&#10;&#9;-- [[ SECTION STATES ]] --&#10;&#9;MMH.SECTIONS = {}&#10;&#9;MMH.SECTIONS.ITEMS_LOOTED = true&#10;&#9;MMH.SECTIONS.SUPPLIES_USED = true&#10;&#10;&#9;-- [[ OTHERS ]] --&#9;&#10;&#9;filterinput(false, true, false, false)&#10;&#9;local MOVING, TEMP, MOVED = false, {0, 0}, {0, 0}&#10;&#10;&#9;function inputevents(e)&#10;&#9;&#9;if (e.type == IEVENT_LMOUSEDOWN) then&#10;&#9;&#9;&#9;if (e.elementid == MMH.ELEMENTS.RESET_BUTTON) then&#10;&#9;&#9;&#9;&#9;resetcharactertime()&#10;&#9;&#9;&#9;&#9;resetlootcounter()&#10;&#9;&#9;&#9;&#9;resetexpcounter()&#10;&#9;&#9;&#9;&#9;friendwaste = 0&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_ITEMS_LOOTED) then&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.ITEMS_LOOTED = not MMH.SECTIONS.ITEMS_LOOTED&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_SUPPLIES_USED) then&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.SUPPLIES_USED = not MMH.SECTIONS.SUPPLIES_USED&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEDOWN) then&#10;&#9;&#9;&#9;MOVING, TEMP = true, {$cursor.x - MOVED[1], $cursor.y - MOVED[2]}&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEUP) then&#10;&#9;&#9;&#9;MOVING = false&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;if (MOVING) then&#10;    auto(10)&#10;    MOVED = {$cursor.x - TEMP[1], $cursor.y - TEMP[2]}&#10;end&#10;&#10;setposition($clientwin.right - 424 + MOVED[1], $worldwin.top + MOVED[2])&#10;setfontstyle('Tahoma', 8, 75, MMH.COLORS.FONT_COLOR, 1, color(0, 0, 0, 20))&#10;&#10;local ROW_QUANTITY, STRING_WIDTH, STRING_HEIGHT = 0, measurestring('TEMP')&#10;local ITEMS_LOOTED_WORTH, ITEM_LOOTED_QUANTITY, ITEM_LOOTED_WORTH = 0, 0, 0&#10;local SUPPLIES_USED_WORTH, SUPPLY_USED_QUANTITY, SUPPLY_USED_WORTH = 0, 0, 0&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 0, 240, 20, 2, 2)&#10;drawtext('Monitor My Hunting v1.0', 6, 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.RESET_BUTTON_BACKGROUND))&#10;MMH.ELEMENTS.RESET_BUTTON = drawroundrect(196, 0, 44, 20, 2, 2)&#10;drawtext('RESET', 202, 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 23, 240, 15, 2, 2)&#10;drawtext('Looting Accuracy', 6, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;drawroundrect(130, 23, 110, 15, 2, 2)&#10;drawtext(string.format('%.2f', $lootaccuracy) .. '%', 136, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;drawroundrect(0, 41, 240, 20, 2, 2)&#10;drawtext('ITEMS LOOTED', 6, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = drawroundrect(220, 41, 20, 20, 2, 2)&#10;drawtext('X', 228, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;foreach lootingitem ItemEntry do&#10;&#9;if (MMH.SHOW_ALL_ITEMS or ItemEntry.amountlooted &gt; 0) then&#10;&#9;&#9;ITEM_LOOTED_QUANTITY = ItemEntry.amountlooted&#10;&#9;&#9;ITEM_LOOTED_WORTH = ItemEntry.sellprice * ITEM_LOOTED_QUANTITY&#10;&#10;&#9;&#9;if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#9;&#9;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 64 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(130, 64 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;&#9;&#9;drawtext(num(ITEM_LOOTED_QUANTITY) .. ' (' .. math.floor(ITEM_LOOTED_WORTH / 100) / 10 .. 'K)', 136, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;ITEMS_LOOTED_WORTH = ITEMS_LOOTED_WORTH + ITEM_LOOTED_WORTH&#10;&#9;end&#10;end&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;drawtext('Total: ' .. num(ITEMS_LOOTED_WORTH) .. ' GPs', 6, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;drawtext('SUPPLIES USED', 6, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = drawroundrect(220, 64 + ROW_QUANTITY * 18, 20, 20, 2, 2)&#10;drawtext('X', 228, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;foreach supplyitem ItemEntry do&#10;&#9;if (MMH.SHOW_ALL_SUPPLIES or ItemEntry.amountused &gt; 0) then&#10;&#9;&#9;SUPPLY_USED_QUANTITY = ItemEntry.amountused&#10;&#9;&#9;SUPPLY_USED_WORTH = ItemEntry.buyprice * SUPPLY_USED_QUANTITY&#10;&#10;&#9;&#9;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;&#9;&#9;drawtext(num(SUPPLY_USED_QUANTITY) .. ' (' .. math.floor(SUPPLY_USED_WORTH / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + SUPPLY_USED_WORTH&#10;&#9;end&#10;end&#10;&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;addgradcolors(0.0, color(90, 12, 15, 200), 0.23, color(98, 13, 17, 200), 0.76, color(52, 6, 9, 200))&#10;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#10;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;drawitem(3031, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;drawtext('ED WASTE', 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;drawtext(num($moneyspent) .. ' (' .. math.floor($moneyspent / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;end&#10;&#10;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + $moneyspent&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;drawtext('Total: ' .. num(SUPPLIES_USED_WORTH) .. ' GPs', 6, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;&#10;drawtext(((ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH and ('EK + ED: ')) or ('EK + ED: ')) .. num(ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) .. ' GPs (' .. math.abs(math.floor(((ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) * 3600) / ($charactertime / 1000) / 100) / 10) .. ' k/h)', 6, 87 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;" enabled="yes" refreshRate="100"/>
            <HUDScript name="MonitorMyStats" script="init start&#10;    --&#10;    --              88                                                                  &#10;    --              &quot;&quot;                                                ,d                &#10;    --                                                                88                &#10;    --   ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;    --   I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;    --    `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;    --   aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;    --   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;    --&#10;&#10;    --   Name: Monitor My Stats&#10;    --   Last Updated: 19/12/2013&#10;    --   Version: 1.0&#10;&#10;    local MMS = {&#10;        ShowInfo = true,&#10;&#10;        Title = &quot;Roshamuul ED - EK&quot;,&#10;        Creator = &quot;Yoko&quot;,&#10;        Info = 'EK Version',&#10;        Version = '1.0.0'&#10;    }&#10;&#10;    -- [[ Do not change anything below this line. ]] --&#10;&#10;    filterinput(false, true, false, false)&#10;&#10;    local HUD_Sections = {&#10;        {Name = 'OTHERS', State = true, Items = {&#10;                {'Ping', function() return $ping .. ' (avg: ' .. $pingaverage .. ')' end},&#10;                {'Bank Balance', function() return num($balance) end},&#10;            }&#10;        },&#10;&#10;        {Name = 'CHARACTER STATS', State = true, Items = {&#10;                {'Level', function() return $level .. ' (' .. 100 - math.floor(($exp - expatlvl($level)) * 100 / (expatlvl($level + 1) - expatlvl($level))) .. '%)' end},&#10;                {'Experience', function() return num($exp) end},&#10;                {'Magic Level', function() return $mlevel .. ' (' .. 100 - $mlevelpc .. '%)' end},&#10;                {'Weapon Skill', function() local _ = WeaponSkill() return _.skill .. ' (' .. 100 - _.skillpc .. '%)' end},&#10;                {'Shielding', function() return $shielding .. ' (' .. 100 - $shieldingpc .. '%)' end},&#10;                {'Fishing', function() return $fishing .. ' (' .. 100 - $fishingpc .. '%)' end}&#10;            }&#10;        },&#10;&#10;        {Name = 'ENGINE STATES', State = true, Items = {&#10;                {'Spell Healer', function() return getsetting('SpellHealer/Enabled') end, function() return toggle('SpellHealer/Enabled') end},&#10;                {'Potion Healer', function() return getsetting('PotionHealer/Enabled') end, function() return toggle('PotionHealer/Enabled') end},&#10;                {'Condition Healer', function() return getsetting('ConditionHealer/Enabled') end, function() return toggle('ConditionHealer/Enabled') end},&#10;                {'Mana Training', function() return getsetting('ManaTrainer/Enabled') end, function() return toggle('ManaTrainer/Enabled') end},&#10;                {'Cavebot', function() return getsetting('Cavebot/Enabled') end, function() return toggle('Cavebot/Enabled') end},&#10;                {'Looting', function() return getsetting('Looting/Enabled') end, function() return toggle('Looting/Enabled') end},&#10;                {'Targeting', function() return getsetting('Targeting/Enabled') end, function() return toggle('Targeting/Enabled') end}&#10;            }&#10;        },&#10;&#10;        {Name = 'BOTTING STATS', State = true, Items = {&#10;                {'Experience per Hour', function() return num($exphour) end},&#10;                {'Experience Left', function() return num(exptolevel()) end},&#10;                {'Experience Today', function() return num($expgained) end},&#10;                {'Time to Next Level', function() return time(timetolevel()) end},&#10;                {'Played Time', function() return time(math.floor($charactertime / 1000)) end},&#10;                {'Stamina', function() return time($stamina) end}&#10;            }&#10;        }&#10;    }&#10;&#10;    local HUD_Colors = {&#10;            Font = color(255, 255, 255, 0),&#10;            SectionHeaderBackground = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)},EntryNameBackground = {0.0, color(41, 105, 100, 105), 0.76, color(37, 94, 50, 50), 0.23, color(19, 19, 19, 20)},&#10;EntryValueBackground = {0.0, color(19, 19, 19, 20), 0.23, color(37, 94, 50, 50), 0.76, color(41, 105, 100, 105)},&#10;EntryValueEnabledBackground = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)},&#10;            EntryValueDisabledBackground = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)},&#10;    }&#10;&#10;    function WeaponSkill()&#10;        local SkillTypes = {&#10;            ['axe'] = {type = 'axe', skill = $axe, skillpc = $axepc},&#10;            ['club'] = {type = 'club', skill = $club, skillpc = $clubpc},&#10;            ['sword'] = {type = 'sword', skill = $sword, skillpc = $swordpc},&#10;            ['bow'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['distance weapon'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['no weapon'] = {type = 'fist', skill = $fist, skillpc = $fistpc},&#10;            ['rod'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;            ['wand'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;        }&#10;&#10;        return SkillTypes[findweapontype()]&#10;    end&#10;&#10;    local Moving, Temp, Moved = false, {0, 0}, {0, 0}&#10;&#10;    function inputevents(e)&#10;        if (e.type == IEVENT_LMOUSEDOWN) then&#10;            for _, Section in ipairs(HUD_Sections) do&#10;                if (e.elementid == Section.StateSwitch) then&#10;                    Section.State = not Section.State&#10;                    return&#10;                end&#10;            end&#10;        for _, Section in ipairs(HUD_Sections) do&#10;                if (Section.Name == 'ENGINE STATES') then&#10;                    for _, SectionItem in ipairs(Section.Items) do&#10;                        if (e.elementid == SectionItem[4]) then&#10;                            SectionItem[3]()&#10;                            return&#10;                        end&#10;                    end&#10;                end&#10;            end&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEDOWN) then&#10;            Moving, Temp = true, {$cursor.x - Moved[1], $cursor.y - Moved[2]}&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEUP) then&#10;            Moving = false&#10;        end&#10;    end&#10;    &#10;    setmaskcolorxp(0)&#10;init end&#10;&#10;if (Moving) then&#10;    auto(10)&#10;    Moved = {$cursor.x - Temp[1], $cursor.y - Temp[2]}&#10;end&#10;&#10;setposition($clientwin.left + 5 + Moved[1], $worldwin.top + Moved[2])&#10;setfontstyle('Tahoma', 8, 75, 0xFFFFFF, 1, color(0, 0, 0, 20))&#10;&#10;local YPosition, SectionRow, SectionItemsRow = 0, 0, 0&#10;&#10;if MMS.ShowInfo then&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, 0, 240, 21, 2, 2)&#10;    drawtext(MMS.Title, 6, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 0, 110, 21, 2, 2)&#10;    drawtext(MMS.Creator, 136, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfontsize(7)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 0 * 18, 240, 15, 2, 2)&#10;    drawtext(MMS.Info, 6, 24 + 0 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 1 * 18, 240, 15, 2, 2)&#10;    drawtext('Script version:', 6, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 24 + 1 * 18, 110, 15, 2, 2)&#10;    drawtext(MMS.Version, 136, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;    &#10;    YPosition = 22 + 2 * 19&#10;end&#10;&#10;for SectionIndex, Section in ipairs(HUD_Sections) do&#10;    setfontsize(8)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 20, 2, 2)&#10;    drawtext(Section.Name, 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    if (Section.State) then&#10;        addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;    else&#10;        addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;    end&#10;    Section.StateSwitch = drawroundrect(220, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 20, 20, 2, 2)&#10;    drawtext('X', 228, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    SectionRow = SectionRow + 1&#10;&#10;    if (Section.State) then&#10;        setfontsize(7)&#10;&#10;        local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;        for SectionItemIndex, SectionItem in ipairs(Section.Items) do&#10;            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)     &#10;            addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;            drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 16, 2, 2)&#10;            drawtext(SectionItem[1], 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;&#10;            if (Section.Name == 'ENGINE STATES') then&#10;                local EngineCurrentState = SectionItem[2]()&#10;&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                if (EngineCurrentState == 'yes') then&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;                else&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;                end&#10;                HUD_Sections[SectionIndex].Items[SectionItemIndex][4] = drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;&#10;&#10;                drawtext((EngineCurrentState == 'yes' and ('On')) or ('Off'), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            else&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;                drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;                drawtext(SectionItem[2](), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            end&#10;&#10;            SectionItemsRow = SectionItemsRow + 1&#10;        end&#10;    end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="ContextMenu" script="init start&#10;&#9;-- local SCRIPT_VERSION = '2.2.0'&#10;&#10;&#9;local showProfile = true&#10;&#9;local showRelation = true&#10;&#9;local showWaypoints = true&#10;&#9;local mainWaypoints = {'Node', 'Stand', 'Action', 'Lure'}&#10;&#9;local secondaryWaypoints = {'Walk', 'Shovel', 'Rope', 'Machete', 'Ladder', 'Use'}&#10;&#9;local showSpecialAreas = true&#10;&#9;local specialAreas = {'none', 'cavebot', 'targeting', 'cavebot &amp; targeting'}&#10;&#10;&#9;-- DO NOT EDIT BELOW THIS LINE --&#10;&#10;&#9;local defFontColor        = color(223, 223, 223)&#10;&#9;local defBackColor        = color(70, 70, 70)&#10;&#9;local defHighColor        = color(128, 128, 128)&#10;&#9;local boxColor            = color(70, 70, 70)&#10;&#9;local boxLightShadowColor = color(117, 117, 117)&#10;&#9;local boxDarkShadowColor  = color(41, 41, 41)&#10;&#10;&#9;local borderSize = 4&#10;&#9;local paddingSize = 3&#10;&#10;&#9;local PROFILE_URL = &quot;http://www.tibia.com/community/?subtopic=characters&amp;name=&quot;&#10;&#10;&#9;ALIGN_LEFT   = 0&#10;&#9;ALIGN_CENTER = 1&#10;&#9;ALIGN_RIGHT  = 2&#10;&#10;&#9;MENU_SEPARATOR = '-- SEPARATOR --'&#10;&#10;&#9;local items, highlight, contextMenu, maxWidth, maxHeight, clicked&#10;&#10;&#9;do -- Register default handlers&#10;&#9;&#9;if showProfile then&#10;&#9;&#9;&#9;local function showProfileName(m)&#10;&#9;&#9;&#9;&#9;return 'Show page for ' .. m.creature.name&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;local function showProfileCall(m)&#10;&#9;&#9;&#9;&#9;openbrowser(PROFILE_URL .. m.creature.name:gsub(' ', '+'))&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', showProfileName, showProfileCall)&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if showRelation then&#10;&#9;&#9;&#9;local function currentRelationName(m)&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id then&#10;&#9;&#9;&#9;&#9;&#9;return m.creature.name .. ': ' .. m.creature.teamname, m.creature.teamcolor, nil, color(70, 70, 70)&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', currentRelationName, nil)&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#10;&#10;&#9;&#9;&#9;-- enemy&#10;&#9;&#9;&#9;local function setEnemyName(m)&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and not m.creature.isenemy then&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as enemy'&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;local function setEnemyCall(m)&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'enemy')&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setEnemyName, setEnemyCall)&#10;&#10;&#9;&#9;&#9;-- ally&#10;&#9;&#9;&#9;local function setAllyName(m)&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and (not m.creature.isally or m.creature.isleader) then&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as ally'&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;local function setAllyCall(m)&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'ally')&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setAllyName, setAllyCall)&#10;&#10;&#9;&#9;&#9;-- leader&#10;&#9;&#9;&#9;local function setLeaderName(m)&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and not m.creature.isleader then&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as leader'&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;local function setLeaderCall(m)&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'leader')&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setLeaderName, setLeaderCall)&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if showWaypoints then&#10;&#9;&#9;&#9;for _, v in ipairs({mainWaypoints, secondaryWaypoints}) do&#10;&#9;&#9;&#9;&#9;for _, vv in ipairs(v) do&#10;&#9;&#9;&#9;&#9;&#9;-- I learned this trick with JavaScript; basically, we call a anonymous&#10;&#9;&#9;&#9;&#9;&#9;-- function that returns the function we'll actually use. The trick is&#10;&#9;&#9;&#9;&#9;&#9;-- that we pass to this first anonymous function the type of the node&#10;&#9;&#9;&#9;&#9;&#9;-- we want the returned function to add. This works because the inner&#10;&#9;&#9;&#9;&#9;&#9;-- function is created in a scope where `type` has the desired value,&#10;&#9;&#9;&#9;&#9;&#9;-- so it's value is retained for future calls.&#10;&#9;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', 'Add ' .. vv, (function(type)&#10;&#9;&#9;&#9;&#9;&#9;&#9;return function(m)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;addwaypoint(type, m.posx, m.posy, m.posz)&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;&#9;end)(vv))&#10;&#9;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', MENU_SEPARATOR, nil)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if showSpecialAreas then&#10;&#9;&#9;&#9;for _, v in ipairs(specialAreas) do&#10;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', 'Add Special Area (' .. v:capitalizeall() .. ')', (function(type)&#10;&#9;&#9;&#9;&#9;&#9;return function(m)&#10;&#9;&#9;&#9;&#9;&#9;&#9;addspecialarea(type, m.posx, m.posy, m.posz)&#10;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;end)(v))&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_world', MENU_SEPARATOR, nil)&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function loadCategories(...)&#10;&#9;&#9;local categories = {...}&#10;&#10;&#9;&#9;for _, v in ipairs(categories) do&#10;&#9;&#9;&#9;local cat = 'contextMenu_' .. v&#10;&#9;&#9;&#9;foreach messagehandler m cat do&#10;&#9;&#9;&#9;&#9;local text, fontColor, backColor, highColor, align&#10;&#10;&#9;&#9;&#9;&#9;if type(m.name) == 'function' then&#10;&#9;&#9;&#9;&#9;&#9;text, fontColor, highColor, backColor, align = m.name(contextMenu)&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;text = m.name&#10;&#9;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;&#9;if text and text ~= '' then&#10;&#9;&#9;&#9;&#9;&#9;local width&#10;&#9;&#9;&#9;&#9;&#9;if text == MENU_SEPARATOR then&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxHeight = maxHeight + 8&#10;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;width = (measurestring(text))&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxHeight = maxHeight + 19&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxWidth = math.max(maxWidth, width)&#10;&#9;&#9;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;&#9;&#9;table.insert(items, {&#10;&#9;&#9;&#9;&#9;&#9;&#9;text      = text,&#10;&#9;&#9;&#9;&#9;&#9;&#9;width     = width,&#10;&#9;&#9;&#9;&#9;&#9;&#9;callback  = m.callback,&#10;&#9;&#9;&#9;&#9;&#9;&#9;fontColor = fontColor or defFontColor,&#10;&#9;&#9;&#9;&#9;&#9;&#9;highColor = highColor or defHighColor,&#10;&#9;&#9;&#9;&#9;&#9;&#9;backColor = backColor or defBackColor&#10;&#9;&#9;&#9;&#9;&#9;});&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;filterinput(false, true, true, false)&#10;&#9;function inputevents(e)&#10;&#9;&#9;local eventItem, itemIndex&#10;&#9;&#9;for i, v in ipairs(items) do&#10;&#9;&#9;&#9;if v.id == e.elementid then&#10;&#9;&#9;&#9;&#9;eventItem = v&#10;&#9;&#9;&#9;&#9;itemIndex = i&#10;&#9;&#9;&#9;&#9;break&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#10;&#9;&#9;highlight = itemIndex&#10;&#9;&#9;if e.type == IEVENT_LMOUSEUP then&#10;&#9;&#9;&#9;if eventItem and eventItem.callback then&#10;&#9;&#9;&#9;&#9;eventItem.callback(contextMenu)&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;clicked = true&#10;&#9;&#9;&#9;highlight = nil&#10;&#9;&#9;&#9;waitforevents(false)&#10;&#9;&#9;&#9;press('[ESC]')&#10;&#9;&#9;&#9;waitforevents(true)&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;setfontstyle('Tahoma', 7, 75, defFontColor, 1, 0x000000)&#10;&#9;setantialiasing(true)&#10;init end&#10;&#10;auto(10)&#10;&#10;contextMenu = contextmenuinfo()&#10;&#10;-- This prevents the HUD from redrawing after clicking&#10;if clicked then&#10;&#9;clicked = contextMenu ~= nil&#10;&#9;contextMenu = nil&#10;end&#10;&#10;if contextMenu == nil then&#10;&#9;highlight = nil&#10;&#9;return&#10;end&#10;&#10;items = {}&#10;maxWidth, maxHeight = 0, -4&#10;local fullWidth, fullHeight&#10;do -- Bootstrap&#10;&#10;&#9;-- Load categories&#10;&#9;if contextMenu.type == 'battle' or contextMenu.itemid == 99 then&#10;&#9;&#9;contextMenu.creature = getcreaturebyid(contextMenu.creatureid)&#10;&#10;&#9;&#9;if contextMenu.creature.isplayer then&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'Player', 'player')&#10;&#9;&#9;elseif contextMenu.creature.isnpc then&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'NPC', 'NPC')&#10;&#9;&#9;elseif contextMenu.creature.ismonster then&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'Monster', 'monster')&#10;&#9;&#9;end&#10;&#10;&#9;&#9;loadCategories(contextMenu.type .. 'Creature', 'creature')&#10;&#9;end&#10;&#10;&#9;if contextMenu.type == 'world' then&#10;&#9;&#9;if not contextMenu.creature then&#10;&#9;&#9;&#9;loadCategories('worldItem', 'item')&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if contextMenu.posz == $posz then&#10;&#10;&#9;&#9;&#9;do&#10;&#9;&#9;&#9;&#9;local i = 0&#10;&#9;&#9;&#9;&#9;foreach settingsentry e 'Cavebot/Waypoints' do&#10;&#9;&#9;&#9;&#9;&#9;local x, y, z = get(e, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;&#9;&#9;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;&#9;&#9;&#9;&#9;if z == $posz then&#10;&#9;&#9;&#9;&#9;&#9;&#9;local diffX, diffY = contextMenu.posx - x, contextMenu.posy - y&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &gt;= 0 and diffY &gt;= 0 then&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local w, h = get(e, 'Range'):match(REGEX_RANGE)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;w, h = tonumber(w), tonumber(h)&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &lt; w and diffY &lt; h then&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.waypoint = e&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.waypointID = i&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;&#9;&#9;i = i + 1&#10;&#9;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;&#9;if contextMenu.waypoint then&#10;&#9;&#9;&#9;&#9;&#9;loadCategories('worldWaypoint', 'waypoint')&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;do&#10;&#9;&#9;&#9;&#9;foreach settingsentry e 'Cavebot/SpecialAreas' do&#10;&#9;&#9;&#9;&#9;&#9;local x, y, z = get(e, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;&#9;&#9;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;&#9;&#9;&#9;&#9;if z == $posz then&#10;&#9;&#9;&#9;&#9;&#9;&#9;local diffX, diffY = contextMenu.posx - x, contextMenu.posy - y&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &gt;= 0 and diffY &gt;= 0 then&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local w, h = get(e, 'Size'):match(REGEX_RANGE)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;w, h = tonumber(w), tonumber(h)&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &lt; w and diffY &lt; h then&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.specialArea = e&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.specialAreaName = get(e, 'Name')&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;&#9;if contextMenu.specialArea then&#10;&#9;&#9;&#9;&#9;&#9;loadCategories('worldSpecialArea', 'specialArea')&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;elseif contextMenu.type == 'container' then&#10;&#9;&#9;loadCategories('containerItem', 'item')&#10;&#9;elseif contextMenu.type == 'equip' then&#10;&#9;&#9;loadCategories('equipItem', 'item')&#10;&#9;end&#10;&#9;loadCategories(contextMenu.type)&#10;&#10;&#9;-- We set it as true from the beginning so that it also removes the first&#10;&#9;-- item if it's a separator; we obviously don't want the first item to be a&#10;&#9;-- separator. NOTE: relies on the fact that ipairs() will traverse the&#10;&#9;-- table in ascending order, which isn't guaranteed by the reference manual&#10;&#9;-- but is the common implementation&#10;&#9;local lastSep = true&#10;&#10;&#9;-- Instead of removing the items at the for loop, we simply set it to nil&#10;&#9;-- and normalize it after; this is because if we did remove it, it would&#10;&#9;-- shift the indexes and end up fucking up posterior checks&#10;&#9;for i, v in ipairs(items) do&#10;&#9;&#9;local curSep = v.text == MENU_SEPARATOR&#10;&#9;&#9;if curSep and (lastSep or i == #items) then&#10;&#9;&#9;&#9;items[i] = nil&#10;&#9;&#9;&#9;maxHeight = maxHeight - 8&#10;&#9;&#9;end&#10;&#10;&#9;&#9;lastSep = curSep&#10;&#9;end&#10;&#9;table.normalize(items)&#10;&#10;&#9;-- No item to display, abort mission!&#10;&#9;if #items == 0 then&#10;&#9;&#9;return&#10;&#9;end&#10;&#10;&#9;-- The Tibia context menu has an extra width of 44 pixels for the longest&#10;&#9;-- item; here we account for that&#10;&#9;maxWidth = maxWidth + 44&#10;&#10;&#9;fullWidth, fullHeight = maxWidth + 2*borderSize, maxHeight + 2*borderSize&#10;&#9;setposition($clientwin.x + contextMenu.x - fullWidth - 2,$clientwin.y + contextMenu.y)&#10;end&#10;&#10;do -- Draw Container&#10;&#9;-- Draw main box&#10;&#9;setfillstyle('color', boxColor)&#10;&#9;setbordercolor(-1)&#10;&#9;drawrect(0, 0, fullWidth, fullHeight)&#10;&#10;&#9;-- Draw shadows&#10;&#9;setbordercolor(boxLightShadowColor)&#10;&#9;drawline(0, 0, fullWidth, 0)&#10;&#9;drawline(0, 0, 0, fullHeight)&#10;&#9;drawline(2, fullHeight - 2, fullWidth - borderSize, 0)&#10;&#9;drawline(fullWidth - 2, 2, 0, fullHeight - borderSize)&#10;&#10;&#9;setbordercolor(boxDarkShadowColor)&#10;&#9;drawline(2, 2, fullWidth - borderSize, 0)&#10;&#9;drawline(2, 2, 0, fullHeight - borderSize)&#10;&#9;drawline(0, fullHeight, fullWidth, 0)&#10;&#9;drawline(fullWidth, 0, 0, fullHeight)&#10;end&#10;&#10;do -- Draw items&#10;&#9;local curHeight = borderSize&#10;&#9;for i, v in ipairs(items) do&#10;&#9;&#9;-- Separators get special treatment here&#10;&#9;&#9;if v.text == MENU_SEPARATOR then&#10;&#9;&#9;&#9;setbordercolor(boxDarkShadowColor)&#10;&#9;&#9;&#9;drawline(borderSize, curHeight, maxWidth, 0)&#10;&#10;&#9;&#9;&#9;setbordercolor(boxLightShadowColor)&#10;&#9;&#9;&#9;drawline(borderSize, curHeight + 1, maxWidth, 0)&#10;&#10;&#9;&#9;&#9;curHeight = curHeight + 8&#10;&#9;&#9;else&#10;&#10;&#9;&#9;&#9;-- This is a dirty, dirrty attempt of making the code shorter; and&#10;&#9;&#9;&#9;-- that's what I love the most about programming&#10;&#9;&#9;&#9;local alignOffset = ((maxWidth - paddingSize - v.width) / 2) * (v.align or ALIGN_LEFT)&#10;&#10;&#9;&#9;&#9;-- Set style&#10;&#9;&#9;&#9;setbordercolor(-1)&#10;&#9;&#9;&#9;setfontcolor(v.fontColor)&#10;&#9;&#9;&#9;setfillstyle('color', tern(i == highlight, v.highColor, v.backColor))&#10;&#10;&#9;&#9;&#9;-- Draw stuff&#10;&#9;&#9;&#9;v.id = drawrect(borderSize, curHeight, maxWidth, 15)&#10;&#9;&#9;&#9;drawtext(v.text, borderSize + paddingSize + alignOffset, curHeight + paddingSize)&#10;&#10;&#9;&#9;&#9;curHeight = curHeight + 19&#10;&#9;&#9;end&#10;&#9;end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="NaviRadar" script="init start&#13;&#10;&#9;-- local SCRIPT_VERSION = '1.0.0'&#13;&#10;&#9;&#13;&#10;    -- dont change nothing, unless you know what you are doing&#13;&#10;&#9;&#13;&#10;&#9;local rradius = $botdb:getvalue(&quot;naviradar&quot;, &quot;radius&quot;, 100)&#13;&#10;&#9;local rzoom = $botdb:getvalue(&quot;naviradar&quot;, &quot;zoom&quot;, 1)&#13;&#10;&#9;&#13;&#10;    local radar = {size = rradius*2, radius = rradius, zoom = rzoom, invzoom = 1/rzoom, shiftx = 0, shifty = 0, posz = $posz, mapcenter = rradius+7, maxradius = 300, minradius = 30, lastz = $posz, transparency = 120}&#13;&#10;    local dots = {size = 4, offset = 4*0.5, sizepow = 64} --sizepow = (dots.size+4)*(dots.size+4)&#13;&#10;    local hudpos = {x = $clientwin.left, y = $clientwin.top}&#13;&#10;    local eventmoveradar = {bool = false, x = 0, y = 0, x2 = 0, y2 = 0}&#13;&#10;    local eventzoom = {bool = false, x = 0, buttonid = -1}&#13;&#10;    local eventresize = {bool = false, x = 0}&#13;&#10;    local eventshift = {bool = false, x = 0, y = 0, x2 = 0, y2 = 0, buttonid = -1, buttonzupid = -1, buttonzdownid = -1}&#13;&#10;&#9;local eventclickmove = {x = 0, y = 0, outrangedtime = 0, rangedtime = 0}&#13;&#10;&#9;local mouseinside = false&#13;&#10;&#9;local pingtime = 2000&#13;&#10;&#9;local zoomshape = {&#13;&#10;&#9;&#9;pie = {pos = radar.mapcenter-radar.radius*1.17, radius = radar.radius*1.17, size = radar.size*1.17},&#13;&#10;&#9;&#9;arc = {pos = radar.mapcenter-radar.radius*1.085, radius = radar.radius*1.085, size = radar.size*1.085},&#13;&#10;&#9;&#9;button = {centerx = radar.mapcenter, centery = radar.mapcenter+radar.radius*1.085, radius = radar.radius*0.1, size = radar.size*0.13, posx = radar.mapcenter-radar.radius*0.13, posy = radar.mapcenter+radar.radius*1.085-radar.radius*0.13, dx = 0, dy = 0, dtheta = 0}&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;RADARMOVE = -1&#13;&#10;    filterinput(false, true, false, false)&#13;&#10;&#9;waitforevents(false)&#13;&#10;&#9;&#13;&#10;    function inputevents(e)&#13;&#10;        if e.type == IEVENT_LMOUSEDOWN and not iskeypressed(0xA4) and not iskeypressed(0xA5) then&#13;&#10;            if e.elementid == eventzoom.buttonid then&#13;&#10;                eventzoom.bool = true&#13;&#10;                eventzoom.x = $cursor.x&#13;&#10;            elseif e.elementid == eventshift.buttonid then&#13;&#10;                eventshift.bool = true&#13;&#10;                eventshift.x, eventshift.y = $cursor.x, $cursor.y&#13;&#10;                eventshift.x2, eventshift.y2 = $cursor.x, $cursor.y&#13;&#10;            end&#13;&#10;        end&#13;&#10;&#9;&#9;&#13;&#10;        if e.type == IEVENT_LMOUSEUP then&#13;&#10;            local dx, dy = (radar.mapcenter-e.value1), (e.value2-radar.mapcenter)&#13;&#10;            local dist = math.sqrt(dx*dx+dy*dy)&#13;&#10;&#9;&#9;&#9;&#13;&#10;            if not eventzoom.bool and dist &gt; radar.radius then&#13;&#10;                local angle = math.deg(math.atan(dy/dx))&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;                if angle &lt;= -30 and angle &gt;= -40 then&#13;&#10;                    radar.posz = math.highest(radar.posz-1, 0)&#13;&#10;                elseif angle &lt;= 40 and angle &gt;= 30 then&#13;&#10;                    radar.posz = math.lowest(radar.posz+1, 15)&#13;&#10;                end&#13;&#10;            else&#13;&#10;&#9;&#9;&#9;&#9;local dx,dy = math.floor((radar.shiftx+e.value1-radar.mapcenter)*radar.invzoom), math.floor((radar.shifty+e.value2-radar.mapcenter)*radar.invzoom)&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;if iskeypressed(0xA4) or iskeypressed(0xA5) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;if $navigation then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;navsendping($posx+dx, $posy+dy, radar.posz)&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;                elseif eventshift.x2 == $cursor.x and eventshift.y2 == $cursor.y then&#13;&#10;&#9;&#9;&#9;&#9;&#9;if $posz == radar.posz then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if math.abs(dx) &lt;= 106 and math.abs(dy) &lt;= 106 then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventclickmove.x, eventclickmove.y, eventclickmove.rangedtime = e.value1, e.value2, $timems+500&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if $cureventid == RADARMOVE then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;terminateevent(RADARMOVE)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;setlifetime(120000)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;RADARMOVE = moveto($posx+dx, $posy+dy, $posz)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventclickmove.x, eventclickmove.y, eventclickmove.outrangedtime = e.value1, e.value2, $timems+500&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;                end&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;                eventshift.x2, eventshift.y2 = 0, 0&#13;&#10;            end&#13;&#10;&#9;&#9;&#9;&#13;&#10;            eventzoom.bool = false&#13;&#10;            eventzoom.x = 0&#13;&#10;            eventshift.bool = false&#13;&#10;            eventshift.x, eventshift.y = 0,0&#13;&#10;        end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if e.type == IEVENT_MOUSEENTER then&#13;&#10;&#9;&#9;&#9;mouseinside = true&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if e.type == IEVENT_MOUSELEAVE then&#13;&#10;&#9;&#9;&#9;eventshift.bool = false&#13;&#10;&#9;&#9;&#9;eventzoom.bool = false&#13;&#10;&#9;&#9;&#9;mouseinside = false&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;        if e.type == IEVENT_RMOUSEDOWN then&#13;&#10;            if e.elementid == eventzoom.buttonid then&#13;&#10;                eventresize.bool = true&#13;&#10;                eventresize.x = $cursor.x&#13;&#10;            elseif e.elementid == eventshift.buttonid then&#13;&#10;                eventmoveradar.bool = true&#13;&#10;                eventmoveradar.x, eventmoveradar.y = $cursor.x, $cursor.y&#13;&#10;                eventmoveradar.x2, eventmoveradar.y2 = $cursor.x, $cursor.y&#13;&#10;            end&#13;&#10;        end&#13;&#10;&#9;&#9;&#13;&#10;        if e.type == IEVENT_RMOUSEUP or e.type == IEVENT_MOUSELEAVE then&#13;&#10;            eventmoveradar.bool = false&#13;&#10;&#9;&#9;&#9;&#13;&#10;            if eventmoveradar.x2 == $cursor.x and eventmoveradar.y2 == $cursor.y then&#13;&#10;                radar.shiftx, radar.shifty, radar.posz, radar.zoom, radar.invzoom = 0, 0, $posz, 1, 1&#13;&#10;                zoomshape.button.dtheta, zoomshape.button.dx, zoomshape.button.dy = 0, 0, 0&#13;&#10;                zoomshape.button.centerx, zoomshape.button.centery, zoomshape.button.posx, zoomshape.button.posy = radar.mapcenter+zoomshape.button.dx, radar.mapcenter+radar.radius*1.085+zoomshape.button.dy, radar.mapcenter-radar.radius*0.13+zoomshape.button.dx, radar.mapcenter+radar.radius*1.085-radar.radius*0.13+zoomshape.button.dy&#13;&#10;            end&#13;&#10;&#9;&#9;&#9;&#13;&#10;            eventmoveradar.x, eventmoveradar.y = 0,0&#13;&#10;            eventresize.bool = false&#13;&#10;            eventresize.x = 0&#13;&#10;        end&#13;&#10;    end&#13;&#10;&#9;&#13;&#10;    local cursordot, selfdot&#13;&#10;    local ang = math.rad(55)&#13;&#10;    local sin35, cos35 = math.sin(ang), math.cos(ang)&#13;&#10;&#9;&#13;&#10;&#9;if $windowsxp then&#13;&#10;&#9;&#9;setmaskcolorxp(0, true)&#13;&#10;&#9;&#9;radar.transparency = 0&#13;&#10;&#9;else&#13;&#10;&#9;&#9;setantialiasing(true)&#13;&#10;&#9;&#9;radar.transparency = 120&#13;&#10;&#9;end&#13;&#10;init end&#13;&#10;&#13;&#10;if eventmoveradar.bool then&#13;&#10;    auto(10)&#13;&#10;&#9;&#13;&#10;&#9;hudpos = getposition()&#13;&#10;    setposition(hudpos.x+$cursor.x-eventmoveradar.x, hudpos.y+$cursor.y-eventmoveradar.y)&#13;&#10;    eventmoveradar.x, eventmoveradar.y = $cursor.x, $cursor.y&#13;&#10;elseif eventresize.bool then&#13;&#10;    auto(10)&#13;&#10;&#9;&#13;&#10;    radar.size = radar.size + ($cursor.x-eventresize.x)*2&#13;&#10;    radar.radius = radar.radius + ($cursor.x-eventresize.x)&#13;&#10;    radar.mapcenter = radar.mapcenter + ($cursor.x-eventresize.x)&#13;&#10;    eventresize.x = $cursor.x&#13;&#10;&#9;&#13;&#10;    if radar.radius &gt; radar.maxradius then&#13;&#10;        radar.size = radar.maxradius*2&#13;&#10;        radar.radius = radar.maxradius&#13;&#10;        radar.mapcenter = radar.maxradius+7&#13;&#10;    elseif radar.radius &lt; radar.minradius then&#13;&#10;        radar.size = radar.minradius*2&#13;&#10;        radar.radius = radar.minradius&#13;&#10;        radar.mapcenter = radar.minradius+7&#13;&#10;    end&#13;&#10;&#9;&#13;&#10;    zoomshape.pie = {pos = radar.mapcenter-radar.radius*1.17, radius = radar.radius*1.17, size = radar.size*1.17}&#13;&#10;    zoomshape.arc = {pos = radar.mapcenter-radar.radius*1.085, radius = radar.radius*1.085, size = radar.size*1.085}&#13;&#10;    zoomshape.button.centerx, zoomshape.button.centery, zoomshape.button.radius, zoomshape.button.size, zoomshape.button.posx, zoomshape.button.posy = radar.mapcenter+zoomshape.button.dx, radar.mapcenter+radar.radius*1.085+zoomshape.button.dy, radar.radius*0.1, radar.size*0.13, radar.mapcenter-radar.radius*0.13+zoomshape.button.dx, radar.mapcenter+radar.radius*1.085-radar.radius*0.13+zoomshape.button.dy&#13;&#10;    zoomshape.button.dx, zoomshape.button.dy = math.sin(zoomshape.button.dtheta)*zoomshape.arc.radius, (math.cos(zoomshape.button.dtheta)-1)*zoomshape.arc.radius&#13;&#10;&#13;&#10;&#9;$botdb:setvalue(&quot;naviradar&quot;, &quot;radius&quot;, radar.radius)&#13;&#10;elseif eventzoom.bool then&#13;&#10;    auto(10)&#13;&#10;&#9;&#13;&#10;    local maxdx = 0.70710678118655*zoomshape.arc.radius&#13;&#10;    zoomshape.button.dx = zoomshape.button.dx+($cursor.x-eventzoom.x)&#13;&#10;    eventzoom.x = $cursor.x&#13;&#10;&#9;&#13;&#10;    if zoomshape.button.dx &gt; maxdx then&#13;&#10;        zoomshape.button.dx = maxdx&#13;&#10;    elseif zoomshape.button.dx &lt; -maxdx then&#13;&#10;        zoomshape.button.dx = -maxdx&#13;&#10;    end&#13;&#10;&#9;&#13;&#10;    zoomshape.button.dtheta = math.asin(zoomshape.button.dx/zoomshape.arc.radius)&#13;&#10;    zoomshape.button.dy = (math.cos(zoomshape.button.dtheta)-1)*zoomshape.arc.radius&#13;&#10;    zoomshape.button.centerx, zoomshape.button.centery, zoomshape.button.posx, zoomshape.button.posy = radar.mapcenter+zoomshape.button.dx, radar.mapcenter+radar.radius*1.085+zoomshape.button.dy, radar.mapcenter-radar.radius*0.13+zoomshape.button.dx, radar.mapcenter+radar.radius*1.085-radar.radius*0.13+zoomshape.button.dy&#13;&#10;&#13;&#10;    if zoomshape.button.dtheta &gt;= 0 then&#13;&#10;        radar.zoom = 1+zoomshape.button.dtheta*7&#13;&#10;        radar.invzoom = 1/radar.zoom&#13;&#10;    else&#13;&#10;        radar.zoom = 1+zoomshape.button.dtheta*0.9&#13;&#10;        radar.invzoom = 1/radar.zoom&#13;&#10;    end&#13;&#10;&#9;&#13;&#10;&#9;$botdb:setvalue(&quot;naviradar&quot;, &quot;zoom&quot;, radar.zoom)&#13;&#10;elseif eventshift.bool then&#13;&#10;    auto(10)&#13;&#10;&#9;&#13;&#10;    radar.shiftx = radar.shiftx + eventshift.x-$cursor.x&#13;&#10;    radar.shifty = radar.shifty + eventshift.y-$cursor.y&#13;&#10;    eventshift.x, eventshift.y = $cursor.x, $cursor.y&#13;&#10;else&#13;&#10;    auto(100)&#13;&#10;&#9;&#13;&#10;    if $posz ~= radar.lastz then&#13;&#10;        radar.lastz,radar.posz = $posz, $posz&#13;&#10;    end&#13;&#10;end&#13;&#10;&#13;&#10;if $cureventid == RADARMOVE then&#13;&#10;&#9;if iskeypressed(0x25) or iskeypressed(0x26) or iskeypressed(0x27) or iskeypressed(0x28) or iskeypressed(0x1B) then&#13;&#10;&#9;&#9;terminateevent(RADARMOVE)&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;hudpos = getposition()&#13;&#10;&#13;&#10;if mouseinside then&#13;&#10;&#9;--zoombar&#13;&#10;&#9;setfillstyle('color', 0x333333, -1)&#13;&#10;&#9;drawpie(zoomshape.pie.pos, zoomshape.pie.pos, zoomshape.pie.size, zoomshape.pie.size, -40, -100)&#13;&#10;&#13;&#10;&#9;setbordercolor(0xFFFFFF)&#13;&#10;&#9;drawarc(zoomshape.arc.pos, zoomshape.arc.pos, zoomshape.arc.size, zoomshape.arc.size, -45, -90)&#13;&#10;&#13;&#10;&#9;--up/down&#13;&#10;&#9;setfillstyle('color', 0x939393, 0)&#13;&#10;&#9;&#13;&#10;&#9;eventshift.buttonzupid = drawpie(zoomshape.pie.pos, zoomshape.pie.pos, zoomshape.pie.size, zoomshape.pie.size, -30, -10)&#13;&#10;&#9;eventshift.buttonzdownid = drawpie(zoomshape.pie.pos, zoomshape.pie.pos, zoomshape.pie.size, zoomshape.pie.size, -140, -10)&#13;&#10;&#9;&#13;&#10;&#9;setfontstyle('Verdana', radar.radius*0.1, 50, 0xFFFFFF)&#13;&#10;&#9;setfillstyle('color', 0)&#13;&#10;&#9;&#13;&#10;&#9;local w,h,left,right = measurestring('U')&#13;&#10;&#9;drawtext('U', radar.mapcenter+zoomshape.arc.radius*sin35-w*0.5, radar.mapcenter+zoomshape.arc.radius*cos35-h*0.25-3)&#13;&#10;&#9;&#13;&#10;&#9;local w,h = measurestring('D')&#13;&#10;&#9;drawtext('D', radar.mapcenter+zoomshape.arc.radius*(-sin35)-w*0.5, radar.mapcenter+zoomshape.arc.radius*cos35-h*0.25-3)&#13;&#10;else&#13;&#10;&#9;eventshift.buttonzupid = -1&#13;&#10;&#9;eventshift.buttonzdownid = -1&#13;&#10;&#9;eventzoom.buttonid = -1&#13;&#10;end&#13;&#10;&#13;&#10;--map&#13;&#10;setfillstyle(&quot;map&quot;, $posx-(radar.mapcenter-7-radar.shiftx)*radar.invzoom, $posy-(radar.mapcenter-7-radar.shifty)*radar.invzoom, radar.posz, radar.transparency, radar.zoom, 0)&#13;&#10;eventshift.buttonid = drawcircle(7, 7, radar.size, radar.size)&#13;&#10;&#13;&#10;if mouseinside then&#13;&#10;&#9;--zoombutton&#13;&#10;&#9;if not $navigation then&#13;&#10;&#9;&#9;setfillstyle('color', 0xDD2828)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;setfillstyle('color', 0x4499FF)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local w,h = measurestring('Z')&#13;&#10;&#13;&#10;&#9;eventzoom.buttonid = drawcircle(zoomshape.button.posx, zoomshape.button.posy, zoomshape.button.size, zoomshape.button.size)&#13;&#10;&#9;drawtext('Z', zoomshape.button.centerx-w*0.5, zoomshape.button.centery-h*0.35-2)&#13;&#10;end&#13;&#10;&#13;&#10;setbordercolor(0xFFFFFF)&#13;&#10;&#13;&#10;--&#13;&#10;&#13;&#10;local closest = 100&#13;&#10;local cursor = {x = $cursor.x-(hudpos.x), y = $cursor.y-(hudpos.y)}&#13;&#10;&#13;&#10;local function radar_getpoint (p)&#13;&#10;&#9;local dx = $posx - p.posx&#13;&#10;&#9;local dy = $posy - p.posy&#13;&#10;&#9;local totaldist = math.abs(dx)+math.abs(dy)&#13;&#10;&#9;local x,y = -(radar.shiftx+dx*radar.zoom), -(radar.shifty+dy*radar.zoom)&#13;&#10;&#9;local dist = math.sqrt(x*x+y*y)&#13;&#10;&#9;&#13;&#10;&#9;if dist &gt; radar.radius-dots.offset then&#13;&#10;&#9;&#9;local factor = radar.radius/dist&#13;&#10;&#9;&#9;x = x*factor&#13;&#10;&#9;&#9;y = y*factor&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;x,y = radar.mapcenter+x-dots.offset, radar.mapcenter+y-dots.offset&#13;&#10;&#9;&#13;&#10;&#9;return x, y, totaldist&#13;&#10;end&#13;&#10;&#13;&#10;local function radar_drawplayer (p, team)&#13;&#10;&#9;local x,y,totaldist = radar_getpoint(p)&#13;&#10;&#9;&#13;&#10;&#9;local bordercolor = 0xFFFFFF&#13;&#10;&#9;local fontbordercolor = 0&#13;&#10;&#9;local color = 0&#13;&#10;&#9;&#13;&#10;&#9;if p.id == $self.id then&#13;&#10;&#9;&#9;selfdot = {x = x, y = y}&#13;&#10;&#9;&#9;bordercolor = 0&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;color = 0xFFFFFF&#13;&#10;&#9;elseif team == TEAM_LEADER then&#13;&#10;&#9;&#9;color = 0x37DE1D&#13;&#10;&#9;elseif team == TEAM_ENEMY then&#13;&#10;&#9;&#9;color = 0xFF0000&#13;&#10;&#9;elseif team == TEAM_ALLY then&#13;&#10;&#9;&#9;color = 0x2299FF&#13;&#10;&#9;&#9;fontbordercolor = 0x0000FF&#13;&#10;&#9;&#9;bordercolor = 0x0000FF&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;if mouseinside then&#13;&#10;&#9;&#9;local cursordist = {x = cursor.x-x-2, y = cursor.y-y-2}&#13;&#10;&#9;&#9;local cursortotaldist = cursordist.x*cursordist.x + cursordist.y*cursordist.y --math.sqrt(cursordist.x*cursordist.x + cursordist.y*cursordist.y)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if cursortotaldist &lt;= dots.sizepow and cursortotaldist &lt; closest then&#13;&#10;&#9;&#9;&#9;cursordot = {name = p.name, posz = p.posz, x = $cursor.x, y = $cursor.y, rx = cursor.x, ry = cursor.y, dist = totaldist, color = color, bordercolor = bordercolor, fontbordercolor = fontbordercolor}&#13;&#10;&#9;&#9;&#9;closest = cursortotaldist&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;if $navigation then&#13;&#10;&#9;&#9;&#9;&#9;cursordot.icon = p.icon&#13;&#10;&#9;&#9;&#9;&#9;cursordot.iconcolor = p.color&#13;&#10;&#9;&#9;&#9;&#9;cursordot.glowcolor = p.glowcolor&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;local alpha&#13;&#10;&#9;&#13;&#10;&#9;if p.time &gt; 2000 then&#13;&#10;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;&#13;&#10;&#9;&#9;alpha = 1 -(15000 - p.time) / 13000&#13;&#10;&#9;&#9;local fullalpha = math.floor(255*alpha) * 0x01000000&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if radar.posz ~= p.posz then&#13;&#10;&#9;&#9;&#9;color = color + math.floor(128 + 127*alpha) * 0x01000000&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;color = color + fullalpha&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;bordercolor = bordercolor + fullalpha&#13;&#10;&#9;elseif radar.posz ~= p.posz then&#13;&#10;&#9;&#9;color = color + 0x80000000&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;setfillstyle('color', color, bordercolor)&#13;&#10;&#9;drawrect(x, y, dots.size, dots.size)&#13;&#10;&#9;&#13;&#10;&#9;if alpha then&#13;&#10;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;if $navigation then&#13;&#10;&#9;foreach navchar p do&#13;&#10;&#9;&#9;if p.isleader then radar_drawplayer(p, TEAM_LEADER) else radar_drawplayer(p, p.team) end&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;local hasping&#13;&#10;&#9;local lowesttime = 2000&#13;&#10;&#9;&#13;&#10;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;&#13;&#10;&#9;foreach navping p do&#13;&#10;&#9;&#9;local x,y,totaldist = radar_getpoint(p)&#13;&#10;&#9;&#9;local size = 30 + 30 * (p.time % 300) / 300&#13;&#10;&#9;&#9;local alpha = 0x80000000&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if p.time &gt; 1500 then&#13;&#10;&#9;&#9;&#9;alpha = 0.5 + (p.time - 1500) / 1000&#13;&#10;&#9;&#9;&#9;alpha = math.floor(255*alpha) * 0x01000000&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;setfillstyle('color', p.color + alpha)&#13;&#10;&#9;&#9;setbordercolor(p.glowcolor + alpha)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;drawcircle(x+2-size/2, y+2-size/2, size, size)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if p.time &lt; lowesttime then&#13;&#10;&#9;&#9;&#9;lowesttime = p.time&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;hasping = true&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#9;&#13;&#10;&#9;if hasping then&#13;&#10;&#9;&#9;auto(30)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if lowesttime &lt; pingtime then&#13;&#10;&#9;&#9;&#9;playsound('navping.wav', true)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;pingtime = lowesttime&#13;&#10;&#9;else&#13;&#10;&#9;&#9;pingtime = 2000&#13;&#10;&#9;end&#13;&#10;else&#13;&#10;&#9;foreach creature p 'p' do&#13;&#10;&#9;&#9;local team = p.team&#13;&#10;&#9;&#9;if team &gt; 0 then&#13;&#10;&#9;&#9;&#9;radar_drawplayer(p, team)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;if cursordot then&#13;&#10;    if cursordot.x == $cursor.x and cursordot.y == $cursor.y then&#13;&#10;&#9;&#9;auto(50)&#13;&#10;&#9;&#9;&#13;&#10;        setfontstyle('Arial', 15, 100, cursordot.color, 1, cursordot.fontbordercolor)&#13;&#10;&#9;&#9;&#13;&#10;        local str = cursordot.name&#13;&#10;        local w,h = measurestring(str)&#13;&#10;        local posx,posy = cursordot.rx-w*0.5, cursordot.ry-(h+2)&#13;&#10;&#9;&#9;local deltamove = 0&#13;&#10;&#9;&#9;&#13;&#10;        if posy &lt; 0 then&#13;&#10;            posy = posy+h*2.5&#13;&#10;        end&#13;&#10;        if posx &lt; 0 then&#13;&#10;&#9;&#9;&#9;deltamove = 2 - posx&#13;&#10;            posx = 2&#13;&#10;        end&#13;&#10;&#9;&#9;&#13;&#10;        drawtext(str, posx, posy)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;setfontstyle('Arial', 11, 100, cursordot.color, 1, cursordot.fontbordercolor)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;local dz = ''&#13;&#10;&#9;&#9;if cursordot.posz ~= $posz then&#13;&#10;&#9;&#9;&#9;if cursordot.posz &gt; $posz then&#13;&#10;&#9;&#9;&#9;&#9;dz = ' Z' ..  $posz - cursordot.posz&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;dz = ' Z+' .. $posz - cursordot.posz&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;str = '(' .. cursordot.dist .. ' SQMs' .. dz .. ')'&#13;&#10;        w,h = measurestring(str)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;posx = cursordot.rx-w*0.5 + deltamove&#13;&#10;&#9;&#9;posy = posy + 21&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9; if posx &lt; 0 then&#13;&#10;            posx = 2&#13;&#10;        end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;drawtext(str, posx, posy)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if cursordot.icon then&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;&#9;&#9;drawicon(cursordot.icon, posx + w*0.5 - 32, posy + 24, 200, cursordot.iconcolor, cursordot.glowcolor)&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#9;&#9;end&#13;&#10;    end&#13;&#10;end&#13;&#10;&#13;&#10;if eventclickmove.rangedtime &gt; $timems then&#13;&#10;&#9;setfillstyle('color', 0x303030, 0)&#13;&#10;&#9;drawcircle(eventclickmove.x-4, eventclickmove.y-4, 8, 8)&#13;&#10;elseif eventclickmove.outrangedtime &gt; $timems then&#13;&#10;&#9;setfillstyle('color', 0x6C3C3C3C, 0)&#13;&#10;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;&#13;&#10;&#9;drawrect(selfdot.x-106*radar.zoom, selfdot.y-106*radar.zoom, 212*radar.zoom, 212*radar.zoom)&#13;&#10;&#9;&#13;&#10;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="MonsterInfo" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.0.1'&#10;&#9;&#10;&#9;useworldhud()&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;setfontstyle(&quot;Tahoma&quot;, 7, 100, 0x00C000, 1, 0x000000)&#10;&#10;foreach creature c &quot;ms&quot; do&#10;&#9;local monsterinfo = creatureinfo(c.name)&#10;&#9;if ( monsterinfo.hp &gt; 0 ) then&#10;&#9;&#9;local r = getbararea(c)&#10;&#9;&#9;if ( r ) then&#10;&#9;&#9;&#9;local text = math.ceil(monsterinfo.hp * math.min(c.hppc + 0.5, 100) / 100) .. &quot; / &quot; .. monsterinfo.hp&#10;&#9;&#9;&#10;&#9;&#9;&#9;setfontcolor(c.hpcolor)&#10;&#9;&#9;&#9;drawtext(text, r.left - measurestring(text)/2 + 14, r.top + 2)&#10;&#9;&#9;end&#10;&#9;end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="ShowWaypoints" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.2.1'&#10;&#10;&#9;local waypointColors = {&#10;&#9;&#9;walk    = 0xAAF200,&#10;&#9;&#9;node    = 0x2A0736,&#10;&#9;&#9;stand   = 0x00AACC,&#10;&#9;&#9;shovel  = 0xEB8540,&#10;&#9;&#9;rope    = 0xFFCC00,&#10;&#9;&#9;machete = 0x003366,&#10;&#9;&#9;ladder  = 0xC55186,&#10;&#9;&#9;use     = 0x36693E,&#10;&#9;&#9;action  = 0x00FFFF,&#10;&#9;&#9;lure    = 0xCCCCCC&#10;&#9;}&#10;&#10;&#9;local function deleteWaypointCall(menu)&#10;&#9;&#9;removewaypoint(menu.waypointID)&#10;&#9;end&#10;&#10;&#9;local function moveWaypointName()&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;return tern(draggedWpt == nil, 'Move Waypoint', 'Stop Moving')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function moveWaypointCall(menu)&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;draggedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;draggedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointName()&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;return tern(resizedWpt == nil, 'Resize Waypoint', 'Stop Resizing')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointCall(menu)&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;resizedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;resizedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;registermessagehandler('contextMenu_waypoint', moveWaypointName, moveWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', resizeWaypointName, resizeWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', 'Delete Waypoint', deleteWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', MENU_SEPARATOR, nil)&#10;&#10;&#9;local xOffset, yOffset, worldWidth, worldHeight, x, y, z, topLeftTilePos,&#10;&#9;      botRightTilePos, width, height, text, label&#10;&#9;local waypointRect = {}&#10;&#10;&#9;function gettilepos(x, y, z)&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#10;&#10;&#9;&#9;if tile == nil then&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#10;&#9;&#9;&#9;&#9;xDiff = 0&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#10;&#9;&#9;&#9;&#9;yDiff = 0&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#10;&#9;&#9;&#9;-- adding this as a precaution.&#10;&#9;&#9;&#9;if tile ~= nil then&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#10;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return tile&#10;&#9;end&#10;&#10;&#9;useworldhud()&#10;init end&#10;&#10;setfontstyle('Tahoma', 7, 75, 0xFFFFFF, 1, 0x000000)&#10;&#10;xOffset, yOffset = $worldwin.left - $clientwin.left, $worldwin.top - $clientwin.top&#10;worldWidth, worldHeight = $worldwin.right - $worldwin.left - 2, $worldwin.bottom - $worldwin.top - 2&#10;&#10;local i = 0&#10;foreach settingsentry e 'Cavebot/Waypoints' do&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match(REGEX_SPA_COORDS)&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;if z == $posz then&#10;&#9;&#9;width, height = getsetting(e, 'Range'):match(REGEX_SPA_SIZE)&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#10;&#10;&#9;&#9;topLeftTilePos = gettilepos(x, y, z)&#10;&#9;&#9;botRightTilePos = gettilepos(x + width - 1, y + height - 1, z)&#10;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#10;&#9;&#9;&#9;waypointRect.left   = math.max(topLeftTilePos.left  , 0)&#10;&#9;&#9;&#9;waypointRect.top    = math.max(topLeftTilePos.top   , 0)&#10;&#9;&#9;&#9;waypointRect.right  = math.min(botRightTilePos.right , worldWidth)&#10;&#9;&#9;&#9;waypointRect.bottom = math.min(botRightTilePos.bottom, worldHeight)&#10;&#9;&#9;&#9;waypointRect.width  = waypointRect.right - waypointRect.left&#10;&#9;&#9;&#9;waypointRect.height = waypointRect.bottom - waypointRect.top&#10;&#10;&#9;&#9;&#9;if waypointRect.width &gt; 0 and waypointRect.height &gt; 0 then&#10;&#9;&#9;&#9;&#9;label = getsetting(e, 'Label')&#10;&#9;&#9;&#9;&#9;text = tern(#label == 0, tostring(i), label .. ' (' .. i .. ')')&#10;&#9;&#9;&#9;&#9;wptType = getsetting(e, 'Type')&#10;&#10;&#9;&#9;&#9;&#9;setfillstyle('color', (waypointColors[wptType:lower()] or 0) + (math.floor(2.55*50)*16777216))&#10;&#9;&#9;&#9;&#9;drawroundrect(&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.left,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.top,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.width,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.height,&#10;&#9;&#9;&#9;&#9;&#9;10, 10&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;&#9;if waypointRect.width &gt; 10 then&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(text, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 3&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(wptType, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 15&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;i = i + 1&#10;end&#10;&#10;if contextmenuinfo() == nil then&#10;&#9;if draggedWpt then&#10;&#9;&#9;set(draggedWpt, 'Coordinates', string.format('x:%i, y:%i, z:%i', $cursorinfo.x, $cursorinfo.y, $cursorinfo.z))&#10;&#9;elseif resizedWpt then&#10;&#9;&#9;local x, y = get(resizedWpt, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;x, y = tonumber(x), tonumber(y)&#10;&#10;&#9;&#9;set(resizedWpt, 'Range', string.format('%i x %i', math.max(1, 1 + ($cursorinfo.x - x)) , math.max(1, 1 + ($cursorinfo.y - y))))&#10;&#9;end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="ShowSpecialAreas" script="init start&#13;&#10;&#9;-- local SCRIPT_VERSION = '1.2.1'&#13;&#10;&#13;&#10;&#9;local function deleteSpecialAreaCall(menu)&#13;&#10;&#9;&#9;removespecialarea(menu.specialAreaName)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function moveSpecialAreaName()&#13;&#10;&#9;&#9;if resizedSP == nil then&#13;&#10;&#9;&#9;&#9;return tern(draggedSP == nil, 'Move Special Area', 'Stop Moving')&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function moveSpecialAreaCall(menu)&#13;&#10;&#9;&#9;if draggedSP == nil then&#13;&#10;&#9;&#9;&#9;draggedSP = menu.specialArea&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;draggedSP = nil&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function resizeSpecialAreaName()&#13;&#10;&#9;&#9;if draggedSP == nil then&#13;&#10;&#9;&#9;&#9;return tern(resizedSP == nil, 'Resize Special Area', 'Stop Resizing')&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function resizeSpecialAreaCall(menu)&#13;&#10;&#9;&#9;if resizedSP == nil then&#13;&#10;&#9;&#9;&#9;resizedSP = menu.specialArea&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;resizedSP = nil&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;registermessagehandler('contextMenu_specialArea', moveSpecialAreaName, moveSpecialAreaCall)&#13;&#10;&#9;registermessagehandler('contextMenu_specialArea', resizeSpecialAreaName, resizeSpecialAreaCall)&#13;&#10;&#9;registermessagehandler('contextMenu_specialArea', 'Delete Special Area', deleteSpecialAreaCall)&#13;&#10;&#9;registermessagehandler('contextMenu_specialArea', MENU_SEPARATOR, nil)&#13;&#10;&#13;&#10;&#9;local worldWidth, worldHeight, x, y, z, width, height, avoidance, name, policy, areaType&#13;&#10;&#9;local specialAreaRect = {}&#13;&#10;&#9;local innerRect = {}&#13;&#10;&#13;&#10;&#9;local function gettilepos(x, y, z)&#13;&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#13;&#10;&#13;&#10;&#9;&#9;if tile == nil then&#13;&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#13;&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#13;&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#13;&#10;&#9;&#9;&#9;&#9;xDiff = 0&#13;&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#13;&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#13;&#10;&#9;&#9;&#9;&#9;yDiff = 0&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#13;&#10;&#9;&#9;&#9;-- adding this as a precaution.&#13;&#10;&#9;&#9;&#9;if tile ~= nil then&#13;&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#13;&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#13;&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#13;&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#13;&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#13;&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;return tile&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function getAreaRect(x, y, w, h)&#13;&#10;&#9;&#9;local ret = {x = 0, y = 0, w = 0, h = 0}&#13;&#10;&#13;&#10;&#9;&#9;local topLeftTilePos = gettilepos(x, y, $posz)&#13;&#10;&#9;&#9;local botRightTilePos = gettilepos(x + w - 1, y + h - 1, $posz)&#13;&#10;&#13;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#13;&#10;&#9;&#9;&#9;ret.x = math.max(topLeftTilePos.left, 0)&#13;&#10;&#9;&#9;&#9;ret.y = math.max(topLeftTilePos.top, 0)&#13;&#10;&#9;&#9;&#9;ret.w = math.min(botRightTilePos.right, worldWidth) - ret.x&#13;&#10;&#9;&#9;&#9;ret.h = math.min(botRightTilePos.bottom, worldHeight) - ret.y&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;return ret&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function drawInnerRect(areaType, x, y, width, height)&#13;&#10;&#9;&#9;innerRect = {w = 0, h = 0}&#13;&#10;&#9;&#9;if areaType == 'Square (Border Only)' then&#13;&#10;&#9;&#9;&#9;innerRect = getAreaRect(x + 1, y + 1, width - 2, height - 2)&#13;&#10;&#9;&#9;elseif areaType == 'Square (Double Border)' then&#13;&#10;&#9;&#9;&#9;innerRect = getAreaRect(x + 2, y + 2, width - 4, height - 4)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if innerRect.w &gt; 0 and innerRect.h &gt; 0 then&#13;&#10;&#9;&#9;&#9;setfillstyle('color', 0xFF000000)&#13;&#10;&#9;&#9;&#9;drawroundrect(innerRect.x, innerRect.y, innerRect.w, innerRect.h, 10, 10)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;useworldhud()&#13;&#10;init end&#13;&#10;&#13;&#10;setfontstyle('Arial', 8, 75, 0xFFFFFF, 1, 0x000000)&#13;&#10;&#13;&#10;worldWidth, worldHeight = $worldwin.width - 2, $worldwin.height - 2&#13;&#10;&#13;&#10;foreach settingsentry e 'Cavebot/SpecialAreas' do&#13;&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match('.-(%d+).-(%d+).-(%d+)')&#13;&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#13;&#10;&#13;&#10;&#9;if z == $posz then&#13;&#10;&#9;&#9;width, height = getsetting(e, 'Size'):match('(%d+).-(%d+)')&#13;&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#13;&#10;&#13;&#10;&#9;&#9;specialAreaRect = getAreaRect(x, y, width, height)&#13;&#10;&#9;&#9;if specialAreaRect.w &gt; 0 and specialAreaRect.h &gt; 0 then&#13;&#10;&#9;&#9;&#9;avoidance = tonumber(getsetting(e, 'Avoidance'))&#13;&#10;&#9;&#9;&#9;areaType = getsetting(e, 'Type')&#13;&#10;&#9;&#9;&#9;name = getsetting(e, 'Name')&#13;&#10;&#9;&#9;&#9;policy = getsetting(e, 'Policy'):gsub('[^A-Z]', '')&#13;&#10;&#13;&#10;&#9;&#9;&#9;setfillstyle('color', color(255, 0, 0, math.round(100 - (avoidance / 4))))&#13;&#10;&#9;&#9;&#9;drawroundrect(specialAreaRect.x, specialAreaRect.y, specialAreaRect.w, specialAreaRect.h, 10, 10)&#13;&#10;&#9;&#9;&#9;drawInnerRect(areaType, x, y, width, height)&#13;&#10;&#13;&#10;&#9;&#9;&#9;if specialAreaRect.w &gt; 10 then&#13;&#10;&#9;&#9;&#9;&#9;drawtext(&#13;&#10;&#9;&#9;&#9;&#9;&#9;string.fit(name, specialAreaRect.w - 10, '...', true),&#13;&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.x + 5,&#13;&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.y + 3&#13;&#10;&#9;&#9;&#9;&#9;)&#13;&#10;&#9;&#9;&#9;&#9;drawtext(&#13;&#10;&#9;&#9;&#9;&#9;&#9;string.fit(policy, specialAreaRect.w - 10, '...', true),&#13;&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.x + 5,&#13;&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.y + 15&#13;&#10;&#9;&#9;&#9;&#9;)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;if contextmenuinfo() == nil then&#13;&#10;&#9;if draggedSP then&#13;&#10;&#9;&#9;set(draggedSP, 'Coordinates', string.format('x:%i, y:%i, z:%i', $cursorinfo.x, $cursorinfo.y, $cursorinfo.z))&#13;&#10;&#9;elseif resizedSP then&#13;&#10;&#9;&#9;local x, y = get(resizedSP, 'Coordinates'):match(REGEX_COORDS)&#13;&#10;&#9;&#9;x, y = tonumber(x), tonumber(y)&#13;&#10;&#13;&#10;&#9;&#9;set(resizedSP, 'Size', string.format('%i x %i', math.max(1, 1 + ($cursorinfo.x - x)) , math.max(1, 1 + ($cursorinfo.y - y))))&#13;&#10;&#9;end&#13;&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="GeneralInfo" script="init start&#13;&#10;&#9;-- local SCRIPT_VERSION = '1.0.0'&#13;&#10;&#9;&#13;&#10;&#9;local fontsize = 10&#13;&#10;&#9;local fontspacing = fontsize + 6&#13;&#10;&#9;setfontstyle(&quot;MS Serif&quot;, 10, 100, 0xCCCCCC, 1, 0x555555)&#13;&#10;&#9;&#13;&#10;&#9;local displayontitle = true -- set it to false to display it as a rectangular info instead&#13;&#10;&#9;local maxsize = 220&#13;&#10;&#9;&#13;&#10;&#9;setmaskcolorxp(0)&#13;&#10;init end&#13;&#10;&#13;&#10;auto(100)&#13;&#10;local info = {&#13;&#10;&#9;{color = 0xff5577, text = 'Exp/h: ', value = num($exphour)},&#13;&#10;&#9;{color = 0x77ff77, text = 'Level up: ', value = num($exptonextlevel) .. ' / ' .. time(timetolevel())},&#13;&#10;&#9;{color = 0x44eeff, text = 'Stamina: ', value = num($stamina)},&#13;&#10;&#9;{color = 0xcccccc, text = 'Ping: ', value = num($pingaverage)},&#13;&#10;&#9;{color = 0xc6b2ea, text = 'ItemID: ', value = $cursorinfo.id},&#13;&#10;}&#13;&#10;&#13;&#10;if (displayontitle) then&#13;&#10;&#9;local x = 0&#13;&#10;&#9;for _,j in ipairs(info) do&#13;&#10;&#9;&#9;local str = j.text .. j.value&#13;&#10;&#9;&#9;local w = measurestring(str)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;setfontcolor(j.color)&#13;&#10;&#9;&#9;drawtext(str, x, 0)&#13;&#10;&#9;&#9;x = x + w + 50&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setposition($clientwin.left + 30, $clientwin.top - 21)&#13;&#10;else&#13;&#10;&#9;for i,j in ipairs(info) do&#13;&#10;&#9;&#9;local w = measurestring(j.value)&#13;&#10;&#9;&#9;local posy = (i-1)*fontspacing&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;setfontcolor(j.color)&#13;&#10;&#9;&#9;drawtext(j.text, 2, posy)&#13;&#10;&#9;&#9;drawtext(j.value, maxsize-w, posy)&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;setposition($worldwin.left+20, $worldwin.top+8)&#13;&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="SSTaker" script="init start&#10;-- local SCRIPT_VERSION = '1.0.1'&#10;&#10;-- screenshot options&#10;&#10;local saveOriginal = true&#9;&#9;&#9;-- save full original, unaltered screenshot&#10;local createWorldVersion = true&#9;&#9;-- create a version of the screenshot that only shows the world area&#10;local createFullVersion = true&#9;&#9;-- create a version of the screenshot that shows the whole client&#10;local focusClient = true&#9;&#9;&#9;-- focus client before taking the screenshot&#10;local drawHuds = true&#9;&#9;&#9;&#9;-- if desktop composition is enabled (Windows Vista, 7 or 8), draw HUDs on SS&#10;local relocateHuds = true&#9;&#9;&#9;-- draws the huds at a custom location on the screenshot (need desktop composition enabled)&#10;local compressionQuality = 100&#9;&#9;-- file compression rate, values ranging from 1 to 100&#10;&#10;-- hud locations, relative to world window. negative coordinates will be right / bottom aligned&#10;local relocateLocations = {&#10;&#9;{ name = &quot;GeneralInfo&quot;, x = 4, y = -20 },&#10;&#9;{ name = &quot;MonitorMyStats&quot;, x = 0, y = 0 },&#10;&#9;{ name = &quot;MonitorMyHunting&quot;, x = - 242, y = 0 },&#10;}&#10;&#10;-- alteration options&#10;&#10;local showEquipment = true&#9;&#9;&#9;-- show your character equipment on world screenshot&#10;local hidePersonalInfo = true&#9;&#9;-- hide personal info on screenshot (character name)&#10;local hideHudInfo = true&#9;&#9;&#9;-- hide personal info on HUD (must be supported by HUD)&#10;&#10;-- technical settings&#10;&#10;local hideMethod = &quot;both&quot;&#9;&#9;&#9;-- &quot;shuffle&quot; = shuffle pixels, &quot;blur&quot; = blur region, &quot;both&quot; = both (strongest)&#10;local textSearchTolerance = 30&#9;&#9;-- how many % of the text for hiding we want to can be obstructed (by other text on top)&#10;&#10;-- internal setup (don't change below)&#10;&#10;-- note: textures/child_huds get rendered in the order&#10;-- they were created and not selected, needs fixing&#10;&#10;local glowTexture = createtexture()&#10;local clientTexture = createtexture()&#10;local shotTexture = createtexture()&#10;&#10;local glowRendered = false&#10;local takeScreenshot = false&#10;local fileName = 'smartss'&#10;&#10;local function renderglow()&#10;&#9;local rectSize = 34&#10;&#9;local glowSize = 4&#10;&#9;local fullSize = glowSize + rectSize + glowSize&#10;&#10;&#9;-- leave space for glow on edges&#10;&#9;selecthud(glowTexture)&#10;&#9;setfixedsize(fullSize, fullSize)&#10;&#9;&#10;&#9;-- fill with transparent color&#10;&#9;setbordercolor(-1)&#10;&#9;setfillstyle(&quot;color&quot;, -1)&#10;&#9;drawrect(0, 0, fullSize, fullSize)&#10;&#9;&#10;&#9;-- black rect in center&#10;&#9;setfillstyle(&quot;color&quot;, 0x80000000)&#10;&#9;drawrect(glowSize, glowSize, rectSize-1, rectSize-1)&#10;&#9;&#10;&#9;-- apply glow around rect&#10;&#9;drawgloweffect(0x000000, glowSize)&#10;&#9;&#10;&#9;--hudsnapshot(&quot;glow&quot;, 100)&#10;end&#10;&#10;local function copyequip()&#10;&#9;local slotLocations = {37, 2, 0, 16, 74, 16, 37, 39, 74, 53, 0, 53, 37, 76, 37, 113, 0, 90, 74, 90}&#10;&#9;local equipx, equipy = getwindowpos(&quot;equip&quot;)&#10;&#9;&#10;&#9;if equipx ~= nil then&#10;&#9;&#9;local destx = $worldwin.width - 123 - 16&#10;&#9;&#9;local desty = $worldwin.height - 155 - 16&#10;&#9;&#10;&#9;&#9;for i=1,10 do&#10;&#9;&#9;&#9;local slotx = 10 + slotLocations[i*2-1]&#10;&#9;&#9;&#9;local sloty = 4 + slotLocations[i*2]&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;-- add glow&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawtexture(glowTexture, destx+slotx-2, desty+sloty-2, 100)&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;-- copy equip slot&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#9;&#9;&#9;drawtexture(clientTexture, destx+slotx, desty+sloty, 100, equipx - $clientwin.x + slotx, equipy - $clientwin.y + sloty, 34, 34)&#10;&#9;&#9;end&#10;&#9;end&#10;end&#10;&#10;local function hideregion(r)&#10;&#9;if hideMethod == &quot;shuffle&quot; or hideMethod == &quot;both&quot; then&#10;&#9;&#9;drawshufflepixelseffect(r.left, r.top, r.width, r.height)&#10;&#9;end&#10;&#9;&#10;&#9;if hideMethod == &quot;blur&quot; or hideMethod == &quot;both&quot; then&#10;&#9;&#9;drawblureffect(r.left, r.top, r.width, r.height, 8, 2)&#10;&#9;end&#10;end&#10;&#10;local function takeshot()&#10;&#9;if hudready(clientTexture) and hudready(shotTexture) and hudready(glowTexture) then&#10;&#9;&#9;local worldx = $worldwin.x - $clientwin.x&#10;&#9;&#9;local worldy = $worldwin.y - $clientwin.y&#10;&#9;&#9;local worldw = $worldwin.width&#10;&#9;&#9;local worldh = $worldwin.height&#10;&#10;&#9;&#9;-- grab whole client screen&#10;&#9;&#9;selecthud(clientTexture)&#10;&#9;&#9;setfixedsize($clientwin.width, $clientwin.height)&#10;&#9;&#9;grabclientwindow()&#10;&#9;&#9;&#10;&#9;&#9;if saveOriginal then&#10;&#9;&#9;&#9;hudsnapshot(fileName .. &quot;.original&quot;, compressionQuality)&#10;&#9;&#9;end&#10;&#9;&#9;&#10;&#9;&#9;-- hide information&#10;&#9;&#9;if hidePersonalInfo then&#9;&#9;&#10;&#9;&#9;&#9;-- hide name in chat text in world window ($name says:)&#10;&#9;&#9;&#9;hideclienttext($name, worldx, worldy, worldw, worldh, true, hideMethod, 8, 2, textSearchTolerance)&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;if createFullVersion then&#10;&#9;&#9;&#9;&#9;-- hide name in chat window&#10;&#9;&#9;&#9;&#9;hideclienttext($name, 0, worldy + worldh + 62, -194, -22, false, hideMethod, 8, 2)&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;-- hide private channel names&#10;&#9;&#9;&#9;&#9;foreach channel c do&#10;&#9;&#9;&#9;&#9;&#9;if c.outid &gt; 6 then&#10;&#9;&#9;&#9;&#9;&#9;&#9;hideclienttext(c.name, 0, worldy + worldh + 44, -194, 16, true, hideMethod, 8, 2)&#10;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;-- hide name above char, in case the other way failed (text/other names on top?)&#10;&#9;&#9;&#9;local r = getnamearea($self, worldw, worldh)&#10;&#9;&#9;&#9;if r then&#10;&#9;&#9;&#9;&#9;-- map to client coordinates, and expand&#10;&#9;&#9;&#9;&#9;r.left = r.left + worldx&#10;&#9;&#9;&#9;&#9;r.top = r.top + worldy + 1&#10;&#9;&#9;&#9;&#9;r.width = r.width + 1&#10;&#9;&#9;&#9;&#9;r.height = r.height + 2&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;-- hide the region&#10;&#9;&#9;&#9;&#9;hideregion(r)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;&#9;&#10;&#9;&#9;if drawHuds and not $windowsxp then&#10;&#9;&#9;&#9;-- draw huds transparently&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;local i = 0&#10;&#9;&#9;&#9;while isscript(&quot;display&quot;, i) do&#10;&#9;&#9;&#9;&#9;local listname = scriptlistname(&quot;display&quot;, i)&#10;&#9;&#9;&#9;&#9;local x = nil&#10;&#9;&#9;&#9;&#9;local y = nil&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;if relocateHuds then&#10;&#9;&#9;&#9;&#9;&#9;for _, h in ipairs(relocateLocations) do&#10;&#9;&#9;&#9;&#9;&#9;&#9;if h.name == listname then&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if h.x &lt; 0 then x = worldx + worldw + h.x else x = worldx + h.x end&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if h.y &lt; 0 then y = worldy + worldh + h.y else y = worldy + h.y end&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;grabhud(listname, x, y)&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;i = i + 1&#10;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;-- restore changed defaults&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#9;&#9;end&#10;&#10;&#9;&#9;-- draw windbot logo&#10;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#10;&#9;&#9;local logow, logoh = 64, 64&#10;&#9;&#9;drawimage('windbot.png', worldx + 5, worldy + worldh - (logoh + 25), 0, 0, logow, logoh)&#10;&#10;&#9;&#9;-- restore changed defaults&#10;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#9;&#9;&#10;&#9;&#9;if createFullVersion then&#10;&#9;&#9;&#9;hudsnapshot(fileName .. &quot;.full&quot;, compressionQuality)&#10;&#9;&#9;end&#10;&#9;&#9;&#10;&#9;&#9;if createWorldVersion then&#10;&#9;&#9;&#9;-- render a glow effect to place under equip&#10;&#9;&#9;&#9;if not glowRendered then&#10;&#9;&#9;&#9;&#9;renderglow()&#10;&#9;&#9;&#9;&#9;glowRendered = true&#10;&#9;&#9;&#9;end&#10;&#9;&#9;&#10;&#9;&#9;&#9;-- switch to screenshot texture&#10;&#9;&#9;&#9;selecthud(shotTexture)&#10;&#9;&#9;&#9;setfixedsize(worldw, worldh)&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;-- copy world area of client&#10;&#9;&#9;&#9;drawtexture(clientTexture, 0, 0, 100, worldx, worldy, worldw, worldh)&#10;&#9;&#9;&#10;&#9;&#9;&#9;-- copy equipment&#10;&#9;&#9;&#9;if showEquipment then&#10;&#9;&#9;&#9;&#9;copyequip()&#10;&#9;&#9;&#9;end&#10;&#9;&#9;&#10;&#9;&#9;&#9;-- save texture to file&#10;&#9;&#9;&#9;hudsnapshot(fileName .. &quot;.world&quot;, compressionQuality)&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;-- free texture&#10;&#9;&#9;&#9;freetexture(shotTexture)&#10;&#9;&#9;end&#10;&#9;&#9;&#10;&#9;&#9;-- release texture contents to free memory (without deleting it)&#10;&#9;&#9;-- we won't be using it until next screenshot&#10;&#9;&#9;&#10;&#9;&#9;freetexture(clientTexture)&#10;&#9;end&#10;end&#10;&#10;function smartscreenshot(name)&#10;&#9;takeScreenshot = true&#10;&#9;fileName = name or 'smartss'&#10;end&#10;&#10;auto(50)&#10;&#10;init end&#10;&#10;-- runtime part&#10;&#10;if takeScreenshot then&#10;&#9;if not TakingScreenshot then&#10;&#9;&#9;-- huds can check for TakingScreenshot type&#10;&#9;&#9;-- to avoid drawing identifiable information&#10;&#9;&#9;&#10;&#9;&#9;TakingScreenshot = hideHudInfo and (&quot;hide_personal_info method:&quot; .. hideMethod) or &quot;normal&quot;&#10;&#9;&#9;&#10;&#9;&#9;debugscript(&quot;Taking screenshot&quot;)&#10;&#9;&#9;&#10;&#9;&#9;-- huds can be hidden and outdated if client not focused&#10;&#9;&#9;-- and give chance for hud to hide personal info&#10;&#9;&#9;forcerefreshhuds()&#10;&#9;&#9;&#10;&#9;&#9;debugscript(&quot;Huds refreshed&quot;)&#10;&#9;&#9;&#10;&#9;&#9;-- take the screenshot&#10;&#9;&#9;takeshot()&#10;&#9;&#9;&#10;&#9;&#9;debugscript(&quot;Done&quot;)&#10;&#9;&#9;&#10;&#9;&#9;TakingScreenshot = nil&#10;&#9;end&#10;&#9;&#10;&#9;takeScreenshot = false&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="NewHUDScript" script="init start&#10;&#9;&#10;&#9;local fontsize = 10&#10;&#9;local fontspacing = fontsize + 6&#10;&#9;setfontstyle(&quot;MS Serif&quot;, 10, 100, 0xCCCCCC, 1, 0x555555)&#10;&#9;&#10;&#9;local maxsize = 220&#10;&#9;&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;auto(100)&#10;local info = {&#10;{color = 0xE8890C, text = 'friend on screen ', value = tostring(friendonscreen)},&#10;{color = 0xE8890C, text = 'friend name ', value = tostring(fname)},&#10;{color = 0xE8890C, text = 'party ', value = tostring(party)},&#10;{color = 0xE8890C, text = 'have supply ', value = tostring(havesupply)},&#10;{color = 0xE8890C, text = 'respond ', value = tostring(respon)},&#10;}&#10;&#10;&#9;local x = 0&#10;&#9;local y = 0&#10;&#9;for _,j in ipairs(info) do&#10;&#9;&#9;local str = j.text&#10;&#9;&#9;local w = measurestring(str)&#10;&#9;&#9;&#10;&#9;&#9;setfontcolor(j.color)&#10;&#9;&#9;drawtext(str, x, y)&#10;&#9;&#9;drawtext(j.value, x + 120, y)&#10;&#9;&#9;drawtext(&quot;___________________________________&quot;, x, y)&#10;&#9;&#9;y = y + 20&#10;&#9;end&#10;&#10;&#9;setposition($worldwin.left-250, $worldwin.bottom -400)&#10;" enabled="no" refreshRate="100"/>
            <HUDScript name="RecentLoot" script="init start&#10;&#9;-- SCRIPT_VERSION = '1.1.1'&#10;&#9;local warnItems = {'fire sword', 'boots of haste', 'wand of inferno'} -- you can add more items here&#10;&#9;local maxMsgs = 5 -- max lines to display at once&#10;&#9;local msgTimeOut = 30000 -- will only show loots from the last 30 seconds&#10;&#10;&#9;local position = 'left' -- right or left&#10;&#9;local rareLootColor = 0xCE7C4E&#10;&#9;local lootColor = 0x2DA357&#10;&#10;&#9;-- dont edit anything below this line&#10;&#9;local fontsize = 7&#10;&#9;local fontspacing = fontsize + 6&#10;&#9;local isRight = (position == 'right')&#10;&#9;local msgs = {}&#10;&#10;&#9;setfontstyle(&quot;Tahoma&quot;, fontsize, 75, lootColor, 1, 0x002200)&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;foreach newmessage m do&#10;&#9;if m.level == 0 and m.content:sub(0,8) == 'Loot of ' then&#10;&#9;&#9;local msgInfo = m.content:lootmsg()&#10;&#9;&#9;local color = lootColor&#10;&#9;&#9;local hasItems = false&#10;&#10;&#9;&#9;local msg = msgInfo.name .. ': '&#10;&#10;&#9;&#9;local lastIndex = #msgInfo.items&#10;&#9;&#9;for index, item in ipairs(msgInfo.items) do&#10;&#9;&#9;&#9;hasItems = true&#10;&#10;&#9;&#9;&#9;if (item.count &gt; 1) then&#10;&#9;&#9;&#9;&#9;msg = msg .. item.count .. ' '&#10;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;msg = msg .. item.name&#10;&#9;&#9;&#9;if index ~= lastIndex then&#10;&#9;&#9;&#9;&#9;msg = msg .. ', '&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;if table.find(warnItems, item.name) then&#10;&#9;&#9;&#9;&#9;color = rareLootColor&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (hasItems) then&#10;&#9;&#9;&#9;local msgWidth = measurestring(msg)&#10;&#9;&#9;&#9;table.insert(msgs, {['msg'] = msg, ['color'] = color, ['time'] = $timems, ['width'] = msgWidth})&#10;&#9;&#9;end&#10;&#9;end&#10;end&#10;&#10;local msgsLen = #msgs&#10;local longestLine = 0&#10;if isRight then&#10;&#9;for index = msgsLen, math.max(msgsLen - maxMsgs + 1, 1), -1 do&#10;&#9;&#9;if msgs[index].width &gt; longestLine then longestLine = msgs[index].width end&#10;&#9;end&#10;end&#10;&#10;local i = 1&#10;while (i &lt;= msgsLen) do&#10;&#9;if $timems - msgs[i].time &lt;= msgTimeOut and i &gt; msgsLen - maxMsgs then&#10;&#9;&#9;setfontcolor(msgs[i].color)&#10;&#9;&#9;addtext(msgs[i].msg, tern(isRight, longestLine - msgs[i].width + 2, 2), i*fontspacing)&#10;&#10;&#9;&#9;i = i + 1&#10;&#9;else&#10;&#9;&#9;table.remove(msgs, i)&#10;&#9;end&#10;&#10;&#9;msgsLen = #msgs&#10;end&#10;&#10;if not isRight then&#10;&#9;setposition($worldwin.left + 3, $worldwin.bottom - i*fontspacing)&#10;else&#10;&#9;setposition($worldwin.right - 3 - longestLine, $worldwin.bottom - i*fontspacing)&#10;end&#10;&#10;if msgsLen == 0 then -- to clear HUD when resetting script&#10;&#9;addtext('', 0, 0)&#10;end" enabled="yes" refreshRate="100"/>
        </HUDScripts>
    </HUDs>
    <GeneralSettings>
        <Input>
            <MouseOption mouseMode="Simulate Mouse"/>
            <MouseOption scrollMode="Use mouse wheel"/>
            <MouseOption stuckCursorPolicy="If Cavebot on, Release Instantly"/>
            <MouseOption moveSpeed="Instantaneous"/>
            <MouseOption clickWaitMin="10" clickWaitMax="10"/>
            <KeyboardOption keyboardMode="Simulate Keyboard"/>
            <KeyboardOption stuckCtrlShiftPolicy="If Cavebot on, Release Instantly"/>
            <KeyboardOption typeWaitMin="10" typeWaitMax="10"/>
            <KeyboardOption pressWaitMin="10" pressWaitMax="10"/>
            <FocusOption focusPolicy="Don't auto-focus"/>
            <FocusOption openMenuPolicy="Confirm if cavebotting"/>
        </Input>
    </GeneralSettings>
    <Alerts disableSounds="no">
        <alert name="Player On Screen" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Player Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Monster Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Private Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Default Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="GM Detected" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Disconnected" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Character Stuck" playSound="no" pauseBot="no" logout="no" standTime="30000"/>
        <alert name="Health Below" playSound="no" pauseBot="no" logout="no" healthPercent="50"/>
        <alert name="Mana Below" playSound="no" pauseBot="no" logout="no" manaPercent="50"/>
        <alert name="Unjust Kill" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Enemies Online" playSound="no" pauseBot="no" logout="no" enemiesCount="50"/>
    </Alerts>
    <Cavebot enabled="no">
        <Options>
            <Option shovel="3457"/>
            <Option rope="3003"/>
            <Option machete="3308"/>
            <Option pick="3456"/>
            <Option nodeRange="6"/>
            <Option pauseBotOnDeath="yes"/>
            <Option refillAmmo="no" refillAmmoMin="30" refillAmmoMax="70"/>
            <Option autoMount="yes"/>
            <Option fireAvoidanceMin="0" fireAvoidanceMax="0"/>
            <Option energyAvoidanceMin="0" energyAvoidanceMax="0"/>
            <Option poisonAvoidanceMin="0" poisonAvoidanceMax="0"/>
            <Option walkThroughPlayers="yes"/>
            <Option walkMethod="Walk With Arrow Keys"/>
            <Option walkableItems="7, 140, 404, 831, 832, 833, 834, 883, 1020, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2131, 2132, 2133, 2134, 2135, 2314, 2315, 2316, 2319, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2431, 2432, 2433, 2434, 2441, 2442, 2443, 2444, 2469, 2471, 2472, 2473, 2478, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2519, 2523, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2981, 2982, 2983, 2984, 2985, 2987, 2988, 3503, 3504, 3514, 3807, 5086, 5087, 5088, 6114, 6115, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6371, 6372, 7864, 8455, 8763, 9061, 9062, 10209, 10216, 10286, 10287, 10288, 11009, 11010, 11011, 11800, 11801, 11802, 11803, 11804, 11805, 11806, 11807, 11808, 11809, 11810, 17972"/>
            <Option mapWalkDistMin="20" mapWalkDistMax="30"/>
            <Option userOptionsScript="{&#10;&quot;type&quot; : &quot;scriptinfo&quot;, &#10;&quot;name&quot; : &quot;EK - Roshamuul Valey by Yoko&quot;, &#10;&quot;version&quot; : &quot;1.0.0&quot;&#10;},&#10;    &#10;&#10;&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;test&quot; : &quot;Friend&quot;,&#10;    &quot;name&quot; : &quot;Friend&quot;,&#10;    &quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;lineedit&quot;,&#10;&quot;name&quot; : &quot;friendname&quot;,&#10;&quot;text&quot; : &quot;Friend Name&quot;,&#10;&quot;value&quot; : &quot;Friend Name&quot;&#10;}&#10;&#10;    ]&#10;    },&#10;{&#10;        &quot;type&quot;    : &quot;group&quot;,&#10;        &quot;name&quot;    : &quot;Backpacks Setup&quot;,&#10;        &quot;children&quot;: [&#10;                {&#10;                        &quot;type&quot;        : &quot;lineedit&quot;,&#10;                        &quot;name&quot;        : &quot;MainBP&quot;,&#10;                        &quot;description&quot; : &quot;Your Main backpack.&quot;,&#10;                        &quot;text&quot;        : &quot;Main Backpack:&quot;,&#10;                        &quot;value&quot;       : &quot;X Backpack&quot;&#10;                },&#10;                {&#10;                        &quot;type&quot;        : &quot;lineedit&quot;,&#10;                        &quot;name&quot;        : &quot;SuppliesBP&quot;,&#10;                        &quot;description&quot; : &quot;Your backpack for Supplies.&quot;,&#10;                        &quot;text&quot;        : &quot;Supplies Backpack:&quot;,&#10;                        &quot;value&quot;       : &quot;X Backpack&quot;&#10;                },&#10; &#10;                {&#10;                        &quot;type&quot;        : &quot;lineedit&quot;,&#10;                        &quot;name&quot;        : &quot;LootBP&quot;,&#10;                        &quot;description&quot; : &quot;Your backpack for Loot.&quot;,&#10;                        &quot;text&quot;        : &quot;Loot Backpack:&quot;,&#10;                        &quot;value&quot;       : &quot;X Backpack&quot;&#10;                },&#10;{&#10;                        &quot;type&quot;        : &quot;lineedit&quot;,&#10;                        &quot;name&quot;        : &quot;GoldBP&quot;,&#10;                        &quot;description&quot; : &quot;Your backpack for Gold.&quot;,&#10;                        &quot;text&quot;        : &quot;Gold Backpack:&quot;,&#10;                        &quot;value&quot;       : &quot;X Backpack&quot;&#10;                },&#10;{&#10;                        &quot;type&quot;        : &quot;lineedit&quot;,&#10;                        &quot;name&quot;        : &quot;ExtraBP&quot;,&#10;                        &quot;description&quot; : &quot;Your Extra backpack&quot;,&#10;                        &quot;text&quot;        : &quot;Extra Backpack:&quot;,&#10;                        &quot;value&quot;       : &quot;X Backpack&quot;&#10;                },&#10;{&#10;                        &quot;type&quot;        : &quot;checkbox&quot;,&#10;                        &quot;name&quot;        : &quot;uebp&quot;,&#10;                        &quot;description&quot; : &quot;Use Extra backpack&quot;,&#10;                        &quot;text&quot;        : &quot;Use Extra Backpack:&quot;,&#10;                        &quot;value&quot;       : false&#10;                }&#10;        ]&#10;},&#10; &#10;{&#10;        &quot;type&quot;    : &quot;group&quot;,&#10;        &quot;name&quot;    : &quot;Depot Setup&quot;,&#10;        &quot;children&quot;: [&#10;                {&#10;                        &quot;type&quot;        : &quot;lineedit&quot;,&#10;                        &quot;name&quot;        : &quot;maindpbp&quot;,&#10;                        &quot;description&quot; : &quot;Main Backpack located inside depot.&quot;,&#10;                        &quot;text&quot;        : &quot;Main Depot Backpack:&quot;,&#10;                        &quot;value&quot;       : &quot;X Backpack&quot;&#10;                },&#10;                {&#10;                        &quot;type&quot;        : &quot;lineedit&quot;,&#10;                        &quot;name&quot;        : &quot;stackdpbp&quot;,&#10;                        &quot;description&quot; : &quot;Backpack located inside Main Depot Backpack, used for stackable loot.&quot;,&#10;                        &quot;text&quot;        : &quot;Stackables Depot Backpack:&quot;,&#10;                        &quot;value&quot;       : &quot;X Backpack&quot;&#10;                },&#10;                {&#10;                        &quot;type&quot;        : &quot;lineedit&quot;,&#10;                        &quot;name&quot;        : &quot;raredpbp&quot;,&#10;                        &quot;description&quot; : &quot;Backpack located inside Main Depot Backpack, used for non-stackable loot.&quot;,&#10;                        &quot;text&quot;        : &quot;Loot Depot Backpack:&quot;,&#10;                        &quot;value&quot;       : &quot;X Backpack&quot;&#10;                }&#10;        ]&#10;},&#10;&#10;{&#10;        &quot;type&quot;    : &quot;group&quot;,&#10;        &quot;name&quot;    : &quot;Supplies&quot;,&#10;        &quot;column&quot;  : 1,&#10;        &quot;children&quot;: [&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;MaxMana&quot;,&#10; &quot;description&quot; : &quot;Amount of mana potions to buy.&quot;,&#10;&quot;suffix&quot; : &quot; MP &quot;,&#10;&quot;min&quot; : 100,&#10;&quot;max&quot; : 10000,&#10;&quot;value&quot; : 1400&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;MinMana&quot;,&#10; &quot;description&quot; : &quot;Amount of mana potions to buy.&quot;,&#10;&quot;suffix&quot; : &quot; MP&quot;,&#10;&quot;min&quot; : 10,&#10;&quot;max&quot; : 10000,&#10;&quot;value&quot; : 140&#10;},&#10;  {          &#10;          &quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;MaxGHP&quot;,&#10; &quot;description&quot; : &quot;Amount of great health potions to buy.&quot;,&#10;&quot;suffix&quot; : &quot; GHP &quot;,&#10;&quot;min&quot; : 10,&#10;&quot;max&quot; : 10000,&#10;&quot;value&quot; : 100&#10;},&#10;             &#10;  {          &#10;          &quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;MinGHP&quot;,&#10; &quot;description&quot; : &quot;Amount of great health potions to trigger the refiller.&quot;,&#10;&quot;suffix&quot; : &quot; GHP &quot;,&#10;&quot;min&quot; : 10,&#10;&quot;max&quot; : 10000,&#10;&quot;value&quot; : 20&#10;},&#10;              &#10;  {          &#10;          &quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;MaxUHP&quot;,&#10; &quot;description&quot; : &quot;Amount of ultimate health potions to buy.&quot;,&#10;&quot;suffix&quot; : &quot; UHP&quot;,&#10;&quot;min&quot; : 10,&#10;&quot;max&quot; : 10000,&#10;&quot;value&quot; : 100&#10;},&#10;             &#10;  {          &#10;          &quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;MinUHP&quot;,&#10;   &quot;description&quot; : &quot;Amount of ultimate health potions to trigger the refiller.&quot;,&#10;&quot;suffix&quot; : &quot; UHP&quot;,&#10;&quot;min&quot; : 10,&#10;&quot;max&quot; : 10000,&#10;&quot;value&quot; : 20&#10;}&#10;&#10;        ]&#10;},&#10;{&#10;        &quot;type&quot;    : &quot;group&quot;,&#10;        &quot;name&quot;    : &quot;Sell Items To Market&quot;,&#10;        &quot;text&quot;    : &quot;Sell Items To Market&quot;,&#10;        &quot;children&quot;: [&#10;&#9;&#9;&#9;&#9;{&#10;                        &quot;type&quot;        : &quot;checkbox&quot;,&#10;                        &quot;name&quot;        : &quot;market&quot;,&#10;                        &quot;description&quot; : &quot;If checked, will sell rares on market or make and offer if none is buying them.&quot;,&#10;                        &quot;text&quot;        : &quot;Sell rares to market&quot;,&#10;                        &quot;value&quot;       : true&#10;                },&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&quot;type&quot;   : &quot;spinbox&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;name&quot;   : &quot;bootsofhaste&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;text&quot;   : &quot;Boots Of Haste&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;suffix&quot; : &quot; gp&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;min&quot;    : 0,&#10;&#9;&#9;&#9;&#9;&#9;&quot;max&quot;    : 99999,&#10;&#9;&#9;&#9;&#9;&#9;&quot;value&quot;  : 29000&#10;&#9;&#9;&#9;&#9;},&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&quot;type&quot;   : &quot;spinbox&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;name&quot;   : &quot;nightmareblade&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;text&quot;   : &quot;Nightmare Blade&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;suffix&quot; : &quot; gp&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;min&quot;    : 0,&#10;&#9;&#9;&#9;&#9;&#9;&quot;max&quot;    : 99999,&#10;&#9;&#9;&#9;&#9;&#9;&quot;value&quot;  : 35000&#10;&#9;&#9;&#9;&#9;},&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&quot;type&quot;   : &quot;spinbox&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;name&quot;   : &quot;assassindagger&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;text&quot;   : &quot;Assassin Dagger&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;suffix&quot; : &quot; gp&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;min&quot;    : 0,&#10;&#9;&#9;&#9;&#9;&#9;&quot;max&quot;    : 99999,&#10;&#9;&#9;&#9;&#9;&#9;&quot;value&quot;  : 19000&#10;&#9;&#9;&#9;&#9;},&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&quot;type&quot;   : &quot;spinbox&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;name&quot;   : &quot;sai&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;text&quot;   : &quot;Sai&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;suffix&quot; : &quot; gp&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;min&quot;    : 0,&#10;&#9;&#9;&#9;&#9;&#9;&quot;max&quot;    : 99999,&#10;&#9;&#9;&#9;&#9;&#9;&quot;value&quot;  : 15000&#10;&#9;&#9;&#9;&#9;},&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&quot;type&quot;   : &quot;spinbox&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;name&quot;   : &quot;hauntedblade&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;text&quot;   : &quot;Haunted Blade&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;suffix&quot; : &quot; gp&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;min&quot;    : 0,&#10;&#9;&#9;&#9;&#9;&#9;&quot;max&quot;    : 99999,&#10;&#9;&#9;&#9;&#9;&#9;&quot;value&quot;  : 7500&#10;&#9;&#9;&#9;&#9;},&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&quot;type&quot;   : &quot;spinbox&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;name&quot;   : &quot;shadowsceptre&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;text&quot;   : &quot;Shadow Sceptre&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;suffix&quot; : &quot; gp&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;min&quot;    : 0,&#10;&#9;&#9;&#9;&#9;&#9;&quot;max&quot;    : 99999,&#10;&#9;&#9;&#9;&#9;&#9;&quot;value&quot;  : 9000&#10;&#9;&#9;&#9;&#9;},&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&quot;type&quot;   : &quot;spinbox&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;name&quot;   : &quot;terralegs&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;text&quot;   : &quot;Terra Legs&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;suffix&quot; : &quot; gp&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;min&quot;    : 0,&#10;&#9;&#9;&#9;&#9;&#9;&quot;max&quot;    : 99999,&#10;&#9;&#9;&#9;&#9;&#9;&quot;value&quot;  : 10000&#10;&#9;&#9;&#9;&#9;},&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&quot;type&quot;   : &quot;spinbox&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;name&quot;   : &quot;gloriousaxe&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;text&quot;   : &quot;Glorious Axe&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;suffix&quot; : &quot; gp&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;min&quot;    : 0,&#10;&#9;&#9;&#9;&#9;&#9;&quot;max&quot;    : 99999,&#10;&#9;&#9;&#9;&#9;&#9;&quot;value&quot;  : 3000&#10;},&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&quot;type&quot;   : &quot;spinbox&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;name&quot;   : &quot;titanaxe&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;text&quot;   : &quot;Titan Axe&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;suffix&quot; : &quot; gp&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;min&quot;    : 0,&#10;&#9;&#9;&#9;&#9;&#9;&quot;max&quot;    : 99999,&#10;&#9;&#9;&#9;&#9;&#9;&quot;value&quot;  : 3500&#10;},&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&quot;type&quot;   : &quot;spinbox&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;name&quot;   : &quot;terraboots&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;text&quot;   : &quot;Terra Boots&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;suffix&quot; : &quot; gp&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;min&quot;    : 0,&#10;&#9;&#9;&#9;&#9;&#9;&quot;max&quot;    : 99999,&#10;&#9;&#9;&#9;&#9;&#9;&quot;value&quot;  : 2000&#10;},&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&quot;type&quot;   : &quot;spinbox&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;name&quot;   : &quot;diamondsceptre&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;text&quot;   : &quot;Diamond Sceptre&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;suffix&quot; : &quot; gp&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;min&quot;    : 0,&#10;&#9;&#9;&#9;&#9;&#9;&quot;max&quot;    : 99999,&#10;&#9;&#9;&#9;&#9;&#9;&quot;value&quot;  : 2500&#10;}&#10;      &#9;&#9;&#9;]&#10;},&#10;{&#10;        &quot;type&quot;    : &quot;group&quot;,&#10;        &quot;name&quot;    : &quot;Extra Options&quot;,&#10;        &quot;column&quot;  : 2,&#10;        &quot;children&quot;: [&#10;{&#10;                        &quot;type&quot;        : &quot;checkbox&quot;,&#10;                        &quot;name&quot;        : &quot;sharemoney&quot;,&#10;                        &quot;description&quot; : &quot;If checked, then EK will share profit 50/50 with ED&quot;,&#10;                        &quot;text&quot;        : &quot;Share Money 50/50&quot;,&#10;                        &quot;value&quot;       : true&#10;                },&#10; {&#10;                        &quot;type&quot;        : &quot;checkbox&quot;,&#10;                        &quot;name&quot;        : &quot;lootgold&quot;,&#10;                        &quot;description&quot; : &quot;If checked, you will loot gold.&quot;,&#10;                        &quot;text&quot;        : &quot;Loot Gold&quot;,&#10;                        &quot;value&quot;       : false&#10;                }, &#10;{&#10;                        &quot;type&quot;        : &quot;checkbox&quot;,&#10;                        &quot;name&quot;        : &quot;enterdown&quot;,&#10;                        &quot;description&quot; : &quot;There are more monsters and its bigger hardcore.&quot;,&#10;                        &quot;text&quot;        : &quot;Enter Lower Floor&quot;,&#10;                        &quot;value&quot;       : false&#10;                },&#10;                {&#10;                        &quot;type&quot;        : &quot;checkbox&quot;,&#10;                        &quot;name&quot;        : &quot;KeepHasted&quot;,&#10;                        &quot;description&quot; : &quot;If checked, you will use haste while hunting.&quot;,&#10;                        &quot;text&quot;        : &quot;Keep Hasted&quot;,&#10;                        &quot;value&quot;       : true&#10;                },&#10;{&#10;     &#9;&#9;&#9;&#9;&quot;type&quot; &#9; : &quot;spinbox&quot;,&#10;     &#9;&#9;&#9;&#9;&quot;name&quot; &#9; : &quot;utitoc&quot;,&#10;       &#9;&#9;&#9;&#9;&quot;text&quot; &#9; : &quot;Monsters to cast utito tempo? put 10 if u don't want to cast.&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;suffix&quot; : &quot; monsters&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&quot;min&quot;&#9; : 0,&#10;&#9;&#9;&#9;&#9;&#9;&quot;max&quot;&#9; : 10,&#10;       &#9;&#9;&#9;&#9;&quot;value&quot;  : 4&#10;    &#9;&#9;&#9;},&#10;{&#10;                        &quot;type&quot;        : &quot;checkbox&quot;,&#10;                        &quot;name&quot;        : &quot;pvpes&quot;,&#10;                        &quot;description&quot; : &quot;If checked, then character won't enter other characters&quot;,&#10;                        &quot;text&quot;        : &quot;Server type is pvp?&quot;,&#10;                        &quot;value&quot;       : false&#10;                },&#10;{&#10;                        &quot;type&quot;        : &quot;checkbox&quot;,&#10;                        &quot;name&quot;        : &quot;alertonspawn&quot;,&#10;                        &quot;description&quot; : &quot;If checked, then bot will alert you if someone enter spawn&quot;,&#10;                        &quot;text&quot;        : &quot;Player on screen alert&quot;,&#10;                        &quot;value&quot;       : false&#10;                }&#10;&#10;        ]&#10;}&#10;"/>
        </Options>
        <SpecialAreas/>
        <CavebotScripts/>
        <WaypointSection name="Refill">
            <Waypoint type="Stand" x="32270" y="31141" z="7" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Action" x="32270" y="31141" z="7" rangeX="1" rangeY="1" script="--location&#10;if not islocation(3) then&#10;gotolabel(&quot;start&quot;)&#10;end"/>
            <Waypoint type="Action" x="32271" y="31141" z="7" rangeX="1" rangeY="1" script="depot()"/>
            <Waypoint type="Action" x="33521" y="32551" z="7" rangeX="1" rangeY="1" script="enterspawn = true&#10;runrefill = false"/>
            <Waypoint type="Stand" x="32274" y="31141" z="7" rangeX="1" rangeY="1" label="gotobank"/>
            <Waypoint type="Node" x="32290" y="31135" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32300" y="31134" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32300" y="31134" z="7" rangeX="1" rangeY="1" script="--location&#10;if not islocation(3) then&#10;gotolabel(&quot;gotobank&quot;)&#10;end"/>
            <Waypoint type="Action" x="32300" y="31134" z="7" rangeX="1" rangeY="1" script="bpsforbank()&#10;waitping()&#10;transfermoney()&#10;waitping()&#10;withdrawmoney()"/>
            <Waypoint type="Stand" x="32301" y="31134" z="7" rangeX="1" rangeY="1" label="gotomshop"/>
            <Waypoint type="Stand" x="32307" y="31132" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32307" y="31132" z="7" rangeX="1" rangeY="1" script="--location&#10;if not islocation(3) then&#10;gotolabel(&quot;gotomshop&quot;)&#10;end"/>
            <Waypoint type="Action" x="32307" y="31132" z="7" rangeX="1" rangeY="1" script="suppshop()&#10;waitping()&#10;checksupp()"/>
            <Waypoint type="Stand" x="32307" y="31131" z="7" rangeX="1" rangeY="1" label="goroshamuul"/>
            <Waypoint type="Node" x="32318" y="31119" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32339" y="31116" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32341" y="31112" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Ladder" x="32341" y="31112" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32344" y="31109" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32344" y="31109" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation(3) then&#10;gotolabel(&quot;goroshamuul&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32345" y="31108" z="6" rangeX="1" rangeY="1" label="sailtorosh"/>
            <Waypoint type="Action" x="32345" y="31108" z="6" rangeX="1" rangeY="1" script="travel(&quot;thais&quot;)"/>
            <Waypoint type="Stand" x="32311" y="32211" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32311" y="32211" z="6" rangeX="1" rangeY="1" script="waitping()&#10;travel(&quot;roshamuul&quot;)"/>
            <Waypoint type="Stand" x="33494" y="32566" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33494" y="32566" z="7" rangeX="1" rangeY="1" script="--location&#10;if not islocation(3) then&#10;gotolabel(&quot;sailtorosh&quot;)&#10;else&#10;bpsforhunt()&#10;end"/>
            <Waypoint type="Stand" x="33495" y="32566" z="7" rangeX="1" rangeY="1" label="getready"/>
            <Waypoint type="Node" x="33506" y="32561" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33526" y="32551" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33526" y="32551" z="7" rangeX="1" rangeY="1" script="--location&#10;selfonlyiftraped()&#10;if not islocation(3) then&#10;gotolabel(&quot;getready&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33527" y="32543" z="6" rangeX="1" rangeY="1" label="wh1"/>
            <Waypoint type="Action" x="33526" y="32551" z="7" rangeX="1" rangeY="1" script="if friendonscreen then&#10;&#10;checkpotsbeforehunt()&#10;else&#10;gotolabel(&quot;wh1&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33526" y="32551" z="7" rangeX="1" rangeY="1" label="enterhunt"/>
            <Waypoint type="Stand" x="33524" y="32548" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33531" y="32529" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33531" y="32529" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation(0) then&#10;gotolabel(&quot;enterhunt&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Lure1&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Lure1">
            <Waypoint type="Stand" x="33531" y="32529" z="6" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Action" x="33531" y="32529" z="6" rangeX="1" rangeY="1" script="while not cre.onscreen do&#10;&#10;wait(1000)&#10;end"/>
            <Waypoint type="Stand" x="33531" y="32529" z="6" rangeX="1" rangeY="1" label="standl"/>
            <Waypoint type="Action" x="33531" y="32529" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation() then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;selfnoonlyiftraped()&#10;end"/>
            <Waypoint type="Action" x="33531" y="32529" z="6" rangeX="1" rangeY="1" script="if cre.posx == 33533 and cre.posy == 32527 then&#10;checkpotions()&#10;end"/>
            <Waypoint type="Action" x="33531" y="32529" z="6" rangeX="1" rangeY="1" script="wait(1000)&#10;if maround(10) &gt;= 1 then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;bothonlyiftraped()&#10;golure(2)&#10;end"/>
            <Waypoint type="Node" x="33525" y="32528" z="6" rangeX="1" rangeY="1" label="runnext"/>
            <Waypoint type="Stand" x="33520" y="32522" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33520" y="32522" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation(0) then&#10;gotolabel(&quot;runnext&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Lure2&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Lure2">
            <Waypoint type="Stand" x="33520" y="32522" z="6" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Action" x="33520" y="32522" z="6" rangeX="1" rangeY="1" script="while not (cre.posx == 33522 and cre.posy == 32520) do&#10;&#10;wait(1000)&#10;end&#10;&#10;if maround(10) &gt; 3 then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;selfonlyiftraped()&#10;end&#10;"/>
            <Waypoint type="Node" x="33511" y="32522" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33520" y="32522" z="6" rangeX="1" rangeY="1" label="standl"/>
            <Waypoint type="Action" x="33520" y="32522" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation() then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;wait(1000)&#10;selfnoonlyiftraped()&#10;end"/>
            <Waypoint type="Action" x="33520" y="32522" z="6" rangeX="1" rangeY="1" script="wait(1000)&#10;if maround(10) &gt;= 1 then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;bothonlyiftraped()&#10;golure(3)&#10;end"/>
            <Waypoint type="Stand" x="33520" y="32522" z="6" rangeX="1" rangeY="1" label="runnnext"/>
            <Waypoint type="Node" x="33510" y="32520" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33508" y="32518" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33508" y="32518" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation(0) then&#10;gotolabel(&quot;runnext&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Lure3&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Lure3">
            <Waypoint type="Stand" x="33508" y="32518" z="6" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Action" x="33508" y="32518" z="6" rangeX="1" rangeY="1" script="while not (cre.posx == 33511 and cre.posy == 32516) do&#10;wait(1000)&#10;end&#10;&#10;if maround(10) &gt; 3 then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;selfonlyiftraped()&#10;end&#10;"/>
            <Waypoint type="Node" x="33504" y="32515" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33509" y="32523" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33513" y="32521" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33508" y="32518" z="6" rangeX="1" rangeY="1" label="standl"/>
            <Waypoint type="Action" x="33508" y="32518" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation() then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;wait(1000)&#10;selfnoonlyiftraped()&#10;end"/>
            <Waypoint type="Action" x="33508" y="32518" z="6" rangeX="1" rangeY="1" script="wait(1000)&#10;if maround(10) &gt;= 1 then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;bothonlyiftraped()&#10;golure(4)&#10;end"/>
            <Waypoint type="Stand" x="33508" y="32518" z="6" rangeX="1" rangeY="1" label="runnext"/>
            <Waypoint type="Stand" x="33519" y="32522" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33543" y="32527" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33549" y="32526" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33549" y="32526" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation(0) then&#10;gotolabel(&quot;runnext&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Lure4&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Lure4">
            <Waypoint type="Stand" x="33549" y="32526" z="6" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Action" x="33549" y="32526" z="6" rangeX="1" rangeY="1" script="while not (cre.posx == 33549 and cre.posy == 32523) do&#10;&#10;wait(1000)&#10;end&#10;&#10;if maround(10) &gt; 3 then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;selfonlyiftraped()&#10;end&#10;"/>
            <Waypoint type="Node" x="33557" y="32528" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33549" y="32526" z="6" rangeX="1" rangeY="1" label="standl"/>
            <Waypoint type="Action" x="33549" y="32526" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation() then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;wait(1000)&#10;selfnoonlyiftraped()&#10;end"/>
            <Waypoint type="Action" x="33549" y="32526" z="6" rangeX="1" rangeY="1" script="wait(1000)&#10;if maround(10) &gt;= 1 then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;bothonlyiftraped()&#10;golure(5)&#10;end"/>
            <Waypoint type="Stand" x="33549" y="32526" z="6" rangeX="1" rangeY="1" label="runnext"/>
            <Waypoint type="Stand" x="33559" y="32529" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33559" y="32529" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation(0) then&#10;gotolabel(&quot;runnext&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Lure5&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Lure5">
            <Waypoint type="Stand" x="33558" y="32529" z="6" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Action" x="33558" y="32529" z="6" rangeX="1" rangeY="1" script="while not (cre.posx == 33558 and cre.posy == 32532) do&#10;&#10;wait(1000)&#10;end&#10;&#10;if maround(10) &gt; 1 then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;selfonlyiftraped()&#10;end&#10;"/>
            <Waypoint type="Stand" x="33563" y="32530" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33558" y="32529" z="6" rangeX="1" rangeY="1" label="standl"/>
            <Waypoint type="Action" x="33558" y="32529" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation() then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;wait(1000)&#10;selfnoonlyiftraped()&#10;end"/>
            <Waypoint type="Action" x="33558" y="32529" z="6" rangeX="1" rangeY="1" script="wait(1000)&#10;if maround(10) &gt;= 1 then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;bothonlyiftraped()&#10;golure(6)&#10;end"/>
            <Waypoint type="Stand" x="33558" y="32529" z="6" rangeX="1" rangeY="1" label="runnext"/>
            <Waypoint type="Node" x="33568" y="32529" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33575" y="32533" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33575" y="32533" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation(0) then&#10;gotolabel(&quot;runnext&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Lure6&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Lure6">
            <Waypoint type="Stand" x="33575" y="32533" z="6" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Action" x="33575" y="32533" z="6" rangeX="1" rangeY="1" script="while not (cre.posx == 33577 and cre.posy == 32531) do&#10;&#10;wait(1000)&#10;end&#10;&#10;if maround(10) &gt; 3 then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;selfonlyiftraped()&#10;end&#10;"/>
            <Waypoint type="Node" x="33572" y="32530" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33577" y="32537" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33575" y="32533" z="6" rangeX="1" rangeY="1" label="standl"/>
            <Waypoint type="Action" x="33575" y="32533" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation() then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;wait(1000)&#10;selfnoonlyiftraped()&#10;end"/>
            <Waypoint type="Action" x="33575" y="32533" z="6" rangeX="1" rangeY="1" script="wait(1000)&#10;if maround(10) &gt;= 1 then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;bothonlyiftraped()&#10;golure(7)&#10;end"/>
            <Waypoint type="Stand" x="33575" y="32533" z="6" rangeX="1" rangeY="1" label="runnext"/>
            <Waypoint type="Node" x="33562" y="32530" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33556" y="32528" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33548" y="32529" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33548" y="32529" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation(0) then&#10;gotolabel(&quot;runnext&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Lure7&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Lure7">
            <Waypoint type="Stand" x="33548" y="32529" z="6" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Action" x="33548" y="32529" z="6" rangeX="1" rangeY="1" script="while not (cre.posx == 33549 and cre.posy == 32533) do&#10;&#10;wait(1000)&#10;end&#10;&#10;if maround(10) &gt; 3 then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;selfonlyiftraped()&#10;end&#10;"/>
            <Waypoint type="Node" x="33541" y="32532" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33538" y="32530" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33548" y="32529" z="6" rangeX="1" rangeY="1" label="standl"/>
            <Waypoint type="Action" x="33548" y="32529" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation() then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;wait(1000)&#10;selfnoonlyiftraped()&#10;end"/>
            <Waypoint type="Action" x="33548" y="32529" z="6" rangeX="1" rangeY="1" script="wait(1000)&#10;if maround(10) &gt;= 1 then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;bothonlyiftraped()&#10;if golower then&#10;golure(8)&#10;else&#10;golure(1)&#10;end&#10;end"/>
            <Waypoint type="Stand" x="33548" y="32529" z="6" rangeX="1" rangeY="1" label="runnext"/>
            <Waypoint type="Stand" x="33548" y="32533" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33548" y="32534" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33552" y="32539" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33552" y="32539" z="7" rangeX="1" rangeY="1" script="--location&#10;if not islocation(1) then&#10;gotolabel(&quot;runnext&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Lure8&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Lure8">
            <Waypoint type="Stand" x="33552" y="32539" z="7" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Action" x="33552" y="32539" z="7" rangeX="1" rangeY="1" script="while not (cre.posx == 33547 and cre.posy == 32535) do&#10;&#10;wait(1000)&#10;end&#10;&#10;if maround(10) &gt; 3 then&#10;&#10;selfnoonlyiftraped()&#10;wait(1000)&#10;&#10;end&#10;&#10;"/>
            <Waypoint type="Action" x="33551" y="32538" z="7" rangeX="1" rangeY="1" script="selfonlyiftraped()"/>
            <Waypoint type="Stand" x="33552" y="32544" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33552" y="32544" z="7" rangeX="1" rangeY="1" script="if maround(10) &gt;= 3 then&#10;gotolabel(&quot;backfrom11lure&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33548" y="32546" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33549" y="32546" z="7" rangeX="1" rangeY="1" script="if maround(10) &gt;= 3 then&#10;gotolabel(&quot;backfrom1lure&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33548" y="32549" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33548" y="32549" z="7" rangeX="1" rangeY="1" label="backfrom1lure"/>
            <Waypoint type="Stand" x="33550" y="32546" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33550" y="32546" z="7" rangeX="1" rangeY="1" script="wait(250)"/>
            <Waypoint type="Stand" x="33552" y="32543" z="7" rangeX="1" rangeY="1" label="backfrom11lure"/>
            <Waypoint type="Action" x="33552" y="32543" z="7" rangeX="1" rangeY="1" script="wait(250)"/>
            <Waypoint type="Stand" x="33552" y="32540" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33552" y="32540" z="7" rangeX="1" rangeY="1" script="wait(100)"/>
            <Waypoint type="Stand" x="33552" y="32539" z="7" rangeX="1" rangeY="1" label="stand1lur"/>
            <Waypoint type="Action" x="33552" y="32539" z="7" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;stand1lur&quot;)&#10;else&#10;selfnoonlyiftraped()&#10;end&#10;"/>
            <Waypoint type="Action" x="33552" y="32539" z="7" rangeX="1" rangeY="1" script="selfonlyiftraped()"/>
            <Waypoint type="Stand" x="33558" y="32540" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33558" y="32540" z="7" rangeX="1" rangeY="1" script="if maround(10) &gt;= 3 then&#10;gotolabel(&quot;backfrom22lure&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33564" y="32543" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33564" y="32543" z="7" rangeX="1" rangeY="1" script="if maround(10) &gt;= 3 then&#10;gotolabel(&quot;backfrom2lure&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33566" y="32546" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33561" y="32542" z="7" rangeX="1" rangeY="1" label="backfrom2lure"/>
            <Waypoint type="Action" x="33561" y="32542" z="7" rangeX="1" rangeY="1" script="wait(200)"/>
            <Waypoint type="Stand" x="33558" y="32540" z="7" rangeX="1" rangeY="1" label="backfrom22lure"/>
            <Waypoint type="Action" x="33561" y="32542" z="7" rangeX="1" rangeY="1" script="wait(200)"/>
            <Waypoint type="Stand" x="33555" y="32540" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33555" y="32540" z="7" rangeX="1" rangeY="1" script="wait(200)"/>
            <Waypoint type="Stand" x="33552" y="32539" z="7" rangeX="1" rangeY="1" label="startpo2lure"/>
            <Waypoint type="Action" x="33552" y="32539" z="7" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;startpo2lure&quot;)&#10;else&#10;selfnoonlyiftraped()&#10;end&#10;"/>
            <Waypoint type="Action" x="33552" y="32539" z="7" rangeX="1" rangeY="1" script="wait(1000)&#10;if maround(10) &gt;= 1 then&#10;gotolabel(&quot;startpo2lure&quot;)&#10;else&#10;bothonlyiftraped()&#10;golure(9)&#10;end"/>
            <Waypoint type="Stand" x="33552" y="32539" z="7" rangeX="1" rangeY="1" label="runnext"/>
            <Waypoint type="Stand" x="33549" y="32536" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33548" y="32534" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33548" y="32529" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33548" y="32529" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation(1) then&#10;gotolabel(&quot;runnext&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Lure9&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Lure9">
            <Waypoint type="Stand" x="33548" y="32529" z="6" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Action" x="33548" y="32529" z="6" rangeX="1" rangeY="1" script="while not (cre.posx == 33549 and cre.posy == 32533) do&#10;&#10;wait(1000)&#10;end&#10;&#10;if maround(10) &gt; 3 then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;selfonlyiftraped()&#10;end&#10;"/>
            <Waypoint type="Stand" x="33548" y="32529" z="6" rangeX="1" rangeY="1" label="standl"/>
            <Waypoint type="Action" x="33548" y="32529" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation() then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;wait(1000)&#10;selfnoonlyiftraped()&#10;end"/>
            <Waypoint type="Action" x="33548" y="32529" z="6" rangeX="1" rangeY="1" script="wait(1000)&#10;if maround(10) &gt;= 1 then&#10;gotolabel(&quot;standl&quot;)&#10;else&#10;bothonlyiftraped()&#10;golure(1)&#10;end"/>
            <Waypoint type="Stand" x="33548" y="32529" z="6" rangeX="1" rangeY="1" label="runnext"/>
            <Waypoint type="Node" x="33536" y="32530" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33531" y="32529" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33531" y="32529" z="6" rangeX="1" rangeY="1" script="--location&#10;if not islocation(0) then&#10;gotolabel(&quot;runnext&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Lure1&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="leave">
            <Waypoint type="Stand" x="33523" y="32551" z="7" rangeX="1" rangeY="1" label="leave"/>
            <Waypoint type="Action" x="32320" y="31119" z="7" rangeX="1" rangeY="1" script="selfonlyiftraped()"/>
            <Waypoint type="Stand" x="33523" y="32547" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33523" y="32548" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33523" y="32551" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33523" y="32551" z="7" rangeX="1" rangeY="1" script="--location&#10;if not islocation(3) then&#10;gotolabel(&quot;leave&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33523" y="32551" z="7" rangeX="1" rangeY="1" label="leave7"/>
            <Waypoint type="Node" x="33513" y="32555" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33494" y="32568" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33494" y="32568" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33494" y="32568" z="7" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;leave7&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33494" y="32568" z="7" rangeX="1" rangeY="1" label="sailtosvar"/>
            <Waypoint type="Action" x="33494" y="32568" z="7" rangeX="1" rangeY="1" script="travel(&quot;thais&quot;)"/>
            <Waypoint type="Stand" x="32310" y="32210" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32310" y="32210" z="6" rangeX="1" rangeY="1" script="travel(&quot;svargrond&quot;)"/>
            <Waypoint type="Stand" x="32341" y="31109" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32341" y="31109" z="6" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;sailtosvar&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32341" y="31110" z="6" rangeX="1" rangeY="1" label="gotodepot"/>
            <Waypoint type="Stand" x="32341" y="31112" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32322" y="31117" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32310" y="31126" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32292" y="31133" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32277" y="31140" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32273" y="31140" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32273" y="31140" z="7" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gotodepot&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Refill&quot;)&#10;end"/>
        </WaypointSection>
    </Cavebot>
    <Looting enabled="yes">
        <Options>
            <Option range="10"/>
            <Option moveItemsQuickly="yes"/>
            <Option eatFoodFromCorpse="yes"/>
            <Option openNextBP="yes"/>
            <Option openBPsAtLogin="no"/>
            <Option valuableBodies="3000"/>
            <Option ultraValuableBodies="50000"/>
            <Option alertOnValuableBodies="no"/>
            <Option openValuableBodiesOnly="no"/>
            <Option openUltraValuableBodiesImmediately="no"/>
            <Option policy="Loot After Melee Kill"/>
            <LootingDestinations>
                <lootingDestination name="lootbp" destination="blue backpack"/>
                <lootingDestination name="goldbp" destination="golden backpack"/>
                <lootingDestination name="mainbp" destination="backpack of holding"/>
                <lootingDestination name="supplybp" destination="zaoan chess box"/>
                <lootingDestination name="maindpbp" destination="brown backpack"/>
                <lootingDestination name="stackdpbp" destination="beach backpack"/>
                <lootingDestination name="raredpbp" destination="purple backpack"/>
            </LootingDestinations>
        </Options>
        <LootingProfile name="LootList" isCurrentProfile="yes">
            <LootItem name="platinum coin" id="3035" sellPrice="100" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="gold coin" id="3031" sellPrice="1" weight="0.10" destinationName="goldbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="violet crystal shard" id="16120" sellPrice="1500" weight="0.20" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="red crystal fragment" id="16126" sellPrice="800" weight="0.15" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="brown crystal splinter" id="16123" sellPrice="400" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="boots of haste" id="3079" sellPrice="30000" weight="7.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="assassin dagger" id="7404" sellPrice="20000" weight="17.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="nightmare blade" id="7418" sellPrice="35000" weight="46.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="terra legs" id="812" sellPrice="11000" weight="19.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="terra boots" id="813" sellPrice="2500" weight="7.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="sai" id="10389" sellPrice="16500" weight="50.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="gold ingot" id="9058" sellPrice="5000" weight="18.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="haunted blade" id="7407" sellPrice="8000" weight="31.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="iron ore" id="5880" sellPrice="500" weight="2.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="frazzle skin" id="20199" sellPrice="400" weight="1.90" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="diamond sceptre" id="7387" sellPrice="3000" weight="15.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="silencer resonating chamber" id="20201" sellPrice="600" weight="3.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="fish fin" id="5895" sellPrice="150" weight="1.20" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="frazzle tongue" id="20198" sellPrice="700" weight="6.80" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="silencer claws" id="20200" sellPrice="390" weight="4.20" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="titan axe" id="7413" sellPrice="4000" weight="81.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="glorious axe" id="7454" sellPrice="3000" weight="95.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="great health potion" id="239" sellPrice="0" weight="3.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="great mana potion" id="238" sellPrice="0" weight="3.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="cluster of solace" id="20062" sellPrice="0" weight="2.80" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="royal helmet" id="3392" sellPrice="30000" weight="48.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
        </LootingProfile>
    </Looting>
    <Supplies>
        <Options>
            <Option defaultBackpack=""/>
            <Option extraCashMin="1000" extraCashMax="2500"/>
            <Option autoSwitchProfiles="no"/>
        </Options>
        <SupplyProfile name="SupplyList" vocation="Knight, Paladin, Sorcerer, Druid" level="0" isCurrentProfile="yes">
            <SupplyItem name="mana potion" id="268" buyPrice="50" weight="2.70" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="ultimate health potion" id="7643" buyPrice="310" weight="3.10" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="great health potion" id="239" buyPrice="190" weight="3.10" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
        </SupplyProfile>
    </Supplies>
    <Targeting enabled="no" allowDiagonalMovement="no" autoSwitchProfiles="no" nonPvPMode="no">
        <TargetingProfile name="TargetList" vocation="Knight, Paladin, Sorcerer, Druid" level="0" targetMustBeShootable="no" targetMustBeReachable="yes" isCurrentProfile="yes">
            <Priorities>
                <Priority health="0"/>
                <Priority proximity="100"/>
                <Priority danger="21"/>
                <Priority random="0"/>
                <Priority lure="0"/>
                <Priority stick="2"/>
            </Priorities>
            <Creatures>
                <Creature name="Category A" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="2" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Silencer" amount="Any" category="A" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Frazzlemaw" amount="Any" category="A" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Shock Head" amount="Any" category="A" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
            </Creatures>
        </TargetingProfile>
    </Targeting>
    <OtherBots>
        <HealingPaths/>
        <TargetingPaths/>
    </OtherBots>
</WindbotSettings>
