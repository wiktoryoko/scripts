<?xml version="1.0" encoding="UTF-8"?>
<WindbotSettings>
    <Healer>
        <SpellHealer enabled="yes">
            <HealRule name="Exura Gran San" spell="Salvation" condition="Health Percent below" conditionMin="70" conditionMax="70" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="100" spamMax="200" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="Exura San" spell="Divine Healing" condition="Health Percent below" conditionMin="80" conditionMax="80" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="100" spamMax="200" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="Exura Gran" spell="Intense Healing" condition="Health Percent below" conditionMin="90" conditionMax="90" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="100" spamMax="200" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="Exura" spell="Light Healing" condition="Health Percent below" conditionMin="95" conditionMax="95" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="no" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </SpellHealer>
        <PotionHealer enabled="yes">
            <HealRule name="GSP" spell="Great Spirit Potion" condition="Health Percent below" conditionMin="70" conditionMax="70" extraCondition="No Extra Condition" extraConditionMin="60" extraConditionMax="60" enabled="yes" spamMin="200" spamMax="300" triggerKey="&lt;no key&gt;" dontOverrideActions="yes"/>
            <HealRule name="SMP" spell="Strong Mana Potion" condition="Mana Percent below" conditionMin="85" conditionMax="85" extraCondition="No Extra Condition" extraConditionMin="50" extraConditionMax="50" enabled="yes" spamMin="200" spamMax="300" triggerKey="&lt;no key&gt;" dontOverrideActions="yes"/>
        </PotionHealer>
        <ConditionHealer enabled="yes">
            <HealRule name="NewHealRule2" spell="Salvation" condition="Paralyzed" conditionMin="0" conditionMax="0" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="NewHealRule1" spell="Haste" condition="Not Hasted" conditionMin="0" conditionMax="0" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </ConditionHealer>
        <ManaTrainer manaTrainCondition="Mana Percent above" manaTrainMin="87" manaTrainMax="93" enabled="no"/>
    </Healer>
    <Scripter>
        <HotkeyScripts/>
        <PersistentScripts>
            <PersistentScript name="variables" script="init start&#10;keepring = false&#10;running = false&#10;blockshooting = false&#10;zabkikolomnie = false&#10;cancheckfb = false&#10;keepstoneshower = false&#10;changetoshield = false&#10;ebutton = false&#10;init end&#10;auto(500)&#10;createnewoffer = getuseroption('createnewoffer')&#10;sellitemsonmarket = getuseroption('Sell Items On Market')&#10;keephaste = getuseroption('keephaste')&#10;takeammofromdp = getuseroption('takeammofromdp')&#10;usealertonspawn = getuseroption('usealertonspawn')&#10;traymessages = getuseroption('traymessages')&#10;smartmp = getuseroption('smartmp')&#10;pvpe = getuseroption('pvpe')&#10;useswiftfoot = getuseroption('useutamotemposan')&#10;mainbp = getuseroption('mainbp')&#10;ammobp = getuseroption('ammobp')&#10;potionbp = getuseroption('potionbp')&#10;lootbp = getuseroption('lootbp')&#10;maindpbp = getuseroption('maindpbp')&#10;stackdpbp = getuseroption('stackdpbp')&#10;raredpbp = getuseroption('raredpbp')&#10;ringdpbp = getuseroption('ringdpbp')&#10;ammodpbp = getuseroption('ammodpbp')&#10;&#10;&#10;&#10;&#10;maxsmp = getuseroption('maxsmp')&#10;minsmp = getuseroption('minsmp')&#10;maxgsp = getuseroption('maxgsp')&#10;mingsp = getuseroption('mingsp')&#10;maxfb = getuseroption('maxfb')&#10;minfb = getuseroption('minfb')&#10;ammotype = getuseroption('ammotype')&#10;maxammo = getuseroption('maxammo')&#10;minammo = getuseroption('minammo')&#10;mincap = getuseroption('mincap')&#10;useshieldandweapon = getuseroption('useshieldandweapon')&#10;anniweapontype = getuseroption('anniweapontype')&#10;shieldtype = getuseroption('shieldtype')&#10;weapontype = getuseroption('weapontype')&#10;usefwb = getuseroption('usefwb')&#10;normalbootsname = getuseroption('normalbootsname')&#10;takera = getuseroption('takera')&#10;atype = getuseroption('atype')&#10;rabp = getuseroption('rabp')&#10;ringamuletdpbp = getuseroption('ringamuletdpbp')&#10;aamount = getuseroption('aamount')&#10;&#10;stopbotifnotra = getuseroption('stopbotifnotra')&#10;" enabled="yes"/>
            <PersistentScript name="functions" script="function changesmp(mppcmany)&#10;if smartmp then&#10;--setsetting('PotionHealer/Rules/SMP/ConditionValue', mppcmany..' to '..mppcmany..'%')&#10;setsetting('PotionHealer/Rules/SMP/ConditionValue', '90 to 90%')&#10;else&#10;setsetting('PotionHealer/Rules/SMP/ConditionValue', '90 to 90%')&#10;end&#10;&#10;end&#10;&#10;function ebomb()&#10;wait(1000)&#10;local epx = 33097&#10;local epy = 31574&#10;::bombaznowu::&#10;local tile = gettile(epx, epy, $posz)&#10;local titemcount = tile.itemcount&#10;local jestbomba = false&#10;for i=1, tile.itemcount do&#10;&#9;if tile.item[tile.itemcount].id == 2122 or tile.item[i].id == 2135 then&#10;jestbomba = true&#10;end&#10;end&#10;&#10;&#10;if not jestbomba and $hppc &gt; 70 then&#10;setsetting('PotionHealer/Enabled', 'no')&#10;useitemon(itemid('energy bomb rune'),0, ground(epx,epy,$posz))&#10;goto bombaznowu&#10;end&#10;setsetting('PotionHealer/Enabled', 'yes')&#10;&#10;end&#10;&#10;function refilfbomb(x,y)&#10;local epx = x&#10;local epy = y&#10;::fbombaznowu::&#10;jestbomba = false&#10;waitping()&#10;&#10;if topitem(epx, epy, $posz).id == 2118 or topitem(epx, epy, $posz).id == 2131 then&#10;&#10;jestbomba = true&#10;&#10;end&#10;&#10;&#10;if not jestbomba  then&#10;&#10;if $hppc &lt; 80 or $mppc &lt; 20 then&#10;goto fbombaznowu&#10;useoncreature(&quot;strong mana potion&quot;,$self)&#10;else&#10;fbonpos(epx,epy)&#10;goto fbombaznowu&#10;end&#10;&#10;else&#10;&#10;setsetting('PotionHealer/Rules/SMP/Enabled', 'yes')&#10;end&#10;&#10;&#10;end&#10;&#10;function fbonpos(x,y)&#10;&#10;useitemon(itemid('fire bomb rune'), 0, ground(x, y, $posz))&#10;&#10;end&#10;&#10;function fbcount()&#10;local licznikbomb = 0&#10;for i = 1, 8 do&#10;&#9;for zmienna1 = -1,1 do&#10;&#9;&#9;for zmienna2 = -1,1 do&#10;if topitem(fbombpos[i].x+zmienna1, fbombpos[i].y+zmienna2, $posz).id ~= 2118 and topitem(fbombpos[i].x+zmienna1, fbombpos[i].y+zmienna2, $posz).id ~= 2131  then&#10;licznikbomb = licznikbomb + 1&#10;end&#10;&#9;&#9;end&#10;&#9;end&#10;end&#10;return licznikbomb&#10;end&#10;&#10;function shootfb(ii,useonself)&#10;if $posx == fbombpos[ii].x and $posy == fbombpos[ii].y then&#10;&#10;for b = 1,3 do&#10;useoncreature(itemid('fire bomb rune'),$self)&#10;end&#10;else&#10;for b = 1,3 do&#10;useitemon(itemid('fire bomb rune'), 0, ground(fbombpos[ii].x, fbombpos[ii].y, $posz))&#10;end&#10;end&#10;end&#10;&#10;&#10;&#10;&#10;function checkfb()&#10;local needprioritybomb = false&#10;local needusebomb = false&#10;local useonself = false&#10;local bombtoshoot = 0&#10;if $posx &gt; 33190 and $posx &lt; 33200 and $posy &gt; 31680 and $posy &lt; 31705 then&#10;for i = 1, 8 do&#10;if not needprioritybomb then&#10;local useonself = false&#10;&#9;for zmienna1 = -1,1 do&#10;&#9;&#9;for zmienna2 = -1,1 do&#10;&#9;&#9;&#9;if $posx == fbombpos[i].x and $posy == fbombpos[i].y then&#10;&#9;&#9;&#9;if topitem(fbombpos[i].x, fbombpos[i].y, $posz).id ~= 2118 and topitem(fbombpos[i].x, fbombpos[i].y, $posz).id ~= 2131 then&#10;&#9;&#9;&#9;needprioritybomb = true&#10;&#9;&#9;&#9;bombtoshoot = i&#10;&#9;&#9;&#9;useonself = true&#10;&#9;&#9;&#9;needusebomb = true&#10;&#9;&#9;&#9;end&#9;&#9;&#9;&#10;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;if not needprioritybomb then&#10;&#9;&#9;&#9;&#9;if topitem(fbombpos[i].x+zmienna1, fbombpos[i].y+zmienna2, $posz).id ~= 2118 and topitem(fbombpos[i].x+zmienna1, fbombpos[i].y+zmienna2, $posz).id ~= 2131 then&#10;&#9;&#9;&#9;&#9;useonself = false&#10;&#9;&#9;&#9;&#9;bombtoshoot = i&#10;&#9;&#9;&#9;needusebomb = true&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;&#9;end&#10;end&#10;if needusebomb then&#10;shootfb(bombtoshoot,useonself)&#10;end&#10;end&#10;needprioritybomb = false&#10;needusebomb = false&#10;useonself = false&#10;bombtoshoot = 0&#10;&#10;end&#10;&#10;&#10;&#10;&#10;function swaphaste()&#10;if getsetting('ConditionHealer/Rules/NewHealRule1/Enabled') then&#10;print(&quot;haste enabled&quot;)&#10;setsetting('ConditionHealer/Rules/NewHealRule1/Enabled', 'yes')&#10;setsetting('ConditionHealer/Rules/NewHealRule2/Enabled', 'no')&#10;else&#10;print(&quot;haste disabled&quot;)&#10;setsetting('ConditionHealer/Rules/NewHealRule1/Enabled', 'no')&#10;setsetting('ConditionHealer/Rules/NewHealRule2/Enabled', 'yes')&#10;end&#10;&#10;end&#10;function depot()&#10;setsetting('Looting/OpenNextBP', 'no')&#10;closewindows()&#10;wait(2000)&#10;while windowcount() &lt; 2 do&#10;closewindows()&#10;wait(500,1200)&#10;openitem(mainbp, &quot;back&quot;, true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;openitem(lootbp,mainbp,true)&#10;wait(500,1200)&#10;resizewindows()&#10;end&#10;&#10;&#10;while windowcount(&quot;Depot Chest&quot;) == 0 do&#10;&#9;opendepot()&#10;&#9;wait(500)&#10;end&#10;&#10;&#10;while windowcount(lootbp) == 0 do&#10;openitem(lootbp,mainbp,true)&#10;wait(300)&#10;end&#10;&#10;&#10;while windowcount(maindpbp) == 0 do &#10;openitem(maindpbp, &quot;Depot Chest&quot;) &#10;wait(300,500) &#10;resizewindows(1000,maindpbp) &#10;wait(300,500) &#10;end &#10;&#10;&#10;&#10;setsetting('Looting/OpenNextBP', 'no')&#10;waitping()&#10;&#10;&#10;local CONFIG = {&#10;    LOOT_BACKPACK = lootbp,&#10;    MAIN_DP_BACKPACK = maindpbp,&#10;    STACKABLE_BACKPACK = stackdpbp,&#10;    NOT_STACKABLE_BACKPACK = raredpbp,&#10;}&#10; &#10;clearlastonto()&#10; &#10;while (true) do&#10;&#9;foreach lootingitem ITEM_ENTRY do&#10;if ITEM_ENTRY.id == 3035 then&#10;else&#10;&#9;&#9;while (itemcount(ITEM_ENTRY.id, CONFIG.LOOT_BACKPACK) &gt; 0) do&#10;&#10;&#9;&#9;&#9;if (itemproperty(ITEM_ENTRY.id, ITEM_STACKABLE)) then&#10;&#9;&#9;&#9;&#9;moveitemsonto(ITEM_ENTRY.id, CONFIG.STACKABLE_BACKPACK, 1, CONFIG.MAIN_DP_BACKPACK, CONFIG.LOOT_BACKPACK) wait(300,400)&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;moveitemsonto(ITEM_ENTRY.id, CONFIG.NOT_STACKABLE_BACKPACK, $lastonto, CONFIG.MAIN_DP_BACKPACK, CONFIG.LOOT_BACKPACK) wait(300,400)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;end&#10;end&#10;&#10; &#10;    if (itemcount(CONFIG.LOOT_BACKPACK, CONFIG.LOOT_BACKPACK) &gt; 0) then&#10;        openitem(CONFIG.LOOT_BACKPACK, CONFIG.LOOT_BACKPACK, false) waitcontainer(CONFIG.LOOT_BACKPACK, false)&#10;    else&#10;        break&#10;    end&#10; &#10;    wait(100)&#10;end&#10;&#10;--if refills &gt;= roundstosell then&#10;--refills = 0&#10;--end&#10;&#10;::takering::&#10;closewindows()&#10;wait(2000)&#10;while windowcount() &lt; 1 do&#10;closewindows()&#10;wait(500,1200)&#10;openitem(mainbp, &quot;back&quot;, true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;end&#10;&#10;while windowcount(&quot;Depot Chest&quot;) == 0 do&#10;&#9;opendepot()&#10;&#9;wait(500)&#10;end&#10;&#10;while windowcount(ringdpbp) == 0 do &#10;openitem(ringdpbp, &quot;Depot Chest&quot;) &#10;wait(300,500) &#10;resizewindows(1000,ringdpbp) &#10;wait(300,500) &#10;end &#10;if itemcount(&quot;dwarven ring&quot;,mainbp) &lt; 2 then&#10;if itemcount(&quot;dwarven ring&quot;,ringdpbp) &gt; 0 then&#10;moveitems(&quot;dwarven ring&quot;,mainbp,ringdpbp,1)&#10;moveitems(&quot;dwarven ring&quot;,mainbp,ringdpbp,1)&#10;end&#10;end&#10;&#10;if itemcount(&quot;dwarven ring&quot;,mainbp) &lt; 2 then&#10;goto takering&#10;end&#10;&#10;-- take ammo&#10;&#10;if takeammofromdp then&#10;closewindows()&#10;wait(2000)&#10;while windowcount() &lt; 2 do&#10;closewindows()&#10;wait(500,1200)&#10;openitem(mainbp, &quot;back&quot;, true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;openitem(ammobp,mainbp, true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;end&#10;while windowcount(&quot;Depot Chest&quot;) == 0 do&#10;&#9;opendepot()&#10;&#9;wait(500)&#10;end&#10;&#10;while windowcount(ammodpbp) == 0 do &#10;openitem(ammodpbp, &quot;Depot Chest&quot;) &#10;wait(300,500) &#10;resizewindows(1000,ammodpbp) &#10;wait(300,500) &#10;end &#10;::tryammoagain::&#10;if itemcount(ammotype,ammobp) &lt; maxammo and (itemcount(ammotype,ammodpbp) &gt; 1 or itemcount(ammodpbp,ammodpbp) &gt; 0) then&#10;if itemcount(ammotype,ammodpbp) &lt; 1 and itemcount(ammodpbp,ammodpbp) &gt; 0 then&#10;openitem(ammodpbp, ammodpbp, false)&#10;waitping()&#10;end&#10;if itemcount(ammotype,ammodpbp) &gt; 1 then&#10;moveitems(ammotype, ammobp, ammodpbp,100)&#10;waitping()&#10;end&#10;&#10;goto tryammoagain&#10;&#10;end&#10;end&#10;closewindows()&#10;wait(1000)&#10;if takera then&#10;---------takera&#10;closewindows()&#10;while windowcount() &lt; 2 do&#10;closewindows()&#10;wait(500,1200)&#10;openitem(mainbp, &quot;back&quot;, true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;openitem(rabp,mainbp, true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;end&#10;&#10;while windowcount(&quot;Depot Chest&quot;) == 0 do&#10;&#9;opendepot()&#10;&#9;wait(500)&#10;end&#10;&#10;while windowcount(ringamuletdpbp) == 0 do &#10;openitem(ringamuletdpbp, &quot;Depot Chest&quot;) &#10;wait(300,500) &#10;resizewindows(300,ringamuletdpbp) &#10;wait(300,500) &#10;end &#10;--startrings&#10;&#10;&#10;::takesamulets::&#10;if atype ~= &quot;No Amulet&quot; then&#10;if itemcount(atype,rabp) &lt; aamount then&#10;if itemcount(atype,ringamuletdpbp) &gt;= 1 then&#10;moveitems(atype,rabp,ringamuletdpbp,(aamount - itemcount(atype,rabp)))&#10;goto takesamulets&#10;else&#10;if itemcount(ringamuletdpbp,ringamuletdpbp) &gt;= 1 then&#10;openitem(ringamuletdpbp,ringamuletdpbp,false)&#10;goto takesamulets&#10;end&#10;end&#10;end&#10;end&#10;&#10;&#10;&#10;&#10;&#10;&#10;----------/takera&#10;end&#10;&#10;&#10;&#10;--[[&#10;if refills == 0 then&#10;if sellitemsonmarket then&#10;while not $marketopen do&#10;wait(600)&#10;openmarket()&#10;wait(1600)&#10;end&#10;&#10;&#10;for _,market in ipairs(itemsonmarket) do&#10;if market.item then&#10;sellitemsmarket( market.itemname,  market.price ,  9999 ,  createnewoffer ,  true ) &#10;end&#10;end&#10;]]--&#10;&#10;&#10;--waitping()&#10;--closemarket()&#10;--end&#10;--end&#10;end&#10;&#10;&#10;&#10;&#10;function withdrawmoney()&#10;closewindows()&#10;wait(2000)&#10;while windowcount() &lt; 3 do&#10;closewindows()&#10;wait(500,1200)&#10;openitem(mainbp, &quot;back&quot;, true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;openitem(ammobp,mainbp,true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;openitem(potionbp,mainbp,true)&#10;wait(500,1200)&#10;resizewindows()&#10;end&#10;&#10;Mana = math.positive(maxsmp - itemcount(&quot;strong mana potion&quot;)) * 80&#10;GSP = math.positive(maxgsp - itemcount(&quot;great spirit potion&quot;)) * 190 &#10;FBOMB = math.positive(maxfb - itemcount(&quot;fire bomb rune&quot;)) * 117&#10;EBOMB = math.positive(3 - itemcount(&quot;energy bomb rune&quot;)) * 165&#10;AMMO = math.positive(maxammo - itemcount(ammotype)) * 20&#10;Total = math.ceil(Mana + GSP + FBOMB + EBOMB + AMMO, 10000) + 10000&#10;&#10;&#10;&#10;&#9;npctalk(&quot;hi&quot;,&quot;deposit all&quot;,&quot;yes&quot;, &quot;withdraw &quot;..Total, &quot;yes&quot;, &quot;balance&quot;)&#10;&#10;end&#10;&#10;&#10;function suppshop()&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(potionbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end&#10;&#10;sellflasks()&#10;&#10;--GSP&#10;amount2 = maxgsp - itemcount(&quot;great spirit potion&quot;)&#10;while amount2 &gt; 0 and islocation(1) do &#10;&#9;buyitems(&quot;great spirit potion&quot;, amount2) &#10;&#9;waitping(2,3)&#10;&#10;&#9;&#9;moveitems(&quot;great spirit potion&quot;,potionbp, mainbp) &#10;&#10;&#9;waitping(2,3)&#10;&#9;amount2 = amount2-100&#10;end&#10;&#10;--MANAS&#10;amount1 = tonumber(maxsmp) - itemcount(&quot;strong mana potion&quot;)&#10;while amount1 &gt; 0 and islocation(1) do &#10;&#9;buyitems(&quot;strong mana potion&quot;, amount1) &#10;&#9;waitping(2,3)&#10;&#9;&#9;moveitems(&quot;strong mana potion&quot;,potionbp, mainbp) &#10;&#10;&#9;waitping(2,3)&#10;&#9;amount1 = amount1-100&#10;end&#10;end&#10;&#10;&#10;function ammoshop()&#10;&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(ammobp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end&#10;&#10;::opentradeagainammo::&#10;if not ischannel('NPCs') then&#10;say('hi')&#10;wait(1500)&#10;else&#10;npcsay('hi')&#10;wait(300)&#10;end&#10;&#10;npcsay(&quot;trade&quot;)&#10;wait(1000)&#10;&#10;if not $tradeopen then&#10;goto opentradeagainammo&#10;end&#10;&#10;amount1 = tonumber(maxammo) - itemcount(ammotype)&#10;while amount1 &gt; 0 and islocation(1) do &#10;&#9;buyitems(ammotype, amount1) &#10;&#9;waitping(2,3)&#10;&#9;&#9;moveitems(ammotype,ammobp, mainbp) &#10;&#9;waitping(2,3)&#10;&#9;amount1 = amount1-100&#10;end&#10;end&#10;&#10;function buyrune(runetype,max)&#10;&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(ammobp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end&#10;&#10;::opentradeagainammo::&#10;if not ischannel('NPCs') then&#10;say('hi')&#10;wait(1500)&#10;else&#10;npcsay('hi')&#10;wait(300)&#10;end&#10;&#10;npcsay(&quot;trade&quot;)&#10;wait(1000)&#10;&#10;if not $tradeopen then&#10;goto opentradeagainammo&#10;end&#10;&#10;amount6 = tonumber(max) - itemcount(runetype)&#10;while amount6 &gt; 0 and islocation(1) do &#10;&#9;buyitems(runetype, amount6) &#10;&#9;waitping(2,3)&#10;&#9;&#9;moveitems(runetype,ammobp, mainbp) &#10;&#9;waitping(2,3)&#10;&#9;amount6 = amount6-100&#10;end&#10;end&#10;&#10;function bpsforhunt()&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 4 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(ammobp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(potionbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(lootbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end&#10;if takera then&#10;while windowcount() &lt; 5 do&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(rabp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end&#10;end&#10;end" enabled="yes"/>
            <PersistentScript name="scripts" script="init start&#10;aolpokazany = false&#10;idamuletuprzed = 0&#10;init end&#10;auto(100)&#10;&#10;if running then&#10;&#10;&#10;&#10;if idamuletuprzed == 0 then&#10;if $neck.id ~= 0 then&#10;idamuletuprzed = $neck.id&#10;end&#10;end&#10;&#10;&#10;&#10;if atype ~= &quot;No Amulet&quot; then&#10;if $neck.id ~= itemid(&quot;amulet of loss&quot;) then&#10;if $neck.id ~= itemid(atype) then&#10;if itemcount(atype) &gt; 0 then&#10;equipitem(atype,'neck')&#10;waitping()&#10;end&#10;end&#10;&#10;else&#10;if not aolpokazany then&#10;aolpokazany = true&#10;messagebox('HEY!','You wear amulet of loss, and you want to equip '..atype..'. I wont let you do that!')&#10;&#10;end&#10;end&#10;end&#10;&#10;end&#10;if not running then&#10;if idamuletuprzed ~= 0 then&#10;equipitem(idamuletuprzed,'neck')&#10;end&#10;end&#10;if maround(1,&quot;Deathspawn&quot;) &gt; 0 then&#10;zabkikolomnie = true&#10;if cancast(&quot;exevo mas san&quot;) then&#10;cast(&quot;exevo mas san&quot;)&#10;end&#10;else&#10;zabkikolomnie = false&#10;end&#10;&#10;if $attacked.hppc &lt; 2 or $attacked.id == 0 then&#10;setsetting('Cavebot/SpecialAreas/SArea/Policy', 'None')&#10;setsetting('Cavebot/SpecialAreas/SArea1/Policy', 'None')&#10;setsetting('Cavebot/SpecialAreas/SArea2/Policy', 'None')&#10;setsetting('Cavebot/SpecialAreas/SArea3/Policy', 'None')&#10;else&#10;setsetting('Cavebot/SpecialAreas/SArea/Policy', 'Targeting')&#10;setsetting('Cavebot/SpecialAreas/SArea1/Policy', 'Targeting')&#10;setsetting('Cavebot/SpecialAreas/SArea2/Policy', 'Targeting')&#10;setsetting('Cavebot/SpecialAreas/SArea3/Policy', 'Targeting')&#10;end&#10;&#10;&#10;if (($standtime &gt; 5000 and maround(1) &gt; 2) or maround(1) &gt; 3) and ($wptsection == &quot;Refill&quot; or $wptsection == &quot;Leave&quot;) then&#10;if cancast(&quot;exevo mas san&quot;) then&#10;cast(&quot;exevo mas san&quot;)&#10;end&#10;end&#10;&#10;&#10;&#10;if keepring then&#10;if $finger.id ~= 3099 then&#10;equipitem(3099,'finger')&#10;end&#10;else&#10;if $finger.id == 3099 then&#10;moveitems(3099,mainbp,'finger')&#10;end&#10;end&#10;&#10;&#10;if not running then&#10;&#10;if $attacked.name == &quot;Annihilon&quot; and not zabkikolomnie and fbcount() &lt; 1 then&#10;if cancast(&quot;exori san&quot;) then&#10;cast(&quot;exori san&quot;)&#10;end&#10;end&#10;&#10;&#10;&#10;&#10;&#10;&#10;if maround(10,&quot;Annihilon&quot;)&gt; 0 and not ebutton then&#10;if  $attacked.name ~= &quot;Annihilon&quot; then&#10;attack('Annihilon')&#10;end&#10;if $wptsection ~= &quot;Anni&quot; and $wptsection ~= &quot;Leave&quot; then&#10;gotolabel(&quot;a&quot;,&quot;Anni&quot;)&#10;end&#10;end&#10;&#10;if $attacked.id == 0 and maround(10,&quot;Annihilon&quot;) &lt; 1 and $wptsection == &quot;Anni&quot; and not ebutton then&#10;gotolabel(&quot;start&quot;,&quot;Hunt&quot;)&#10;setsetting('Cavebot/Enabled', 'yes')&#10;end&#10;&#10;if $standtime &gt; 10000 and $lootbodies == 0 and maround(2,&quot;Deathspawn&quot;) &gt; 2 and getsetting('Cavebot/Enabled') == &quot;no&quot; and ($wptsection == &quot;Anni&quot; or $wptsection == &quot;Hunt&quot;) and not ebutton then&#10;gotolabel(&quot;start&quot;,&quot;Hunt&quot;)&#10;setsetting('Cavebot/Enabled', 'yes')&#10;end&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;end&#10;&#10;" enabled="yes"/>
            <PersistentScript name="Healing" script="auto(50)&#10;if running then&#10;&#10;if $hppc &lt; 80 then&#10;--setsetting('PotionHealer/Rules/SMP/Enabled', 'no')&#10;setsetting('ConditionHealer/Rules/NewHealRule1/Enabled', 'no')&#10;else&#10;--setsetting('PotionHealer/Rules/SMP/Enabled', 'yes')&#10;setsetting('ConditionHealer/Rules/NewHealRule1/Enabled', 'yes')&#10;end&#10;&#10;if $hppc &lt;= 95 and $hppc &gt; 87 and cancast(&quot;exura gran&quot;) then&#10;cast(&quot;exura gran&quot;)&#10;elseif $hppc &lt;= 87 and $hppc &gt; 80 and cancast(&quot;exura san&quot;) then&#10;cast(&quot;exura san&quot;)&#10;elseif $hppc &lt;= 80 and cancast(&quot;exura gran san&quot;) then&#10;cast(&quot;exura gran san&quot;)&#10;end&#10;end" enabled="yes"/>
            <PersistentScript name="FBONDEATH" script="auto(1000)&#10;&#10;for i = -7,7 do&#10;for j = -5,5 do&#10;&#10;&#9; if topitem($posx+i, $posy+j, $posz).id == 7893 then&#10;&#10;&#10;if $posx &lt; $posx+i then&#10;if $posy &gt; $posy+j then&#10;--fbomb na sw&#10;fbonpos(($posx+i)-1,($posy+j)+1)&#10;wait(60000)&#10;elseif $posy &lt; $posy+j then&#10;--fbomb na nw&#10;fbonpos(($posx+i)-1,($posy+j)-1)&#10;wait(60000)&#10;else&#10;--fbomb na w&#10;fbonpos(($posx+i)-1,($posy+j))&#10;wait(60000)&#10;end&#10;elseif $posx &gt; $posx+i then&#10;if $posy &gt; $posy+j then&#10;fbonpos(($posx+i)+1,($posy+j)+1)&#10;wait(60000)&#10;--fbomb na se&#10;elseif $posy &lt; $posy+j then&#10;fbonpos(($posx+i)+1,($posy+j)-1)&#10;wait(60000)&#10;--fbomb na ne&#10;else&#10;fbonpos(($posx+i)+1,($posy+j))&#10;wait(60000)&#10;--fbomb na e&#10;end&#10;else&#10;if $posy &gt; $posy+j then&#10;--fbomb na s&#10;fbonpos(($posx+i),($posy+j)+1)&#10;wait(60000)&#10;elseif $posy &lt; $posy+j then&#10;--fbomb na n&#10;fbonpos(($posx+i),($posy+j)-1)&#10;wait(60000)&#10;else&#10;--fbomb na srodek&#10;fbonpos(($posx+i),($posy+j))&#10;&#10;end&#10;end&#10;&#10;&#10;&#10;&#10;&#10;end&#10;end&#10;end" enabled="no"/>
            <PersistentScript name="Runnning" script="init start&#10;local lx1 = 33197&#10;local ly1 = 31695&#10;movingposition = false&#10;&#10;function startrun()&#10;setsetting('Cavebot/Enabled', 'yes')&#10;movingposition = true&#10;end&#10;&#10;init end&#10;&#10;auto(100)&#10;anni = getcreature('Annihilon')&#10;if not movingposition and not ebutton then&#10;if $wptsection == &quot;Anni&quot; then&#10;if anni.hppc &gt; 1 then&#10;if maround(10,&quot;Annihilon&quot;) &gt; 0 then&#10;if anni.dist &lt;= 3 then&#10;&#10;if $posx &lt; lx1 then-------------&#10;if $posy &lt; ly1 then--xxxxxxxxxxxxxxxxx&#10;if anni.dir == &quot;w&quot; then&#10;gotolabel(&quot;d&quot;)&#10;startrun()&#10;else&#10;gotolabel(&quot;b&quot;)&#10;startrun()&#10;end &#10;else--xxxxxxxxxxxxxxxxx&#10;if anni.dir == &quot;w&quot; then&#10;gotolabel(&quot;a&quot;)&#10;startrun()&#10;else&#10;gotolabel(&quot;c&quot;)&#10;startrun()&#10;end &#10;end--xxxxxxxxxxxxxxxxx&#10;else-----------------------------&#10;if $posy &lt; ly1 then--xxxxxxxxxxxxxxxxx&#10;if anni.dir == &quot;n&quot; then&#10;gotolabel(&quot;a&quot;)&#10;startrun()&#10;else&#10;gotolabel(&quot;c&quot;)&#10;startrun()&#10;end &#10;else--xxxxxxxxxxxxxxxxx&#10;if anni.dir == &quot;e&quot; then&#10;gotolabel(&quot;b&quot;)&#10;startrun()&#10;else&#10;gotolabel(&quot;d&quot;)&#10;startrun()&#10;end &#10;end--xxxxxxxxxxxxxxxxx&#10;end------------------------------&#10;end&#10;end&#10;else&#10;setsetting('Cavebot/SpecialAreas/SArea/Policy', 'None')&#10;setsetting('Cavebot/SpecialAreas/SArea1/Policy', 'None')&#10;setsetting('Cavebot/SpecialAreas/SArea2/Policy', 'None')&#10;setsetting('Cavebot/SpecialAreas/SArea3/Policy', 'None')&#10;reachcreature('Annihilon',3)&#10;setsetting('Cavebot/Enabled', 'yes')&#10;&#10;traymessage($name, &quot;Hey! Annihilion will die in some seconds, check your luck and look what you earn :).&quot;, 1000)&#10;&#10;&#10;end&#10;end&#10;&#10;&#10;&#10;&#10;end&#10;" enabled="yes"/>
            <PersistentScript name="CheckFBOMB" script="auto(50)&#10;if cancheckfb and fbcount() &gt; 0 then&#10;&#10;anni = getcreature('Annihilon')&#10;&#10;if $hppc &gt; 80 and not zabkikolomnie and not movingposition then&#10;&#10;if anni.onscreen then&#10;&#10;if anni.dist &gt; 2 then&#10;&#10;checkfb()&#10;&#10;&#10;end&#10;&#10;else&#10;&#10;checkfb()&#10;&#10;&#10;end&#10;&#10;end&#10;&#10;&#10;end&#10;" enabled="yes"/>
            <PersistentScript name="STONESHOWER" script="auto(200)&#10;if keepstoneshower then&#10;if $standtime &gt; 600 then&#10;useoncreature(&quot;Stone shower rune&quot;,$self)&#10;end&#10;end" enabled="yes"/>
            <PersistentScript name="positionsfbomb" script="init start&#10;fbombpos = {&#10;{&#10;x = 33194,&#10;y = 31692&#10;},&#10;{&#10;x = 33197,&#10;y = 31692&#10;},&#10;{&#10;x = 33200,&#10;y = 31692&#10;},&#10;{&#10;x = 33200,&#10;y = 31695&#10;},&#10;{&#10;x = 33200,&#10;y = 31698&#10;},&#10;{&#10;x = 33197,&#10;y = 31698&#10;},&#10;{&#10;x = 33194,&#10;y = 31698&#10;},&#10;{&#10;x = 33194,&#10;y = 31695&#10;}&#10;}&#10;init end" enabled="yes"/>
            <PersistentScript name="LowPriorityScr" script="init start&#10;showedaol = false&#10;init end&#10;auto(500)&#10;&#10;&#10;&#10;&#10;&#10;if useshieldandweapon then&#10;&#10;showuseroption('anniweapontype', true)&#10;showuseroption('shieldtype', true)&#10;showuseroption('weapontype', true)&#10;showuseroption('weaponreminder', true)&#10;if windowcount(mainbp) &gt; 0 then&#10;&#10;&#10;if changetoshield then&#10;&#9;&#9;if $rhand.id ~= itemid(weapontype) and itemcount(weapontype) &gt; 0 then&#10;&#9;&#9;equipitem(weapontype,'rhand')&#10;&#9;&#9;waitping()&#10;&#9;&#9;end&#10;&#9;&#9;&#10;&#9;&#9;if $lhand.id ~= itemid(shieldtype) and itemcount(shieldtype) &gt; 0 then&#10;&#9;&#9;equipitem(shieldtype,'lhand')&#10;&#9;&#9;waitping()&#10;&#9;&#9;end&#10;else&#9;&#10;&#10;&#9;&#9;if $rhand.id ~= itemid(anniweapontype) and itemcount(anniweapontype) &gt; 0 then&#10;&#9;&#9;&#9;equipitem(anniweapontype,'rhand')&#10;&#9;&#9;end&#10;&#9;&#9;&#10;end&#10;else&#10;&#10;&#9;&#9;if $rhand.id ~= itemid(anniweapontype) and itemcount(anniweapontype) &gt; 0 then&#10;&#9;&#9;&#9;equipitem(anniweapontype,'rhand')&#10;&#9;&#9;&#9;end&#10;end&#10;else&#10;if $rhand.id == itemid(weapontype) and itemcount(anniweapontype) &gt; 0 then&#10;equipitem(anniweapontype,'rhand')&#10;end&#10;showuseroption('anniweapontype', false)&#10;showuseroption('shieldtype', false)&#10;showuseroption('weapontype', false)&#10;showuseroption('weaponreminder', false)&#10;&#10;&#10;&#10;end&#10;&#10;if takera then&#10;&#10;showuseroption('atype', true)&#10;showuseroption('rabp', true)&#10;showuseroption('ringamuletdpbp', true)&#10;showuseroption('sep', true)&#10;showuseroption('stopbotifnotra', true)&#10;else&#10;showuseroption('atype', false)&#10;showuseroption('rabp', false)&#10;showuseroption('ringamuletdpbp', false)&#10;showuseroption('sep', false)&#10;showuseroption('stopbotifnotra', false)&#10;end&#10;&#10;&#10;if atype ~= &quot;No Amulet&quot; then&#10;showuseroption('aamount', true)&#10;&#10;else&#10;showuseroption('aamount', false)&#10;end&#10;&#10;if not running then&#10;if getuseroption('ammobp') == getuseroption('potionbp') then&#10;setuseroption('potionbp', 'Brown Backpack')&#10;end&#10;if ammotype == &quot;Infernal Bolt&quot; then&#10;showuseroption('infoammob',true)&#10;setsetting('Looting/LootList/infernal bolt/LootingDestination', 'ammobp')&#10;else&#10;showuseroption('infoammob',false)&#10;setsetting('Looting/LootList/infernal bolt/LootingDestination', 'lootbp')&#10;end&#10;&#10;if pvpe then&#10;if not $pzone then&#10;setsetting('Cavebot/WalkThroughPlayers', 'no')&#10;else&#10;setsetting('Cavebot/WalkThroughPlayers', 'yes')&#10;end&#10;else&#10;setsetting('Cavebot/WalkThroughPlayers', 'yes')&#10;end&#10;&#10;if itemcount(ammotype) &lt; minammo or itemcount(&quot;strong mana potion&quot;) &lt; minsmp or itemcount(&quot;great spirit potion&quot;) &lt; mingsp or itemcount(&quot;fire bomb rune&quot;) &lt; minfb then&#10;havesupply = false&#10;else&#10;havesupply = true&#10;end&#10;&#10;if $cap &gt; mincap then&#10;havecap = true&#10;else&#10;havecap = false&#10;end&#10;&#10;if (not havesupply or not havecap) and not ebutton then&#10;if $wptsection == &quot;Hunt&quot; or $wptsection == &quot;Anni&quot; then&#10;gotolabel(&quot;Leave&quot;,&quot;Leave&quot;)&#10;setsetting('Cavebot/Enabled', 'yes')&#10;end&#10;end&#10;&#10;if usefwb then&#10;&#9;showuseroption(&quot;normalbootsname&quot;,true)&#10;&#9;&#9;if $feet.id == 9020 then&#10;&#9;&#9;equipitem(normalbootsname,'feet')&#10;&#9;&#9;end&#10;&#9;&#9;&#10;&#9;&#9;&#10;&#9;&#9;&#9;if $feet.id ~= 9019 then&#10;&#9;&#9;&#9;&#9;if ($wptsection == &quot;Hunt&quot; or $wptsection == &quot;Anni&quot;) then&#10;&#9;&#9;&#9;&#9;&#9;if itemcount(9019) &gt;= 1 then&#10;&#9;&#9;&#9;&#9;&#9;equipitem(9019,'feet')&#10;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;equipitem(normalbootsname,'feet')&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;else&#10;showuseroption(&quot;normalbootsname&quot;,false)&#10;end&#10;&#10;&#10;if maround(10, &quot;Annihilon&quot;) == 0 and $lootbodies == 0 then&#10;unrust(true, true, 500)&#10;end&#10;&#10;if itemcount(9020) &gt;= 1 and itemcount(676) &gt;= 1 and $feet.id ~= 9020 and usefwb then&#10;useitemon(676,9020)&#10;end&#10;&#10;setlootingdestination('mainbp', mainbp)&#10;setlootingdestination('lootbp', lootbp)&#10;setlootingdestination('ammobp', ammobp)&#10;setlootingdestination('potionbp', potionbp)&#10;setlootingdestination('maindpbp', maindpbp)&#10;setlootingdestination('stackdpbp', stackdpbp)&#10;setlootingdestination('raredpbp', raredpbp)&#10;setlootingdestination('ammodpbp', ammodpbp)&#10;&#10;if $belt.count &lt; 50 then&#10;equipitem(ammotype, 'belt')&#10;end&#10;&#10;if keephaste then&#10;setsetting('ConditionHealer/Rules/NewHealRule1/Enabled', 'yes')&#10;else&#10;setsetting('ConditionHealer/Rules/NewHealRule1/Enabled', 'no')&#10;end&#10;&#10;&#10;&#10;&#10;&#10;&#10;sellsoulorb  = getuseroption('sellsoulorb')&#10;sellinfernalbolt  = getuseroption('sellinfernalbolt')&#10;sellpowerbolt   = getuseroption('sellpowerbolt')&#10;sellassassinstar  = getuseroption('sellassassinstar')&#10;sellgiantshimmeringpearl  = getuseroption('sellgiantshimmeringpearl')&#10;selldemonhorn   = getuseroption('selldemonhorn')&#10;sellberserkpotion  = getuseroption('sellberserkpotion')&#10;sellmastermindpotion  = getuseroption('sellmastermindpotion')&#10;sellultimatehealthpotion  = getuseroption('sellultimatehealthpotion')&#10;sellgreathealthpotion  = getuseroption('sellgreathealthpotion')&#10;sellgreatmanapotion  = getuseroption('sellgreatmanapotion')&#10;sellgreatspiritpotion  = getuseroption('sellgreatspiritpotion')&#10;sellgoldingot  = getuseroption('sellgoldingot')&#10;sellrustyarmor  = getuseroption('sellrustyarmor')&#10;sellheavymace  = getuseroption('sellheavymace')&#10;sellguardianshield  = getuseroption('sellguardianshield')&#10;selltowershield  = getuseroption('selltowershield')&#10;sellcrownshield  = getuseroption('sellcrownshield')&#10;sellpaladinarmor  = getuseroption('sellpaladinarmor')&#10;sellguardianhalberd  = getuseroption('sellguardianhalberd')&#10;sellvioletgem  = getuseroption('sellvioletgem')&#10;sellbluegem  = getuseroption('sellbluegem')&#10;sellgreengem  = getuseroption('sellgreengem')&#10;sellyellowgem  = getuseroption('sellyellowgem')&#10;sellredgem  = getuseroption('sellredgem')&#10;selldemonshield  = getuseroption('selldemonshield')&#10;sellonyxflail  = getuseroption('sellonyxflail')&#10;sellobsidiantruncheon  = getuseroption('sellobsidiantruncheon')&#10;selldiamondsceptre  = getuseroption('selldiamondsceptre')&#10;sellmastermindshield  = getuseroption('sellmastermindshield')&#10;sellskullcrackerarmor  = getuseroption('sellskullcrackerarmor')&#10;selldemonbone  = getuseroption('selldemonbone')&#10;sellthestomper  = getuseroption('sellthestomper')&#10;selllavosarmor  = getuseroption('selllavosarmor')&#10;&#10;priceitemsonmarket = getuseroption('price Items On Market')&#10;pricesoulorb  = getuseroption('pricesoulorb')&#10;priceinfernalbolt  = getuseroption('priceinfernalbolt')&#10;pricepowerbolt   = getuseroption('pricepowerbolt')&#10;priceassassinstar  = getuseroption('priceassassinstar')&#10;pricegiantshimmeringpearl  = getuseroption('pricegiantshimmeringpearl')&#10;pricedemonhorn   = getuseroption('pricedemonhorn')&#10;priceberserkpotion  = getuseroption('priceberserkpotion')&#10;pricemastermindpotion  = getuseroption('pricemastermindpotion')&#10;priceultimatehealthpotion  = getuseroption('priceultimatehealthpotion')&#10;pricegreathealthpotion  = getuseroption('pricegreathealthpotion')&#10;pricegreatmanapotion  = getuseroption('pricegreatmanapotion')&#10;pricegreatspiritpotion  = getuseroption('pricegreatspiritpotion')&#10;pricegoldingot  = getuseroption('pricegoldingot')&#10;pricerustyarmor  = getuseroption('pricerustyarmor')&#10;priceheavymace  = getuseroption('priceheavymace')&#10;priceguardianshield  = getuseroption('priceguardianshield')&#10;pricetowershield  = getuseroption('pricetowershield')&#10;pricecrownshield  = getuseroption('pricecrownshield')&#10;pricepaladinarmor  = getuseroption('pricepaladinarmor')&#10;priceguardianhalberd  = getuseroption('priceguardianhalberd')&#10;pricevioletgem  = getuseroption('pricevioletgem')&#10;pricebluegem  = getuseroption('pricebluegem')&#10;pricegreengem  = getuseroption('pricegreengem')&#10;priceyellowgem  = getuseroption('priceyellowgem')&#10;priceredgem  = getuseroption('priceredgem')&#10;pricedemonshield  = getuseroption('pricedemonshield')&#10;priceonyxflail  = getuseroption('priceonyxflail')&#10;priceobsidiantruncheon  = getuseroption('priceobsidiantruncheon')&#10;pricediamondsceptre  = getuseroption('pricediamondsceptre')&#10;pricemastermindshield  = getuseroption('pricemastermindshield')&#10;priceskullcrackerarmor  = getuseroption('priceskullcrackerarmor')&#10;pricedemonbone  = getuseroption('pricedemonbone')&#10;pricethestomper  = getuseroption('pricethestomper')&#10;pricelavosarmor  = getuseroption('pricelavosarmor')&#10;&#10;itemsonmarket = {&#10;{item = sellsoulorb, price = pricesoulorb, itemname = &quot;soul orb&quot;},&#10;{item = sellinfernalbolt, price = priceinfernalbolt, itemname = &quot;infernal bolt&quot;},&#10;{item = sellpowerbolt, price = pricepowerbolt, itemname = &quot;power bolt&quot;},&#10;{item = sellassassinstar, price = priceassassinstar, itemname = &quot;assassin star&quot;},&#10;{item = sellgiantshimmeringpearl, price = pricegiantshimmeringpearl, itemname = &quot;giant shimmering pearl&quot;},&#10;{item = selldemonhorn, price = pricedemonhorn, itemname = &quot;demon horn&quot;},&#10;{item = sellberserkpotion, price = priceberserkpotion, itemname = &quot;berserk potion&quot;},&#10;{item = sellmastermindpotion, price = pricemastermindpotion, itemname = &quot;mastermind potion&quot;},&#10;{item = sellultimatehealthpotion, price = priceultimatehealthpotion, itemname = &quot;ultimate health potion&quot;},&#10;{item = sellgreathealthpotion, price = pricegreathealthpotion, itemname = &quot;great health potion&quot;},&#10;{item = sellgreatmanapotion, price = pricegreatmanapotion, itemname = &quot;great mana potion&quot;},&#10;{item = sellgreatspiritpotion, price = pricegreatspiritpotion, itemname = &quot;great spirit potion&quot;},&#10;{item = sellgoldingot, price = pricegoldingot, itemname = &quot;gold ingot&quot;},&#10;{item = sellrustyarmor, price = pricerustyarmor, itemname = &quot;rusty armor&quot;},&#10;{item = sellheavymace, price = priceheavymace, itemname = &quot;heavy mace&quot;},&#10;{item = sellguardianshield, price = priceguardianshield, itemname = &quot;guardian shield&quot;},&#10;{item = selltowershield, price = pricetowershield, itemname = &quot;tower shield&quot;},&#10;{item = sellcrownshield, price = pricecrownshield, itemname = &quot;crown shield&quot;},&#10;{item = sellpaladinarmor, price = pricepaladinarmor, itemname = &quot;paladin armor&quot;},&#10;{item = sellguardianhalberd, price = priceguardianhalberd, itemname = &quot;guardian halberd&quot;},&#10;{item = sellvioletgem, price = pricevioletgem, itemname = &quot;violet gem&quot;},&#10;{item = sellbluegem, price = pricebluegem, itemname = &quot;blue gem&quot;},&#10;{item = sellgreengem, price = pricegreengem, itemname = &quot;green gem&quot;},&#10;{item = sellyellowgem, price = priceyellowgem, itemname = &quot;yellow gem&quot;},&#10;{item = sellredgem, price = priceredgem, itemname = &quot;red gem&quot;},&#10;{item = selldemonshield, price = pricedemonshield, itemname = &quot;demon shield&quot;},&#10;{item = sellonyxflail, price = priceonyxflail, itemname = &quot;onyx flail&quot;},&#10;{item = sellobsidiantruncheon, price = priceobsidiantruncheon, itemname = &quot;obsidian truncheon&quot;},&#10;{item = selldiamondsceptre, price = pricediamondsceptre, itemname = &quot;diamond sceptre&quot;},&#10;{item = sellmastermindshield, price = pricemastermindshield, itemname = &quot;mastermind shield&quot;},&#10;{item = sellskullcrackerarmor, price = priceskullcrackerarmor, itemname = &quot;skullcracker armor&quot;},&#10;{item = selldemonbone, price = pricedemonbone, itemname = &quot;demonbone&quot;},&#10;{item = sellthestomper, price = pricethestomper, itemname = &quot;the stomper&quot;},&#10;{item = selllavosarmor, price = pricelavosarmor, itemname = &quot;lavos armor&quot;}&#10;}&#10;&#10;&#10;&#10;if sellitemsonmarket then&#10;&#10;showuseroption('Enable checkbox to see market items list',false)&#10;showuseroption('Market Prices',true)&#10;showuseroption('sellsoulorb',true)&#10;showuseroption('sellinfernalbolt',true)&#10;showuseroption('sellpowerbolt',true)&#10;showuseroption('sellassassinstar',true)&#10;showuseroption('sellgiantshimmeringpearl',true)&#10;showuseroption('selldemonhorn',true)&#10;showuseroption('sellberserkpotion',true)&#10;showuseroption('sellmastermindpotion',true)&#10;showuseroption('sellultimatehealthpotion',true)&#10;showuseroption('sellgreathealthpotion',true)&#10;showuseroption('sellgreatmanapotion',true)&#10;showuseroption('sellgreatspiritpotion',true)&#10;showuseroption('sellgoldingot',true)&#10;showuseroption('sellrustyarmor',true)&#10;showuseroption('sellheavymace',true)&#10;showuseroption('sellguardianshield',true)&#10;showuseroption('selltowershield',true)&#10;showuseroption('sellcrownshield',true)&#10;showuseroption('sellpaladinarmor',true)&#10;showuseroption('sellguardianhalberd' ,true)&#10;showuseroption('sellvioletgem',true)&#10;showuseroption('sellbluegem',true)&#10;showuseroption('sellgreengem',true)&#10;showuseroption('sellyellowgem',true)&#10;showuseroption('sellredgem',true)&#10;showuseroption('selldemonshield',true)&#10;showuseroption('sellonyxflail',true)&#10;showuseroption('sellobsidiantruncheon',true)&#10;showuseroption('selldiamondsceptre',true)&#10;showuseroption('sellmastermindshield',true)&#10;showuseroption('sellskullcrackerarmor',true)&#10;showuseroption('selldemonbone',true)&#10;showuseroption('sellthestomper',true)&#10;showuseroption('selllavosarmor',true)&#10;&#10;else&#10;showuseroption('Enable checkbox to see market items list',true)&#10;showuseroption('Market Prices',false)&#10;showuseroption('sellsoulorb',false)&#10;showuseroption('sellinfernalbolt',false)&#10;showuseroption('sellpowerbolt',false)&#10;showuseroption('sellassassinstar',false)&#10;showuseroption('sellgiantshimmeringpearl',false)&#10;showuseroption('selldemonhorn',false)&#10;showuseroption('sellberserkpotion',false)&#10;showuseroption('sellmastermindpotion',false)&#10;showuseroption('sellultimatehealthpotion',false)&#10;showuseroption('sellgreathealthpotion',false)&#10;showuseroption('sellgreatmanapotion',false)&#10;showuseroption('sellgreatspiritpotion',false)&#10;showuseroption('sellgoldingot',false)&#10;showuseroption('sellrustyarmor',false)&#10;showuseroption('sellheavymace',false)&#10;showuseroption('sellguardianshield',false)&#10;showuseroption('selltowershield',false)&#10;showuseroption('sellcrownshield',false)&#10;showuseroption('sellpaladinarmor',false)&#10;showuseroption('sellguardianhalberd' ,false)&#10;showuseroption('sellvioletgem',false)&#10;showuseroption('sellbluegem',false)&#10;showuseroption('sellgreengem',false)&#10;showuseroption('sellyellowgem',false)&#10;showuseroption('sellredgem',false)&#10;showuseroption('selldemonshield',false)&#10;showuseroption('sellonyxflail',false)&#10;showuseroption('sellobsidiantruncheon',false)&#10;showuseroption('selldiamondsceptre',false)&#10;showuseroption('sellmastermindshield',false)&#10;showuseroption('sellskullcrackerarmor',false)&#10;showuseroption('selldemonbone',false)&#10;showuseroption('sellthestomper',false)&#10;showuseroption('selllavosarmor',false)&#10;&#10;&#10;end&#10;if sellsoulorb  then  &#10;showuseroption('pricesoulorb',true)&#10;else&#10;showuseroption('pricesoulorb',false)&#10;end &#10;if sellinfernalbolt  then  &#10;showuseroption('priceinfernalbolt',true)&#10;else&#10;showuseroption('priceinfernalbolt',false)&#10;end &#10;if sellassassinstar  then &#10;showuseroption('priceassassinstar',true)&#10;else&#10;showuseroption('priceassassinstar',false)&#10;end &#10;if sellgiantshimmeringpearl  then  &#10;showuseroption('pricegiantshimmeringpearl',true)&#10;else&#10;showuseroption('pricegiantshimmeringpearl',false)&#10;end &#10;if selldemonhorn  then  &#10;showuseroption('pricedemonhorn',true)&#10;else&#10;showuseroption('pricedemonhorn',false)&#10;end &#10;if sellberserkpotion  then  &#10;showuseroption('priceberserkpotion',true)&#10;else&#10;showuseroption('priceberserkpotion',false)&#10;end &#10;if sellmastermindpotion  then  &#10;showuseroption('pricemastermindpotion',true)&#10;else&#10;showuseroption('pricemastermindpotion',false)&#10;end &#10;if sellultimatehealthpotion  then  &#10;showuseroption('priceultimatehealthpotion',true)&#10;else&#10;showuseroption('priceultimatehealthpotion',false)&#10;end &#10;if sellgreathealthpotion  then  &#10;showuseroption('pricegreathealthpotion',true)&#10;else&#10;showuseroption('pricegreathealthpotio',false)&#10;end &#10;if sellgreatmanapotion  then  &#10;showuseroption('pricegreatmanapotion',true)&#10;else&#10;showuseroption('pricegreatmanapotion',false)&#10;end &#10;if sellgreatspiritpotion   then  &#10;showuseroption('pricegreatspiritpotion',true)&#10;else&#10;showuseroption('pricegreatspiritpotion',false)&#10;end &#10;if sellgoldingot   then  &#10;showuseroption('pricegoldingot',true)&#10;else&#10;showuseroption('pricegoldingot',false)&#10;end&#10;if sellrustyarmor   then  &#10;showuseroption('pricerustyarmor',true)&#10;else&#10;showuseroption('pricerustyarmor',false)&#10;end&#10;if sellheavymace   then  &#10;showuseroption('priceheavymace',true)&#10;else&#10;showuseroption('priceheavymace',false)&#10;end&#10;if sellguardianshield   then  &#10;showuseroption('priceguardianshield',true)&#10;else&#10;showuseroption('priceguardianshield',false)&#10;end&#10;if selltowershield   then  &#10;showuseroption('pricetowershield',true)&#10;else&#10;showuseroption('pricetowershield',false)&#10;end&#10;if sellcrownshield   then  &#10;showuseroption('pricecrownshield',true)&#10;else&#10;showuseroption('pricecrownshield',false)&#10;end&#10;if sellpaladinarmor   then  &#10;showuseroption('pricepaladinarmor',true)&#10;else&#10;showuseroption('pricepaladinarmor',false)&#10;end&#10;if sellguardianhalberd   then  &#10;showuseroption('priceguardianhalberd',true)&#10;else&#10;showuseroption('priceguardianhalberd',false)&#10;end&#10;if sellvioletgem   then  &#10;showuseroption('pricevioletgem',true)&#10;else&#10;showuseroption('pricevioletgem',false)&#10;end&#10;if sellbluegem   then  &#10;showuseroption('pricebluegem',true)&#10;else&#10;showuseroption('pricebluegem',false)&#10;end&#10;if sellgreengem   then  &#10;showuseroption('pricegreengem',true)&#10;else&#10;showuseroption('pricegreengem',false)&#10;end&#10;if sellyellowgem   then  &#10;showuseroption('priceyellowgem',true)&#10;else&#10;showuseroption('priceyellowgem',false)&#10;end&#10;if sellredgem   then  &#10;showuseroption('priceredgem',true)&#10;else&#10;showuseroption('priceredgem',false)&#10;end&#10;if selldemonshield   then  &#10;showuseroption('pricedemonshield',true)&#10;else&#10;showuseroption('pricedemonshield',false)&#10;end&#10;if sellonyxflail   then  &#10;showuseroption('priceonyxflail',true)&#10;else&#10;showuseroption('priceonyxflail',false)&#10;end&#10;if sellobsidiantruncheon   then  &#10;showuseroption('priceobsidiantruncheon',true)&#10;else&#10;showuseroption('priceobsidiantruncheon',false)&#10;end&#10;if selldiamondsceptre   then  &#10;showuseroption('pricediamondsceptre',true)&#10;else&#10;showuseroption('pricediamondsceptre',false)&#10;end&#10;if sellmastermindshield   then  &#10;showuseroption('pricemastermindshield',true)&#10;else&#10;showuseroption('pricemastermindshield',false)&#10;end&#10;if sellskullcrackerarmor   then  &#10;showuseroption('priceskullcrackerarmor',true)&#10;else&#10;showuseroption('priceskullcrackerarmor',false)&#10;end&#10;if selldemonbone   then  &#10;showuseroption('pricedemonbone',true)&#10;else&#10;showuseroption('pricedemonbone',false)&#10;end&#10;if sellthestomper  then  &#10;showuseroption('pricethestomper',true)&#10;else&#10;showuseroption('pricethestomper',false)&#10;end&#10;if selllavosarmor  then  &#10;showuseroption('pricelavosarmor',true)&#10;else&#10;showuseroption('pricelavosarmor',false)&#10;end&#10;&#10;end" enabled="yes"/>
            <PersistentScript name="TrayMessages" script="--tray&#10;    init start&#10;    local curlevel = $level&#10;    local curmlevel = $mlevel&#10;    local curdistlevel = $distance&#10;&#9;local deathshowed = false&#10;&#9;taskdone = false&#10;&#9;antilurework = false&#10;    init end&#10;&#10;    auto(1000)&#10;if traymessages then&#10;&#10;    if $level ~= curlevel then&#10;    traymessage($name, &quot;Congratulations! You advanced from Level &quot;..curlevel.. &quot; to Level &quot; ..$level..&quot;. Click on this message to show &quot;..$name..&quot; bot&quot;, 5000)&#10;    curlevel = $level&#10;    end&#10; &#9;if $mlevel ~= curmlevel then&#10;    traymessage($name, &quot;Congratulations! You advanced in magic level to &quot;..$mlevel..&quot; (with items). Click on this message to show &quot;..$name..&quot; bot&quot;, 5000)&#10;    curmlevel = $mlevel&#10;    end&#10;&#9;if $distance ~= curdistlevel then&#10;    traymessage($name, &quot;Congratulations! You advanced in distance fighting to &quot; ..$distance..&quot; (with items). Click on this message to show &quot;..$name..&quot; bot&quot;, 5000)&#10;    curdistlevel = $distance&#10;    end&#10;&#9;if $hppc &lt; 1 then&#10;&#9;if deathshowed == false&#9;then &#10;&#9;traymessage($name, &quot;Hey! Your character &quot;..$name..&quot; Died. Click on this message to show &quot;..$name..&quot; bot&quot;, 5000)&#10;    deathshowed = true&#10;&#9;end&#10;&#9;end&#10;&#9;if $wptsection == &quot;Hunt&quot; then&#10;&#10;&#9;foreach creature m 'ps' do&#10;&#9;if m.name ~= $name then&#10;&#9;traymessage($name, &quot;Hey! Someone enter Your spawn where &quot;..$name..&quot; hunting please check that.&quot;, 1000)&#10;&#9;&#10;&#9;end&#10;&#9;end&#10;&#9;end&#10;&#9;&#10;&#10;&#10;&#10;&#9;if taskdone then&#10;&#9;traymessage($name, &quot;Congratulation! You've done task on &quot;..$name..&quot;.&quot;, 1000)&#10;&#9;taskdone = false&#10;&#9;end&#10;&#10;&#9;if $pattacker.id ~= 0 then&#10;&#9;traymessage($name,&quot;Hey! &quot;..$pattacker.name .. ' is attacking you! '..$name..' client is flashing now to find client faster.',1000)&#10;&#9;flashclient()&#10;&#9;end&#10;&#9;&#10;&#9;if antilurework then&#10;&#9;traymessage($name,&quot;Hey! Your character is going to refill because anti lure started to work.&quot;,1000)&#10;&#9;antilurework = false&#10;&#9;end&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;end" enabled="yes"/>
            <PersistentScript name="EmergencyButton" script="init start&#10;&#9;function inputevents(e)&#10;&#9;&#9;if e.name == 'emergency button' then&#10;&#9;&#9;&#9;ebutton = true&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;filteruseroptions(true)&#10;init end" enabled="yes"/>
        </PersistentScripts>
    </Scripter>
    <HUDs>
        <HUDScripts>
            <HUDScript name="MonitorMyStats" script="init start&#10;    --&#10;    --              88                                                                  &#10;    --              &quot;&quot;                                                ,d                &#10;    --                                                                88                &#10;    --   ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;    --   I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;    --    `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;    --   aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;    --   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;    --&#10;&#10;    --   Name: Monitor My Stats&#10;    --   Last Updated: 19/12/2013&#10;    --   Version: 1.0&#10;&#10;    local MMS = {&#10;        ShowInfo = true,&#10;&#10;        Title = &quot;Annihilon&quot;,&#10;        Creator = &quot;Yoko&quot;,&#10;        Info = 'RP Version',&#10;        Version = '1.0.0'&#10;    }&#10;&#10;    -- [[ Do not change anything below this line. ]] --&#10;&#10;    filterinput(false, true, false, false)&#10;&#10;    local HUD_Sections = {&#10;        {Name = 'OTHERS', State = true, Items = {&#10;                {'Ping', function() return $ping .. ' (avg: ' .. $pingaverage .. ')' end},&#10;                {'Bank Balance', function() return num($balance) end},&#10;            }&#10;        },&#10;&#10;        {Name = 'CHARACTER STATS', State = true, Items = {&#10;                {'Level', function() return $level .. ' (' .. 100 - math.floor(($exp - expatlvl($level)) * 100 / (expatlvl($level + 1) - expatlvl($level))) .. '%)' end},&#10;                {'Experience', function() return num($exp) end},&#10;                {'Magic Level', function() return $mlevel .. ' (' .. 100 - $mlevelpc .. '%)' end},&#10;                {'Weapon Skill', function() local _ = WeaponSkill() return _.skill .. ' (' .. 100 - _.skillpc .. '%)' end},&#10;                {'Shielding', function() return $shielding .. ' (' .. 100 - $shieldingpc .. '%)' end},&#10;                {'Fishing', function() return $fishing .. ' (' .. 100 - $fishingpc .. '%)' end}&#10;            }&#10;        },&#10;&#10;        {Name = 'ENGINE STATES', State = true, Items = {&#10;                {'Spell Healer', function() return getsetting('SpellHealer/Enabled') end, function() return toggle('SpellHealer/Enabled') end},&#10;                {'Potion Healer', function() return getsetting('PotionHealer/Enabled') end, function() return toggle('PotionHealer/Enabled') end},&#10;                {'Condition Healer', function() return getsetting('ConditionHealer/Enabled') end, function() return toggle('ConditionHealer/Enabled') end},&#10;                {'Mana Training', function() return getsetting('ManaTrainer/Enabled') end, function() return toggle('ManaTrainer/Enabled') end},&#10;                {'Cavebot', function() return getsetting('Cavebot/Enabled') end, function() return toggle('Cavebot/Enabled') end},&#10;                {'Looting', function() return getsetting('Looting/Enabled') end, function() return toggle('Looting/Enabled') end},&#10;                {'Targeting', function() return getsetting('Targeting/Enabled') end, function() return toggle('Targeting/Enabled') end}&#10;            }&#10;        },&#10;&#10;        {Name = 'BOTTING STATS', State = true, Items = {&#10;                {'Experience per Hour', function() return num($exphour) end},&#10;                {'Experience Left', function() return num(exptolevel()) end},&#10;                {'Experience Today', function() return num($expgained) end},&#10;                {'Time to Next Level', function() return time(timetolevel()) end},&#10;                {'Played Time', function() return time(math.floor($charactertime / 1000)) end},&#10;                {'Stamina', function() return time($stamina) end}&#10;            }&#10;        }&#10;    }&#10;&#10;    local HUD_Colors = {&#10;            Font = color(255, 255, 255, 0),&#10;            SectionHeaderBackground = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)},EntryNameBackground = {0.0, color(41, 105, 100, 105), 0.76, color(37, 94, 50, 50), 0.23, color(19, 19, 19, 20)},&#10;EntryValueBackground = {0.0, color(19, 19, 19, 20), 0.23, color(37, 94, 50, 50), 0.76, color(41, 105, 100, 105)},&#10;EntryValueEnabledBackground = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)},&#10;            EntryValueDisabledBackground = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)},&#10;    }&#10;&#10;    function WeaponSkill()&#10;        local SkillTypes = {&#10;            ['axe'] = {type = 'axe', skill = $axe, skillpc = $axepc},&#10;            ['club'] = {type = 'club', skill = $club, skillpc = $clubpc},&#10;            ['sword'] = {type = 'sword', skill = $sword, skillpc = $swordpc},&#10;            ['bow'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['distance weapon'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['no weapon'] = {type = 'fist', skill = $fist, skillpc = $fistpc},&#10;            ['rod'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;            ['wand'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;        }&#10;&#10;        return SkillTypes[findweapontype()]&#10;    end&#10;&#10;    local Moving, Temp, Moved = false, {0, 0}, {0, 0}&#10;&#10;    function inputevents(e)&#10;        if (e.type == IEVENT_LMOUSEDOWN) then&#10;            for _, Section in ipairs(HUD_Sections) do&#10;                if (e.elementid == Section.StateSwitch) then&#10;                    Section.State = not Section.State&#10;                    return&#10;                end&#10;            end&#10;        for _, Section in ipairs(HUD_Sections) do&#10;                if (Section.Name == 'ENGINE STATES') then&#10;                    for _, SectionItem in ipairs(Section.Items) do&#10;                        if (e.elementid == SectionItem[4]) then&#10;                            SectionItem[3]()&#10;                            return&#10;                        end&#10;                    end&#10;                end&#10;            end&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEDOWN) then&#10;            Moving, Temp = true, {$cursor.x - Moved[1], $cursor.y - Moved[2]}&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEUP) then&#10;            Moving = false&#10;        end&#10;    end&#10;    &#10;    setmaskcolorxp(0)&#10;init end&#10;&#10;if (Moving) then&#10;    auto(10)&#10;    Moved = {$cursor.x - Temp[1], $cursor.y - Temp[2]}&#10;end&#10;&#10;setposition($clientwin.left + 5 + Moved[1], $worldwin.top + Moved[2])&#10;setfontstyle('Tahoma', 8, 75, 0xFFFFFF, 1, color(0, 0, 0, 20))&#10;&#10;local YPosition, SectionRow, SectionItemsRow = 0, 0, 0&#10;&#10;if MMS.ShowInfo then&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, 0, 240, 21, 2, 2)&#10;    drawtext(MMS.Title, 6, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 0, 110, 21, 2, 2)&#10;    drawtext(MMS.Creator, 136, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfontsize(7)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 0 * 18, 240, 15, 2, 2)&#10;    drawtext(MMS.Info, 6, 24 + 0 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 1 * 18, 240, 15, 2, 2)&#10;    drawtext('Script version:', 6, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 24 + 1 * 18, 110, 15, 2, 2)&#10;    drawtext(MMS.Version, 136, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;    &#10;    YPosition = 22 + 2 * 19&#10;end&#10;&#10;for SectionIndex, Section in ipairs(HUD_Sections) do&#10;    setfontsize(8)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 20, 2, 2)&#10;    drawtext(Section.Name, 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    if (Section.State) then&#10;        addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;    else&#10;        addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;    end&#10;    Section.StateSwitch = drawroundrect(220, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 20, 20, 2, 2)&#10;    drawtext('X', 228, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    SectionRow = SectionRow + 1&#10;&#10;    if (Section.State) then&#10;        setfontsize(7)&#10;&#10;        local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;        for SectionItemIndex, SectionItem in ipairs(Section.Items) do&#10;            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)     &#10;            addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;            drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 16, 2, 2)&#10;            drawtext(SectionItem[1], 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;&#10;            if (Section.Name == 'ENGINE STATES') then&#10;                local EngineCurrentState = SectionItem[2]()&#10;&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                if (EngineCurrentState == 'yes') then&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;                else&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;                end&#10;                HUD_Sections[SectionIndex].Items[SectionItemIndex][4] = drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;&#10;&#10;                drawtext((EngineCurrentState == 'yes' and ('On')) or ('Off'), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            else&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;                drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;                drawtext(SectionItem[2](), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            end&#10;&#10;            SectionItemsRow = SectionItemsRow + 1&#10;        end&#10;    end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="MonitorMyHunting" script="init start&#10;&#9;--&#10;&#9;--                        88                                                                  &#10;&#9;--                        &quot;&quot;                                                ,d                &#10;&#9;--                                                                          88                &#10;&#9;--             ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;&#9;--             I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;&#9;--              `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;&#9;--             aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;&#9;--   Author:   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;&#9;--   &#10;&#9;--   Monitor My Hunting!&#10;&#9;--&#10;&#9;--   Version: 1.0&#10;&#9;--   Created: 29.12.2013&#10;&#9;--   Last update: 29.12.2013&#10;&#9;--&#10;&#10;&#9;local MMH = {&#10;&#9;&#9;SHOW_ALL_ITEMS = false,&#10;&#9;&#9;SHOW_ALL_SUPPLIES = false,&#10;&#9;}&#10;&#10;&#9;-- [[ Do not change anything below this line. ]] --&#10;&#10;&#9;-- [[ COLORS ]] --&#10;&#9;MMH.COLORS = {}&#10;&#9;MMH.COLORS.FONT_COLOR = color(255, 255, 255, 0)&#10;&#9;MMH.COLORS.SECTION_HEADER_BACKGROUND = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)}&#10;&#9;MMH.COLORS.ENTRY_NAME_BACKGROUND = {0.0, color(41, 105, 100, 105), 0.76, color(37, 94, 50, 50), 0.23, color(19, 19, 19, 20)}&#10;&#9;MMH.COLORS.ENTRY_VALUE_BACKGROUND = {0.0, color(19, 19, 19, 20), 0.23, color(37, 94, 50, 50), 0.76, color(41, 105, 100, 105)}&#10;&#9;MMH.COLORS.RESULT_POSITIVE_BACKGROUND = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)}&#10;&#9;MMH.COLORS.RESULT_NEGATIVE_BACKGROUND = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)}&#10;&#9;MMH.COLORS.RESET_BUTTON_BACKGROUND = {0.0, color(100, 255, 100, 100), 0.23, color(50, 100, 255, 100), 0.76, color(100, 100, 100, 255)}&#10;&#10;&#9;-- [[ ELEMENTS ]] --&#10;&#9;MMH.ELEMENTS = {}&#10;&#9;MMH.ELEMENTS.RESET_BUTTON = -1&#10;&#9;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = -1&#10;&#9;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = -1&#10;&#10;&#9;-- [[ SECTION STATES ]] --&#10;&#9;MMH.SECTIONS = {}&#10;&#9;MMH.SECTIONS.ITEMS_LOOTED = true&#10;&#9;MMH.SECTIONS.SUPPLIES_USED = true&#10;&#10;&#9;-- [[ OTHERS ]] --&#9;&#10;&#9;filterinput(false, true, false, false)&#10;&#10;&#9;local MOVING, TEMP, MOVED = false, {0, 0}, {0, 0}&#10;&#10;&#9;function inputevents(e)&#10;&#9;&#9;if (e.type == IEVENT_LMOUSEDOWN) then&#10;&#9;&#9;&#9;if (e.elementid == MMH.ELEMENTS.RESET_BUTTON) then&#10;&#9;&#9;&#9;&#9;resetcharactertime()&#10;&#9;&#9;&#9;&#9;resetlootcounter()&#10;&#9;&#9;&#9;&#9;resetexpcounter()&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_ITEMS_LOOTED) then&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.ITEMS_LOOTED = not MMH.SECTIONS.ITEMS_LOOTED&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_SUPPLIES_USED) then&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.SUPPLIES_USED = not MMH.SECTIONS.SUPPLIES_USED&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEDOWN) then&#10;&#9;&#9;&#9;MOVING, TEMP = true, {$cursor.x - MOVED[1], $cursor.y - MOVED[2]}&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEUP) then&#10;&#9;&#9;&#9;MOVING = false&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;if (MOVING) then&#10;    auto(10)&#10;    MOVED = {$cursor.x - TEMP[1], $cursor.y - TEMP[2]}&#10;end&#10;&#10;setposition($clientwin.right - 424 + MOVED[1], $worldwin.top + MOVED[2])&#10;setfontstyle('Tahoma', 8, 75, MMH.COLORS.FONT_COLOR, 1, color(0, 0, 0, 20))&#10;&#10;local ROW_QUANTITY, STRING_WIDTH, STRING_HEIGHT = 0, measurestring('TEMP')&#10;local ITEMS_LOOTED_WORTH, ITEM_LOOTED_QUANTITY, ITEM_LOOTED_WORTH = 0, 0, 0&#10;local SUPPLIES_USED_WORTH, SUPPLY_USED_QUANTITY, SUPPLY_USED_WORTH = 0, 0, 0&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 0, 240, 20, 2, 2)&#10;drawtext('Monitor My Hunting v1.0', 6, 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.RESET_BUTTON_BACKGROUND))&#10;MMH.ELEMENTS.RESET_BUTTON = drawroundrect(196, 0, 44, 20, 2, 2)&#10;drawtext('RESET', 202, 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 23, 240, 15, 2, 2)&#10;drawtext('Looting Accuracy', 6, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;drawroundrect(130, 23, 110, 15, 2, 2)&#10;drawtext(string.format('%.2f', $lootaccuracy) .. '%', 136, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;drawroundrect(0, 41, 240, 20, 2, 2)&#10;drawtext('ITEMS LOOTED', 6, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = drawroundrect(220, 41, 20, 20, 2, 2)&#10;drawtext('X', 228, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;foreach lootingitem ItemEntry do&#10;&#9;if (MMH.SHOW_ALL_ITEMS or ItemEntry.amountlooted &gt; 0) then&#10;&#9;&#9;ITEM_LOOTED_QUANTITY = ItemEntry.amountlooted&#10;&#9;&#9;ITEM_LOOTED_WORTH = ItemEntry.sellprice * ITEM_LOOTED_QUANTITY&#10;&#10;&#9;&#9;if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#9;&#9;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 64 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(130, 64 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;&#9;&#9;drawtext(num(ITEM_LOOTED_QUANTITY) .. ' (' .. math.floor(ITEM_LOOTED_WORTH / 100) / 10 .. 'K)', 136, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;ITEMS_LOOTED_WORTH = ITEMS_LOOTED_WORTH + ITEM_LOOTED_WORTH&#10;&#9;end&#10;end&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;drawtext('Total: ' .. num(ITEMS_LOOTED_WORTH) .. ' GPs', 6, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;drawtext('SUPPLIES USED', 6, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = drawroundrect(220, 64 + ROW_QUANTITY * 18, 20, 20, 2, 2)&#10;drawtext('X', 228, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;foreach supplyitem ItemEntry do&#10;&#9;if (MMH.SHOW_ALL_SUPPLIES or ItemEntry.amountused &gt; 0) then&#10;&#9;&#9;SUPPLY_USED_QUANTITY = ItemEntry.amountused&#10;&#9;&#9;SUPPLY_USED_WORTH = ItemEntry.buyprice * SUPPLY_USED_QUANTITY&#10;&#10;&#9;&#9;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;&#9;&#9;drawtext(num(SUPPLY_USED_QUANTITY) .. ' (' .. math.floor(SUPPLY_USED_WORTH / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + SUPPLY_USED_WORTH&#10;&#9;end&#10;end&#10;&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#10;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;drawitem(3031, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;drawtext('Money Spent', 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;drawtext(num($moneyspent) .. ' (' .. math.floor($moneyspent / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;end&#10;&#10;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + $moneyspent&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;drawtext('Total: ' .. num(SUPPLIES_USED_WORTH) .. ' GPs', 6, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;drawtext(((ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH and ('PROFIT: ')) or ('WASTE: ')) .. num(ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) .. ' GPs (' .. math.abs(math.floor(((ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) * 3600) / ($charactertime / 1000) / 100) / 10) .. ' k/h)', 6, 87 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)" enabled="yes" refreshRate="100"/>
            <HUDScript name="ContextMenu" script="init start&#13;&#10;&#9;-- local SCRIPT_VERSION = '2.2.0'&#13;&#10;&#13;&#10;&#9;local showProfile = true&#13;&#10;&#9;local showRelation = true&#13;&#10;&#9;local showWaypoints = true&#13;&#10;&#9;local mainWaypoints = {'Node', 'Stand', 'Action', 'Lure'}&#13;&#10;&#9;local secondaryWaypoints = {'Walk', 'Shovel', 'Rope', 'Machete', 'Ladder', 'Use'}&#13;&#10;&#9;local showSpecialAreas = true&#13;&#10;&#9;local specialAreas = {'none', 'cavebot', 'targeting', 'cavebot &amp; targeting'}&#13;&#10;&#13;&#10;&#9;-- DO NOT EDIT BELOW THIS LINE --&#13;&#10;&#13;&#10;&#9;local defFontColor        = color(223, 223, 223)&#13;&#10;&#9;local defBackColor        = color(70, 70, 70)&#13;&#10;&#9;local defHighColor        = color(128, 128, 128)&#13;&#10;&#9;local boxColor            = color(70, 70, 70)&#13;&#10;&#9;local boxLightShadowColor = color(117, 117, 117)&#13;&#10;&#9;local boxDarkShadowColor  = color(41, 41, 41)&#13;&#10;&#13;&#10;&#9;local borderSize = 4&#13;&#10;&#9;local paddingSize = 3&#13;&#10;&#13;&#10;&#9;local PROFILE_URL = &quot;http://www.tibia.com/community/?subtopic=characters&amp;name=&quot;&#13;&#10;&#13;&#10;&#9;ALIGN_LEFT   = 0&#13;&#10;&#9;ALIGN_CENTER = 1&#13;&#10;&#9;ALIGN_RIGHT  = 2&#13;&#10;&#13;&#10;&#9;MENU_SEPARATOR = '-- SEPARATOR --'&#13;&#10;&#13;&#10;&#9;local items, highlight, contextMenu, maxWidth, maxHeight, clicked&#13;&#10;&#13;&#10;&#9;do -- Register default handlers&#13;&#10;&#9;&#9;if showProfile then&#13;&#10;&#9;&#9;&#9;local function showProfileName(m)&#13;&#10;&#9;&#9;&#9;&#9;return 'Show page for ' .. m.creature.name&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local function showProfileCall(m)&#13;&#10;&#9;&#9;&#9;&#9;openbrowser(PROFILE_URL .. m.creature.name:gsub(' ', '+'))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', showProfileName, showProfileCall)&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if showRelation then&#13;&#10;&#9;&#9;&#9;local function currentRelationName(m)&#13;&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id then&#13;&#10;&#9;&#9;&#9;&#9;&#9;return m.creature.name .. ': ' .. m.creature.teamname, m.creature.teamcolor, nil, color(70, 70, 70)&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', currentRelationName, nil)&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- enemy&#13;&#10;&#9;&#9;&#9;local function setEnemyName(m)&#13;&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and not m.creature.isenemy then&#13;&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as enemy'&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local function setEnemyCall(m)&#13;&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'enemy')&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setEnemyName, setEnemyCall)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- ally&#13;&#10;&#9;&#9;&#9;local function setAllyName(m)&#13;&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and (not m.creature.isally or m.creature.isleader) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as ally'&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local function setAllyCall(m)&#13;&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'ally')&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setAllyName, setAllyCall)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- leader&#13;&#10;&#9;&#9;&#9;local function setLeaderName(m)&#13;&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and not m.creature.isleader then&#13;&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as leader'&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local function setLeaderCall(m)&#13;&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'leader')&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setLeaderName, setLeaderCall)&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if showWaypoints then&#13;&#10;&#9;&#9;&#9;for _, v in ipairs({mainWaypoints, secondaryWaypoints}) do&#13;&#10;&#9;&#9;&#9;&#9;for _, vv in ipairs(v) do&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- I learned this trick with JavaScript; basically, we call a anonymous&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- function that returns the function we'll actually use. The trick is&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- that we pass to this first anonymous function the type of the node&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- we want the returned function to add. This works because the inner&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- function is created in a scope where `type` has the desired value,&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- so it's value is retained for future calls.&#13;&#10;&#9;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', 'Add ' .. vv, (function(type)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;return function(m)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;addwaypoint(type, m.posx, m.posy, m.posz)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end)(vv))&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', MENU_SEPARATOR, nil)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if showSpecialAreas then&#13;&#10;&#9;&#9;&#9;for _, v in ipairs(specialAreas) do&#13;&#10;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', 'Add Special Area (' .. v:capitalizeall() .. ')', (function(type)&#13;&#10;&#9;&#9;&#9;&#9;&#9;return function(m)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;addspecialarea(type, m.posx, m.posy, m.posz)&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end)(v))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_world', MENU_SEPARATOR, nil)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function loadCategories(...)&#13;&#10;&#9;&#9;local categories = {...}&#13;&#10;&#13;&#10;&#9;&#9;for _, v in ipairs(categories) do&#13;&#10;&#9;&#9;&#9;local cat = 'contextMenu_' .. v&#13;&#10;&#9;&#9;&#9;foreach messagehandler m cat do&#13;&#10;&#9;&#9;&#9;&#9;local text, fontColor, backColor, highColor, align&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if type(m.name) == 'function' then&#13;&#10;&#9;&#9;&#9;&#9;&#9;text, fontColor, highColor, backColor, align = m.name(contextMenu)&#13;&#10;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;text = m.name&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if text and text ~= '' then&#13;&#10;&#9;&#9;&#9;&#9;&#9;local width&#13;&#10;&#9;&#9;&#9;&#9;&#9;if text == MENU_SEPARATOR then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxHeight = maxHeight + 8&#13;&#10;&#9;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;width = (measurestring(text))&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxHeight = maxHeight + 19&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxWidth = math.max(maxWidth, width)&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;table.insert(items, {&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;text      = text,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;width     = width,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;callback  = m.callback,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;fontColor = fontColor or defFontColor,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;highColor = highColor or defHighColor,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;backColor = backColor or defBackColor&#13;&#10;&#9;&#9;&#9;&#9;&#9;});&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;filterinput(false, true, true, false)&#13;&#10;&#9;function inputevents(e)&#13;&#10;&#9;&#9;local eventItem, itemIndex&#13;&#10;&#9;&#9;for i, v in ipairs(items) do&#13;&#10;&#9;&#9;&#9;if v.id == e.elementid then&#13;&#10;&#9;&#9;&#9;&#9;eventItem = v&#13;&#10;&#9;&#9;&#9;&#9;itemIndex = i&#13;&#10;&#9;&#9;&#9;&#9;break&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;highlight = itemIndex&#13;&#10;&#9;&#9;if e.type == IEVENT_LMOUSEUP then&#13;&#10;&#9;&#9;&#9;if eventItem and eventItem.callback then&#13;&#10;&#9;&#9;&#9;&#9;eventItem.callback(contextMenu)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;clicked = true&#13;&#10;&#9;&#9;&#9;highlight = nil&#13;&#10;&#9;&#9;&#9;waitforevents(false)&#13;&#10;&#9;&#9;&#9;press('[ESC]')&#13;&#10;&#9;&#9;&#9;waitforevents(true)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setfontstyle('Tahoma', 7, 75, defFontColor, 1, 0x000000)&#13;&#10;&#9;setantialiasing(true)&#13;&#10;init end&#13;&#10;&#13;&#10;auto(10)&#13;&#10;&#13;&#10;contextMenu = contextmenuinfo()&#13;&#10;&#13;&#10;-- This prevents the HUD from redrawing after clicking&#13;&#10;if clicked then&#13;&#10;&#9;clicked = contextMenu ~= nil&#13;&#10;&#9;contextMenu = nil&#13;&#10;end&#13;&#10;&#13;&#10;if contextMenu == nil then&#13;&#10;&#9;highlight = nil&#13;&#10;&#9;return&#13;&#10;end&#13;&#10;&#13;&#10;items = {}&#13;&#10;maxWidth, maxHeight = 0, -4&#13;&#10;local fullWidth, fullHeight&#13;&#10;do -- Bootstrap&#13;&#10;&#13;&#10;&#9;-- Load categories&#13;&#10;&#9;if contextMenu.type == 'battle' or contextMenu.itemid == 99 then&#13;&#10;&#9;&#9;contextMenu.creature = getcreaturebyid(contextMenu.creatureid)&#13;&#10;&#13;&#10;&#9;&#9;if contextMenu.creature.isplayer then&#13;&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'Player', 'player')&#13;&#10;&#9;&#9;elseif contextMenu.creature.isnpc then&#13;&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'NPC', 'NPC')&#13;&#10;&#9;&#9;elseif contextMenu.creature.ismonster then&#13;&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'Monster', 'monster')&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;loadCategories(contextMenu.type .. 'Creature', 'creature')&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if contextMenu.type == 'world' then&#13;&#10;&#9;&#9;if not contextMenu.creature then&#13;&#10;&#9;&#9;&#9;loadCategories('worldItem', 'item')&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if contextMenu.posz == $posz then&#13;&#10;&#13;&#10;&#9;&#9;&#9;do&#13;&#10;&#9;&#9;&#9;&#9;local i = 0&#13;&#10;&#9;&#9;&#9;&#9;foreach settingsentry e 'Cavebot/Waypoints' do&#13;&#10;&#9;&#9;&#9;&#9;&#9;local x, y, z = get(e, 'Coordinates'):match(REGEX_COORDS)&#13;&#10;&#9;&#9;&#9;&#9;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;if z == $posz then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;local diffX, diffY = contextMenu.posx - x, contextMenu.posy - y&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &gt;= 0 and diffY &gt;= 0 then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local w, h = get(e, 'Range'):match(REGEX_RANGE)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;w, h = tonumber(w), tonumber(h)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &lt; w and diffY &lt; h then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.waypoint = e&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.waypointID = i&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;i = i + 1&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if contextMenu.waypoint then&#13;&#10;&#9;&#9;&#9;&#9;&#9;loadCategories('worldWaypoint', 'waypoint')&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;do&#13;&#10;&#9;&#9;&#9;&#9;foreach settingsentry e 'Cavebot/SpecialAreas' do&#13;&#10;&#9;&#9;&#9;&#9;&#9;local x, y, z = get(e, 'Coordinates'):match(REGEX_COORDS)&#13;&#10;&#9;&#9;&#9;&#9;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;if z == $posz then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;local diffX, diffY = contextMenu.posx - x, contextMenu.posy - y&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &gt;= 0 and diffY &gt;= 0 then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local w, h = get(e, 'Size'):match(REGEX_RANGE)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;w, h = tonumber(w), tonumber(h)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &lt; w and diffY &lt; h then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.specialArea = e&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.specialAreaName = get(e, 'Name')&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if contextMenu.specialArea then&#13;&#10;&#9;&#9;&#9;&#9;&#9;loadCategories('worldSpecialArea', 'specialArea')&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;elseif contextMenu.type == 'container' then&#13;&#10;&#9;&#9;loadCategories('containerItem', 'item')&#13;&#10;&#9;elseif contextMenu.type == 'equip' then&#13;&#10;&#9;&#9;loadCategories('equipItem', 'item')&#13;&#10;&#9;end&#13;&#10;&#9;loadCategories(contextMenu.type)&#13;&#10;&#13;&#10;&#9;-- We set it as true from the beginning so that it also removes the first&#13;&#10;&#9;-- item if it's a separator; we obviously don't want the first item to be a&#13;&#10;&#9;-- separator. NOTE: relies on the fact that ipairs() will traverse the&#13;&#10;&#9;-- table in ascending order, which isn't guaranteed by the reference manual&#13;&#10;&#9;-- but is the common implementation&#13;&#10;&#9;local lastSep = true&#13;&#10;&#13;&#10;&#9;-- Instead of removing the items at the for loop, we simply set it to nil&#13;&#10;&#9;-- and normalize it after; this is because if we did remove it, it would&#13;&#10;&#9;-- shift the indexes and end up fucking up posterior checks&#13;&#10;&#9;for i, v in ipairs(items) do&#13;&#10;&#9;&#9;local curSep = v.text == MENU_SEPARATOR&#13;&#10;&#9;&#9;if curSep and (lastSep or i == #items) then&#13;&#10;&#9;&#9;&#9;items[i] = nil&#13;&#10;&#9;&#9;&#9;maxHeight = maxHeight - 8&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;lastSep = curSep&#13;&#10;&#9;end&#13;&#10;&#9;table.normalize(items)&#13;&#10;&#13;&#10;&#9;-- No item to display, abort mission!&#13;&#10;&#9;if #items == 0 then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- The Tibia context menu has an extra width of 44 pixels for the longest&#13;&#10;&#9;-- item; here we account for that&#13;&#10;&#9;maxWidth = maxWidth + 44&#13;&#10;&#13;&#10;&#9;fullWidth, fullHeight = maxWidth + 2*borderSize, maxHeight + 2*borderSize&#13;&#10;&#9;setposition($clientwin.x + contextMenu.x - fullWidth - 2,$clientwin.y + contextMenu.y)&#13;&#10;end&#13;&#10;&#13;&#10;do -- Draw Container&#13;&#10;&#9;-- Draw main box&#13;&#10;&#9;setfillstyle('color', boxColor)&#13;&#10;&#9;setbordercolor(-1)&#13;&#10;&#9;drawrect(0, 0, fullWidth, fullHeight)&#13;&#10;&#13;&#10;&#9;-- Draw shadows&#13;&#10;&#9;setbordercolor(boxLightShadowColor)&#13;&#10;&#9;drawline(0, 0, fullWidth, 0)&#13;&#10;&#9;drawline(0, 0, 0, fullHeight)&#13;&#10;&#9;drawline(2, fullHeight - 2, fullWidth - borderSize, 0)&#13;&#10;&#9;drawline(fullWidth - 2, 2, 0, fullHeight - borderSize)&#13;&#10;&#13;&#10;&#9;setbordercolor(boxDarkShadowColor)&#13;&#10;&#9;drawline(2, 2, fullWidth - borderSize, 0)&#13;&#10;&#9;drawline(2, 2, 0, fullHeight - borderSize)&#13;&#10;&#9;drawline(0, fullHeight, fullWidth, 0)&#13;&#10;&#9;drawline(fullWidth, 0, 0, fullHeight)&#13;&#10;end&#13;&#10;&#13;&#10;do -- Draw items&#13;&#10;&#9;local curHeight = borderSize&#13;&#10;&#9;for i, v in ipairs(items) do&#13;&#10;&#9;&#9;-- Separators get special treatment here&#13;&#10;&#9;&#9;if v.text == MENU_SEPARATOR then&#13;&#10;&#9;&#9;&#9;setbordercolor(boxDarkShadowColor)&#13;&#10;&#9;&#9;&#9;drawline(borderSize, curHeight, maxWidth, 0)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setbordercolor(boxLightShadowColor)&#13;&#10;&#9;&#9;&#9;drawline(borderSize, curHeight + 1, maxWidth, 0)&#13;&#10;&#13;&#10;&#9;&#9;&#9;curHeight = curHeight + 8&#13;&#10;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- This is a dirty, dirrty attempt of making the code shorter; and&#13;&#10;&#9;&#9;&#9;-- that's what I love the most about programming&#13;&#10;&#9;&#9;&#9;local alignOffset = ((maxWidth - paddingSize - v.width) / 2) * (v.align or ALIGN_LEFT)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Set style&#13;&#10;&#9;&#9;&#9;setbordercolor(-1)&#13;&#10;&#9;&#9;&#9;setfontcolor(v.fontColor)&#13;&#10;&#9;&#9;&#9;setfillstyle('color', tern(i == highlight, v.highColor, v.backColor))&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Draw stuff&#13;&#10;&#9;&#9;&#9;v.id = drawrect(borderSize, curHeight, maxWidth, 15)&#13;&#10;&#9;&#9;&#9;drawtext(v.text, borderSize + paddingSize + alignOffset, curHeight + paddingSize)&#13;&#10;&#13;&#10;&#9;&#9;&#9;curHeight = curHeight + 19&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="ShowSpecialAreas" script="init start&#13;&#10;&#9;-- local SCRIPT_VERSION = '1.2.1'&#13;&#10;&#13;&#10;&#9;local function deleteSpecialAreaCall(menu)&#13;&#10;&#9;&#9;removespecialarea(menu.specialAreaName)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function moveSpecialAreaName()&#13;&#10;&#9;&#9;if resizedSP == nil then&#13;&#10;&#9;&#9;&#9;return tern(draggedSP == nil, 'Move Special Area', 'Stop Moving')&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function moveSpecialAreaCall(menu)&#13;&#10;&#9;&#9;if draggedSP == nil then&#13;&#10;&#9;&#9;&#9;draggedSP = menu.specialArea&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;draggedSP = nil&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function resizeSpecialAreaName()&#13;&#10;&#9;&#9;if draggedSP == nil then&#13;&#10;&#9;&#9;&#9;return tern(resizedSP == nil, 'Resize Special Area', 'Stop Resizing')&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function resizeSpecialAreaCall(menu)&#13;&#10;&#9;&#9;if resizedSP == nil then&#13;&#10;&#9;&#9;&#9;resizedSP = menu.specialArea&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;resizedSP = nil&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;registermessagehandler('contextMenu_specialArea', moveSpecialAreaName, moveSpecialAreaCall)&#13;&#10;&#9;registermessagehandler('contextMenu_specialArea', resizeSpecialAreaName, resizeSpecialAreaCall)&#13;&#10;&#9;registermessagehandler('contextMenu_specialArea', 'Delete Special Area', deleteSpecialAreaCall)&#13;&#10;&#9;registermessagehandler('contextMenu_specialArea', MENU_SEPARATOR, nil)&#13;&#10;&#13;&#10;&#9;local worldWidth, worldHeight, x, y, z, width, height, avoidance, name, policy, areaType&#13;&#10;&#9;local specialAreaRect = {}&#13;&#10;&#9;local innerRect = {}&#13;&#10;&#13;&#10;&#9;local function gettilepos(x, y, z)&#13;&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#13;&#10;&#13;&#10;&#9;&#9;if tile == nil then&#13;&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#13;&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#13;&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#13;&#10;&#9;&#9;&#9;&#9;xDiff = 0&#13;&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#13;&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#13;&#10;&#9;&#9;&#9;&#9;yDiff = 0&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#13;&#10;&#9;&#9;&#9;-- adding this as a precaution.&#13;&#10;&#9;&#9;&#9;if tile ~= nil then&#13;&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#13;&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#13;&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#13;&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#13;&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#13;&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;return tile&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function getAreaRect(x, y, w, h)&#13;&#10;&#9;&#9;local ret = {x = 0, y = 0, w = 0, h = 0}&#13;&#10;&#13;&#10;&#9;&#9;local topLeftTilePos = gettilepos(x, y, $posz)&#13;&#10;&#9;&#9;local botRightTilePos = gettilepos(x + w - 1, y + h - 1, $posz)&#13;&#10;&#13;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#13;&#10;&#9;&#9;&#9;ret.x = math.max(topLeftTilePos.left, 0)&#13;&#10;&#9;&#9;&#9;ret.y = math.max(topLeftTilePos.top, 0)&#13;&#10;&#9;&#9;&#9;ret.w = math.min(botRightTilePos.right, worldWidth) - ret.x&#13;&#10;&#9;&#9;&#9;ret.h = math.min(botRightTilePos.bottom, worldHeight) - ret.y&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;return ret&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function drawInnerRect(areaType, x, y, width, height)&#13;&#10;&#9;&#9;innerRect = {w = 0, h = 0}&#13;&#10;&#9;&#9;if areaType == 'Square (Border Only)' then&#13;&#10;&#9;&#9;&#9;innerRect = getAreaRect(x + 1, y + 1, width - 2, height - 2)&#13;&#10;&#9;&#9;elseif areaType == 'Square (Double Border)' then&#13;&#10;&#9;&#9;&#9;innerRect = getAreaRect(x + 2, y + 2, width - 4, height - 4)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if innerRect.w &gt; 0 and innerRect.h &gt; 0 then&#13;&#10;&#9;&#9;&#9;setfillstyle('color', 0xFF000000)&#13;&#10;&#9;&#9;&#9;drawroundrect(innerRect.x, innerRect.y, innerRect.w, innerRect.h, 10, 10)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;useworldhud()&#13;&#10;init end&#13;&#10;&#13;&#10;setfontstyle('Arial', 8, 75, 0xFFFFFF, 1, 0x000000)&#13;&#10;&#13;&#10;worldWidth, worldHeight = $worldwin.width - 2, $worldwin.height - 2&#13;&#10;&#13;&#10;foreach settingsentry e 'Cavebot/SpecialAreas' do&#13;&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match('.-(%d+).-(%d+).-(%d+)')&#13;&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#13;&#10;&#13;&#10;&#9;if z == $posz then&#13;&#10;&#9;&#9;width, height = getsetting(e, 'Size'):match('(%d+).-(%d+)')&#13;&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#13;&#10;&#13;&#10;&#9;&#9;specialAreaRect = getAreaRect(x, y, width, height)&#13;&#10;&#9;&#9;if specialAreaRect.w &gt; 0 and specialAreaRect.h &gt; 0 then&#13;&#10;&#9;&#9;&#9;avoidance = tonumber(getsetting(e, 'Avoidance'))&#13;&#10;&#9;&#9;&#9;areaType = getsetting(e, 'Type')&#13;&#10;&#9;&#9;&#9;name = getsetting(e, 'Name')&#13;&#10;&#9;&#9;&#9;policy = getsetting(e, 'Policy'):gsub('[^A-Z]', '')&#13;&#10;&#13;&#10;&#9;&#9;&#9;setfillstyle('color', color(255, 0, 0, math.round(100 - (avoidance / 4))))&#13;&#10;&#9;&#9;&#9;drawroundrect(specialAreaRect.x, specialAreaRect.y, specialAreaRect.w, specialAreaRect.h, 10, 10)&#13;&#10;&#9;&#9;&#9;drawInnerRect(areaType, x, y, width, height)&#13;&#10;&#13;&#10;&#9;&#9;&#9;if specialAreaRect.w &gt; 10 then&#13;&#10;&#9;&#9;&#9;&#9;drawtext(&#13;&#10;&#9;&#9;&#9;&#9;&#9;string.fit(name, specialAreaRect.w - 10, '...', true),&#13;&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.x + 5,&#13;&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.y + 3&#13;&#10;&#9;&#9;&#9;&#9;)&#13;&#10;&#9;&#9;&#9;&#9;drawtext(&#13;&#10;&#9;&#9;&#9;&#9;&#9;string.fit(policy, specialAreaRect.w - 10, '...', true),&#13;&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.x + 5,&#13;&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.y + 15&#13;&#10;&#9;&#9;&#9;&#9;)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;if contextmenuinfo() == nil then&#13;&#10;&#9;if draggedSP then&#13;&#10;&#9;&#9;set(draggedSP, 'Coordinates', string.format('x:%i, y:%i, z:%i', $cursorinfo.x, $cursorinfo.y, $cursorinfo.z))&#13;&#10;&#9;elseif resizedSP then&#13;&#10;&#9;&#9;local x, y = get(resizedSP, 'Coordinates'):match(REGEX_COORDS)&#13;&#10;&#9;&#9;x, y = tonumber(x), tonumber(y)&#13;&#10;&#13;&#10;&#9;&#9;set(resizedSP, 'Size', string.format('%i x %i', math.max(1, 1 + ($cursorinfo.x - x)) , math.max(1, 1 + ($cursorinfo.y - y))))&#13;&#10;&#9;end&#13;&#10;end" enabled="no" refreshRate="100"/>
            <HUDScript name="ShowWaypoints" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.2.1'&#10;&#10;&#9;local waypointColors = {&#10;&#9;&#9;walk    = 0xAAF200,&#10;&#9;&#9;node    = 0x2A0736,&#10;&#9;&#9;stand   = 0x00AACC,&#10;&#9;&#9;shovel  = 0xEB8540,&#10;&#9;&#9;rope    = 0xFFCC00,&#10;&#9;&#9;machete = 0x003366,&#10;&#9;&#9;ladder  = 0xC55186,&#10;&#9;&#9;use     = 0x36693E,&#10;&#9;&#9;action  = 0x00FFFF,&#10;&#9;&#9;lure    = 0xCCCCCC&#10;&#9;}&#10;&#10;&#9;local function deleteWaypointCall(menu)&#10;&#9;&#9;removewaypoint(menu.waypointID)&#10;&#9;end&#10;&#10;&#9;local function moveWaypointName()&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;return tern(draggedWpt == nil, 'Move Waypoint', 'Stop Moving')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function moveWaypointCall(menu)&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;draggedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;draggedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointName()&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;return tern(resizedWpt == nil, 'Resize Waypoint', 'Stop Resizing')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointCall(menu)&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;resizedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;resizedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;registermessagehandler('contextMenu_waypoint', moveWaypointName, moveWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', resizeWaypointName, resizeWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', 'Delete Waypoint', deleteWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', MENU_SEPARATOR, nil)&#10;&#10;&#9;local xOffset, yOffset, worldWidth, worldHeight, x, y, z, topLeftTilePos,&#10;&#9;      botRightTilePos, width, height, text, label&#10;&#9;local waypointRect = {}&#10;&#10;&#9;function gettilepos(x, y, z)&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#10;&#10;&#9;&#9;if tile == nil then&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#10;&#9;&#9;&#9;&#9;xDiff = 0&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#10;&#9;&#9;&#9;&#9;yDiff = 0&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#10;&#9;&#9;&#9;-- adding this as a precaution.&#10;&#9;&#9;&#9;if tile ~= nil then&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#10;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return tile&#10;&#9;end&#10;&#10;&#9;useworldhud()&#10;init end&#10;&#10;setfontstyle('Tahoma', 7, 75, 0xFFFFFF, 1, 0x000000)&#10;&#10;xOffset, yOffset = $worldwin.left - $clientwin.left, $worldwin.top - $clientwin.top&#10;worldWidth, worldHeight = $worldwin.right - $worldwin.left - 2, $worldwin.bottom - $worldwin.top - 2&#10;&#10;local i = 0&#10;foreach settingsentry e 'Cavebot/Waypoints' do&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match(REGEX_SPA_COORDS)&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;if z == $posz then&#10;&#9;&#9;width, height = getsetting(e, 'Range'):match(REGEX_SPA_SIZE)&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#10;&#10;&#9;&#9;topLeftTilePos = gettilepos(x, y, z)&#10;&#9;&#9;botRightTilePos = gettilepos(x + width - 1, y + height - 1, z)&#10;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#10;&#9;&#9;&#9;waypointRect.left   = math.max(topLeftTilePos.left  , 0)&#10;&#9;&#9;&#9;waypointRect.top    = math.max(topLeftTilePos.top   , 0)&#10;&#9;&#9;&#9;waypointRect.right  = math.min(botRightTilePos.right , worldWidth)&#10;&#9;&#9;&#9;waypointRect.bottom = math.min(botRightTilePos.bottom, worldHeight)&#10;&#9;&#9;&#9;waypointRect.width  = waypointRect.right - waypointRect.left&#10;&#9;&#9;&#9;waypointRect.height = waypointRect.bottom - waypointRect.top&#10;&#10;&#9;&#9;&#9;if waypointRect.width &gt; 0 and waypointRect.height &gt; 0 then&#10;&#9;&#9;&#9;&#9;label = getsetting(e, 'Label')&#10;&#9;&#9;&#9;&#9;text = tern(#label == 0, tostring(i), label .. ' (' .. i .. ')')&#10;&#9;&#9;&#9;&#9;wptType = getsetting(e, 'Type')&#10;&#10;&#9;&#9;&#9;&#9;setfillstyle('color', (waypointColors[wptType:lower()] or 0) + (math.floor(2.55*50)*16777216))&#10;&#9;&#9;&#9;&#9;drawroundrect(&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.left,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.top,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.width,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.height,&#10;&#9;&#9;&#9;&#9;&#9;10, 10&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;&#9;if waypointRect.width &gt; 10 then&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(text, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 3&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(wptType, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 15&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;i = i + 1&#10;end&#10;&#10;if contextmenuinfo() == nil then&#10;&#9;if draggedWpt then&#10;&#9;&#9;set(draggedWpt, 'Coordinates', string.format('x:%i, y:%i, z:%i', $cursorinfo.x, $cursorinfo.y, $cursorinfo.z))&#10;&#9;elseif resizedWpt then&#10;&#9;&#9;local x, y = get(resizedWpt, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;x, y = tonumber(x), tonumber(y)&#10;&#10;&#9;&#9;set(resizedWpt, 'Range', string.format('%i x %i', math.max(1, 1 + ($cursorinfo.x - x)) , math.max(1, 1 + ($cursorinfo.y - y))))&#10;&#9;end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="GeneralInfo" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.0.0'&#10;&#9;&#10;&#9;local fontsize = 10&#10;&#9;local fontspacing = fontsize + 6&#10;&#9;setfontstyle(&quot;MS Serif&quot;, 10, 100, 0xCCCCCC, 1, 0x555555)&#10;&#9;&#10;&#9;local displayontitle = true -- set it to false to display it as a rectangular info instead&#10;&#9;local maxsize = 220&#10;&#9;&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;auto(100)&#10;local info = {&#10;&#9;{color = 0xff5577, text = 'Exp/h: ', value = num($exphour)},&#10;&#9;{color = 0x77ff77, text = 'Level up: ', value = num($exptonextlevel) .. ' / ' .. time(timetolevel())},&#10;&#9;{color = 0x44eeff, text = 'Stamina: ', value = num($stamina)},&#10;&#9;{color = 0xcccccc, text = 'Ping: ', value = num($pingaverage)},&#10;&#9;{color = 0xc6b2ea, text = 'ItemID: ', value = $cursorinfo.id},&#10;&#9;{color = 0xc6b2ea, text = 'Posx: ', value = $cursorinfo.x},&#10;&#9;{color = 0xc6b2ea, text = 'PosY: ', value = $cursorinfo.y},&#10;}&#10;&#10;if (displayontitle) then&#10;&#9;local x = 0&#10;&#9;for _,j in ipairs(info) do&#10;&#9;&#9;local str = j.text .. j.value&#10;&#9;&#9;local w = measurestring(str)&#10;&#9;&#9;&#10;&#9;&#9;setfontcolor(j.color)&#10;&#9;&#9;drawtext(str, x, 0)&#10;&#9;&#9;x = x + w + 50&#10;&#9;end&#10;&#10;&#9;setposition($clientwin.left + 30, $clientwin.top - 21)&#10;else&#10;&#9;for i,j in ipairs(info) do&#10;&#9;&#9;local w = measurestring(j.value)&#10;&#9;&#9;local posy = (i-1)*fontspacing&#10;&#9;&#9;&#10;&#9;&#9;setfontcolor(j.color)&#10;&#9;&#9;drawtext(j.text, 2, posy)&#10;&#9;&#9;drawtext(j.value, maxsize-w, posy)&#10;&#9;end&#10;&#9;&#10;&#9;setposition($worldwin.left+20, $worldwin.top+8)&#10;end" enabled="yes" refreshRate="100"/>
        </HUDScripts>
    </HUDs>
    <GeneralSettings>
        <Input>
            <MouseOption mouseMode="Simulate Mouse"/>
            <MouseOption scrollMode="Use mouse wheel"/>
            <MouseOption stuckCursorPolicy="If Cavebot on, Release Instantly"/>
            <MouseOption moveSpeed="Instantaneous"/>
            <MouseOption clickWaitMin="30" clickWaitMax="30"/>
            <KeyboardOption keyboardMode="Simulate Keyboard"/>
            <KeyboardOption stuckCtrlShiftPolicy="If Cavebot on, Release Instantly"/>
            <KeyboardOption typeWaitMin="30" typeWaitMax="30"/>
            <KeyboardOption pressWaitMin="30" pressWaitMax="30"/>
            <FocusOption focusPolicy="Don't auto-focus"/>
            <FocusOption openMenuPolicy="Confirm if cavebotting"/>
        </Input>
    </GeneralSettings>
    <Alerts disableSounds="no">
        <alert name="Player On Screen" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Player Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Monster Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Private Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Default Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="GM Detected" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Disconnected" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Character Stuck" playSound="no" pauseBot="no" logout="no" standTime="30000"/>
        <alert name="Health Below" playSound="no" pauseBot="no" logout="no" healthPercent="50"/>
        <alert name="Mana Below" playSound="no" pauseBot="no" logout="no" manaPercent="50"/>
        <alert name="Unjust Kill" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Enemies Online" playSound="no" pauseBot="no" logout="no" enemiesCount="50"/>
    </Alerts>
    <Cavebot enabled="yes">
        <Options>
            <Option shovel="9594"/>
            <Option rope="3003"/>
            <Option machete="9594"/>
            <Option pick="9594"/>
            <Option nodeRange="4"/>
            <Option pauseBotOnDeath="yes"/>
            <Option refillAmmo="no" refillAmmoMin="30" refillAmmoMax="70"/>
            <Option autoMount="no"/>
            <Option fireAvoidanceMin="0" fireAvoidanceMax="0"/>
            <Option energyAvoidanceMin="0" energyAvoidanceMax="0"/>
            <Option poisonAvoidanceMin="0" poisonAvoidanceMax="0"/>
            <Option walkThroughPlayers="yes"/>
            <Option walkMethod="Walk With Arrow Keys"/>
            <Option walkableItems="7, 140, 404, 831, 832, 833, 834, 883, 1020, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2131, 2132, 2133, 2134, 2135, 2314, 2315, 2316, 2319, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2431, 2432, 2433, 2434, 2441, 2442, 2443, 2444, 2469, 2471, 2472, 2473, 2478, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2519, 2523, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2981, 2982, 2983, 2984, 2985, 2987, 2988, 3503, 3504, 3514, 3807, 5086, 5087, 5088, 6114, 6115, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6371, 6372, 7864, 8455, 8763, 9061, 9062, 10209, 10216, 10286, 10287, 10288, 11009, 11010, 11011, 11800, 11801, 11802, 11803, 11804, 11805, 11806, 11807, 11808, 11809, 11810, 17972"/>
            <Option mapWalkDistMin="20" mapWalkDistMax="30"/>
            <Option userOptionsScript="    {&#10;    &quot;type&quot;: &quot;scriptinfo&quot;,&#10;    &quot;name&quot;: &quot;RP - Annihilator by Yoko&quot;,&#10;    &quot;version&quot;: &quot;1.0.0&quot;&#10;    },&#10;&#9;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;name&quot; : &quot;emergency button&quot;,&#10;&quot;text&quot; : &quot;..:: Emergency button ::.. This button automatically stop all cavebot options&quot;,&#10;&quot;description&quot; : &quot;If you click that button you need to restart script to make it work again&quot;&#10;},&#10;{&quot;type&quot; : &quot;separator&quot;},&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;text&quot; : &quot;Reminder&quot;,&#10;    &quot;name&quot; : &quot;Reminder&quot;,&#10;    &quot;children&quot; : [&#10;&#10;&#9;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;name&quot; : &quot;&lt;-- Remember to change rope!&quot;&#10;}&#10;    ]&#10;    },&#10;{&#10;&#10;&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Character Backpacks Setup&quot;,&#10;    &quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;mainbp&quot;,&#10;&quot;text&quot; : &quot;Main BP&quot;,&#10;&quot;description&quot; : &quot;Backpack on character's back&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;ammobp&quot;,&#10;&quot;text&quot; : &quot;Ammo BP&quot;,&#10;&quot;description&quot; : &quot;Backpack with supplies inside main backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;potionbp&quot;,&#10;&quot;text&quot; : &quot;Potion BP&quot;,&#10;&quot;description&quot; : &quot;Backpack with potions inside main backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;lootbp&quot;,&#10;&quot;text&quot; : &quot;Loot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for loot inside main backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;takera&quot;,&#10;&quot;text&quot; : &quot;Take Amulets from Depot&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will equip those eq while running to Annihilon&quot;,&#10;&quot;value&quot; : false&#9;&#10;},&#10;&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;atype&quot;,&#10;&quot;text&quot; : &quot;Amulet Type&quot;,&#10;&quot;description&quot; : &quot;Type of amulet to take from depot&quot;,&#10; &quot;items&quot; : [&quot;No Amulet&quot;,&quot;Bronze Amulet [[item: Bronze Amulet]]&quot;, &quot;Stone Skin Amulet[[item: Stone Skin Amulet]]&quot;,&quot;Prismatic Necklace[[item: Prismatic Necklace]]&quot;]&#10;                },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;aamount&quot;,&#10;    &quot;text&quot; : &quot;Amount of amulets to take&quot;,&#10;    &quot;description&quot; : &quot;Amount of amulets to take&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 10,&#10;    &quot;value&quot; : 5&#10;    },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;rabp&quot;,&#10;&quot;text&quot; : &quot;Amulet BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for amulets inside main backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;text&quot; : &quot;Bot will equip those items while running through seals.&quot;,&#10;&quot;name&quot; : &quot;costambutton&quot;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;stopbotifnotra&quot;,&#10;&quot;text&quot; : &quot;Stop bot if have not amulets in depot&quot;,&#10;&quot;description&quot; : &quot;If Checked, you stop bot if have not amulets in depot&quot;,&#10;&quot;value&quot; : false&#9;&#10;}&#10;    ]&#10;    },&#10;&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Depot Backpacks Setup&quot;,&#10;&#9;&quot;column&quot; : 2,&#10;    &quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;maindpbp&quot;,&#10;&quot;text&quot; : &quot;Main Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack inside depot chest&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;stackdpbp&quot;,&#10;&quot;text&quot; : &quot;Stackable Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for stackable items inside main depot backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;raredpbp&quot;,&#10;&quot;text&quot; : &quot;Rare Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for rare items inside main depot backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;ringdpbp&quot;,&#10;&quot;text&quot; : &quot;Dwarven Ring Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for Dwarven Rings inside depot chest&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;ammodpbp&quot;,&#10;&quot;text&quot; : &quot;Ammo Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for Ammunition inside depot chest&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{ &quot;type&quot; : &quot;separator&quot;,&#10;&quot;name&quot; : &quot;sep&quot;&#10;},&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;ringamuletdpbp&quot;,&#10;&quot;text&quot; : &quot;Ring / Amulet Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for extra rings and amulets inside depot chest&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                }&#10;    ]&#10;    },&#10;    {&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Potions Setup&quot;,&#10;&#9;&quot;column&quot;:2,&#10;    &quot;children&quot; : [&#10;    {&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;maxsmp&quot;,&#10;    &quot;text&quot; : &quot;Max Strong Mana potion&quot;,&#10;    &quot;description&quot; : &quot;Amount of strong mana potions to buy&quot;,&#10;    &quot;suffix&quot; : &quot; SMP&quot;,&#10;    &quot;min&quot; : 100,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 700&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;minsmp&quot;,&#10;    &quot;text&quot; : &quot;Min Strong Mana potion&quot;,&#10;    &quot;description&quot; : &quot;Amount of strong mana potions to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; MP&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 100&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;maxgsp&quot;,&#10;    &quot;text&quot; : &quot;Max Great Spirit Potions&quot;,&#10;    &quot;description&quot; : &quot;Amount of great spirit potions to buy&quot;,&#10;    &quot;suffix&quot; : &quot; GSP&quot;,&#10;    &quot;min&quot; : 10,&#10;    &quot;max&quot; : 1000,&#10;    &quot;value&quot; : 100&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;mingsp&quot;,&#10;    &quot;text&quot; : &quot;Min Great Spirit Potions&quot;,&#10;    &quot;description&quot; : &quot;Amount of great spirit potions to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; GSP&quot;,&#10;    &quot;min&quot; : 0,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 30&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;maxfb&quot;,&#10;    &quot;text&quot; : &quot;Max Fire Bomb Runes&quot;,&#10;    &quot;description&quot; : &quot;Amount of great spirit potions to buy&quot;,&#10;    &quot;suffix&quot; : &quot; FB&quot;,&#10;    &quot;min&quot; : 0,&#10;    &quot;max&quot; : 10000,&#10;    &quot;value&quot; : 300&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;minfb&quot;,&#10;    &quot;text&quot; : &quot;Min Fire Bomb Runes&quot;,&#10;    &quot;description&quot; : &quot;Amount of great spirit potions to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; FB&quot;,&#10;    &quot;min&quot; : 0,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 30&#10;    },&#10;&#10;&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;ammotype&quot;,&#10;&quot;text&quot; : &quot;Ammo type&quot;,&#10;&quot;description&quot; : &quot;Ammunition type to use&quot;,&#10;&quot;items&quot; : [&quot;Prismatic Bolt[[item: Prismatic Bolt]]&quot;,&quot;Crystalline Arrow[[item: Crystalline Arrow]]&quot;,&quot;Infernal Bolt[[item: Infernal Bolt]]&quot;]&#10;                },&#10;&#9;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;name&quot; : &quot;infoammob&quot;,&#10;&quot;text&quot; : &quot;Rembmber that if you want to use infernal bolt, you need to enable 'Take ammo from Depot'&quot;&#10;},&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;maxammo&quot;,&#10;    &quot;text&quot; : &quot;Max Ammo&quot;,&#10;    &quot;description&quot; : &quot;Amount of ammo to buy&quot;,&#10;    &quot;suffix&quot; : &quot; Ammo&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 900&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;minammo&quot;,&#10;    &quot;text&quot; : &quot;Min Ammo&quot;,&#10;    &quot;description&quot; : &quot;Amount of ammo to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; Ammo&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 130&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;mincap&quot;,&#10;    &quot;text&quot; : &quot;Min Cap&quot;,&#10;    &quot;description&quot; : &quot;Amount of cap to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; Cap&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 130&#10;    }&#10;    ]&#10;    },&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Extra Options&quot;,&#9;&#10;&#9;&quot;column&quot; : 1,&#10;    &quot;children&quot; : [&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;takeammofromdp&quot;,&#10;&quot;text&quot; : &quot;Take ammo from Depot&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will Try to take ammunition from depot&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;smartmp&quot;,&#10;&quot;text&quot; : &quot;Smart mana potions at way to anni&quot;,&#10;&quot;description&quot; : &quot;If checked then bot will change min % of mana points to use strong mana potion to avoid freezing while runnign.&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;useshieldandweapon&quot;,&#10;&quot;text&quot; : &quot;Use Shield and Weapon while running to Annihilon&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will equip those eq while running to Annihilon&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;&#10;{&#10;&#9;&quot;type&quot; : &quot;lineedit&quot;,&#10;&quot;name&quot; : &quot;anniweapontype&quot;,&#10;&quot;text&quot; : &quot;Weapon to use on Anni (bow / crossbow)&quot;,&#10;&quot;description&quot; : &quot;Write name of weapon to equipt while atacking Annihilon&quot;,&#10;&quot;value&quot; : &quot;Royal Crossbow&quot;&#9;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;lineedit&quot;,&#10;&quot;name&quot; : &quot;shieldtype&quot;,&#10;&quot;text&quot; : &quot;Shield to use on way&quot;,&#10;&quot;description&quot; : &quot;Write name of shield to equipt while running to Annihilon&quot;,&#10;&quot;value&quot; : &quot;Mastermind Shield&quot;&#9;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;lineedit&quot;,&#10;&quot;name&quot; : &quot;weapontype&quot;,&#10;&quot;text&quot; : &quot;Weapon to use on way&quot;,&#10;&quot;description&quot; : &quot;Write name of weapon to equipt while running to Annihilon&quot;,&#10;&quot;value&quot; : &quot;Assassin Star&quot;&#9;&#10;},&#10;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;text&quot; : &quot;Keep those items in main backpack&quot;,&#10;&quot;name&quot; : &quot;weaponreminder&quot;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;pvpe&quot;,&#10;&quot;text&quot; : &quot;Server PvPe&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will consider players with&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;traymessages&quot;,&#10;&quot;text&quot; : &quot;Tray Messages&quot;,&#10;&quot;description&quot; : &quot;When windbot is minimized to tray (next to clock) then you will be notified about advance in level / skill, task done, someone on spawn, someone attack you, character death&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;&#10;&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;usealertonspawn&quot;,&#10;&quot;text&quot; : &quot;Player On Spawn Alert&quot;,&#10;&quot;description&quot; : &quot;If Checked, bot will alert you if someone enter spawn&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;keephaste&quot;,&#10;&quot;text&quot; : &quot;Keep Haste&quot;,&#10;&quot;description&quot; : &quot;If you enable this checkbox then character will use utani hur if he have not speed up&quot;,&#10;&quot;value&quot; : true&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;usefwb&quot;,&#10;&quot;text&quot; : &quot;Use Firewalker Boots&quot;,&#10;&quot;description&quot; : &quot;If you enable this checkbox then character will use firewalker boots on annihilion&quot;,&#10;&quot;value&quot; : true&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;lineedit&quot;,&#10;&quot;name&quot; : &quot;normalbootsname&quot;,&#10;&quot;text&quot; : &quot;Normal Boots Name&quot;,&#10;&quot;description&quot; : &quot;Select normal boots name&quot;,&#10;&quot;value&quot; : &quot;Boots Of Haste&quot;&#9;&#10;&#10;}&#10;]&#10;},&#10;{&#10;&quot;type&quot; : &quot;group&quot;,&#10;&quot;name&quot; : &quot;Sell Items On Market&quot;, &#10;&quot;column&quot; : 1, &#10;&quot;checkable&quot; : true,&#10;&quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;name&quot; : &quot;Enable checkbox to see market items list&quot;,&#10;&quot;text&quot; : &quot;Enable checkbox to see market items list&quot;,&#10;&quot;description&quot; : &quot;If You select this checkbox then u will see list of items to sell&quot;&#10;},&#10;&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;createnewoffer&quot;,&#10;&quot;text&quot; : &quot;Create new offers in market&quot;,&#10;&quot;description&quot; : &quot;Character will create new offer in market if he couldnt sell items for their price&quot;,&#10;&quot;value&quot; : false&#10;},&#10;&#9;{&#10;&quot;type&quot; : &quot;separator&quot;&#10;},&#10;&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellsoulorb&quot;,&#10;&quot;text&quot; : &quot;Sell Soul Orb&quot;,&#10;&quot;description&quot; : &quot;Sell Soul Orb  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellinfernalbolt&quot;,&#10;&quot;text&quot; : &quot;Sell Infernal Bolt&quot;,&#10;&quot;description&quot; : &quot;Sell Infernal Bolt on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgreathealthpotion&quot;,&#10;&quot;text&quot; : &quot;Sell Great Health Potion&quot;,&#10;&quot;description&quot; : &quot;Sell Great Health Potion  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellassassinstar&quot;,&#10;&quot;text&quot; : &quot;Sell Assassin Star&quot;,&#10;&quot;description&quot; : &quot;Sell Assassin Star  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgiantshimmeringpearl&quot;,&#10;&quot;text&quot; : &quot;Sell Giant Shimmering Pearl&quot;,&#10;&quot;description&quot; : &quot;Sell Giant Shimmering Pearl  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;selldemonhorn&quot;,&#10;&quot;text&quot; : &quot;Sell Demon Horn&quot;,&#10;&quot;description&quot; : &quot;Sell Demon Horn  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellberserkpotion&quot;,&#10;&quot;text&quot; : &quot;Sell Berserk Potion&quot;,&#10;&quot;description&quot; : &quot;Sell Berserk Potion  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellmastermindpotion&quot;,&#10;&quot;text&quot; : &quot;Sell Mastermind Potion&quot;,&#10;&quot;description&quot; : &quot;Sell Mastermind Potion  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellultimatehealthpotion&quot;,&#10;&quot;text&quot; : &quot;Sell Ultimate Health Potion&quot;,&#10;&quot;description&quot; : &quot;Sell Ultimate Health Potion  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgreatmanapotion&quot;,&#10;&quot;text&quot; : &quot;Sell Great Mana Potion&quot;,&#10;&quot;description&quot; : &quot;Sell Great Mana Potion  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgoldingot&quot;,&#10;&quot;text&quot; : &quot;Sell Gold Ingot&quot;,&#10;&quot;description&quot; : &quot;Sell Gold Ingot  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgreatspiritpotion&quot;,&#10;&quot;text&quot; : &quot;Sell Great Spirit Potion&quot;,&#10;&quot;description&quot; : &quot;Sell Great Spirit Potion  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellheavymace&quot;,&#10;&quot;text&quot; : &quot;Sell Heavy Mace&quot;,&#10;&quot;description&quot; : &quot;Sell Heavy Mace  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellguardianshield&quot;,&#10;&quot;text&quot; : &quot;Sell Guardian Shield&quot;,&#10;&quot;description&quot; : &quot;Sell Guardian Shield  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;selltowershield&quot;,&#10;&quot;text&quot; : &quot;Sell Tower Shield&quot;,&#10;&quot;description&quot; : &quot;Sell Tower Shield  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellcrownshield&quot;,&#10;&quot;text&quot; : &quot;Sell Crown Shield&quot;,&#10;&quot;description&quot; : &quot;Sell Crown Shield  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellpaladinarmor&quot;,&#10;&quot;text&quot; : &quot;Sell Paladin Armor&quot;,&#10;&quot;description&quot; : &quot;Sell Paladin Armor  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellguardianhalberd&quot;,&#10;&quot;text&quot; : &quot;Sell Guardian Halberd&quot;,&#10;&quot;description&quot; : &quot;Sell Guardian Halberd  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellvioletgem&quot;,&#10;&quot;text&quot; : &quot;Sell Violet Gem&quot;,&#10;&quot;description&quot; : &quot;Sell Violet Gem  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellbluegem&quot;,&#10;&quot;text&quot; : &quot;Sell Blue Gem&quot;,&#10;&quot;description&quot; : &quot;Sell Blue Gem  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgreengem&quot;,&#10;&quot;text&quot; : &quot;Sell Green Gem,&quot;,&#10;&quot;description&quot; : &quot;Sell Green Gem on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellyellowgem&quot;,&#10;&quot;text&quot; : &quot;Sell Yellow Gem&quot;,&#10;&quot;description&quot; : &quot;Sell Yellow Gem  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellredgem&quot;,&#10;&quot;text&quot; : &quot;Sell Red Gem&quot;,&#10;&quot;description&quot; : &quot;Sell Red Gem on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;selldemonshield&quot;,&#10;&quot;text&quot; : &quot;Sell Demon Shield&quot;,&#10;&quot;description&quot; : &quot;Sell Demon Shield  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellonyxflail&quot;,&#10;&quot;text&quot; : &quot;Sell Onyx Flail&quot;,&#10;&quot;description&quot; : &quot;Sell Onyx Flail  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellobsidiantruncheon&quot;,&#10;&quot;text&quot; : &quot;Sell Obsidian Truncheon&quot;,&#10;&quot;description&quot; : &quot;Sell Obsidian Truncheon  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;selldiamondsceptre&quot;,&#10;&quot;text&quot; : &quot;Sell Diamond Sceptre&quot;,&#10;&quot;description&quot; : &quot;Sell Diamond Sceptre  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellmastermindshield&quot;,&#10;&quot;text&quot; : &quot;Sell Mastermind Shield&quot;,&#10;&quot;description&quot; : &quot;Sell Mastermind Shield  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellskullcrackerarmor&quot;,&#10;&quot;text&quot; : &quot;Sell Skullcracker Armor&quot;,&#10;&quot;description&quot; : &quot;Sell Skullcracker Armor on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;selldemonbone&quot;,&#10;&quot;text&quot; : &quot;Sell Demonbone&quot;,&#10;&quot;description&quot; : &quot;Sell Demonbone  on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellthestomper&quot;,&#10;&quot;text&quot; : &quot;Sell The Stomper&quot;,&#10;&quot;description&quot; : &quot;Sell The Stomper on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;selllavosarmor&quot;,&#10;&quot;text&quot; : &quot;Sell Lavos Armor&quot;,&#10;&quot;description&quot; : &quot;Sell Lavos Armor  on market&quot;,&#10;&quot;value&quot; : true&#10;}&#10;]&#10;},&#10;{&#10;&quot;type&quot; : &quot;group&quot;,&#10;&quot;name&quot; : &quot;Market Prices&quot;, &#10;&quot;column&quot; : 2, &#10;&quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricesoulorb&quot;,&#10;&quot;text&quot; : &quot;Price Soul Orb&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 25&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceinfernalbolt&quot;,&#10;&quot;text&quot; : &quot;Price Infernal Bolt&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 40&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceassassinstar&quot;,&#10;&quot;text&quot; : &quot;Price Assassin Star&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0,&#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 100&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricegiantshimmeringpearl&quot;,&#10;&quot;text&quot; : &quot;Price Giant Shimmering Pearl&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 3000&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricedemonhorn&quot;,&#10;&quot;text&quot; : &quot;Price Demon Horn&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 1000&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceberserkpotion&quot;,&#10;&quot;text&quot; : &quot;Price Berserk Potion&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 500&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricemastermindpotion&quot;,&#10;&quot;text&quot; : &quot;Price Mastermind Potion&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 500&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceultimatehealthpotion&quot;,&#10;&quot;text&quot; : &quot;Price Ultimate Health Potion&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 300&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricegreatmanapotion&quot;,&#10;&quot;text&quot; : &quot;Price Great Mana Potion&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 100&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricegoldingot&quot;,&#10;&quot;text&quot; : &quot;Price Gold Ingot&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 5000&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricegreatspiritpotion&quot;,&#10;&quot;text&quot; : &quot;Price Great Spirit Potion&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 150&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceheavymace&quot;,&#10;&quot;text&quot; : &quot;Price Heavy Mace&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0,&#10; &quot;max&quot; : 9999999,&#10; &quot;value&quot; : 50000&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceguardianshield&quot;,&#10;&quot;text&quot; : &quot;Price Guardian Shield&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 1900&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricetowershield&quot;,&#10;&quot;text&quot; : &quot;Price Tower Shield&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 7900&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricecrownshield&quot;,&#10;&quot;text&quot; : &quot;Price Crown Shield&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 7900&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricepaladinarmor&quot;,&#10;&quot;text&quot; : &quot;Price Paladin Armor&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 14800&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceguardianhalberd&quot;,&#10;&quot;text&quot; : &quot;Price Guardian Halberd&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 10900&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricevioletgem&quot;,&#10;&quot;text&quot; : &quot;Price Violet Gem&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0,&#10; &quot;max&quot; : 9999999,&#10; &quot;value&quot; : 10000&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricebluegem&quot;,&#10;&quot;text&quot; : &quot;Price Blue Gem&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 5000&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricegreengem&quot;,&#10;&quot;text&quot; : &quot;Price Green Gem,&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 5000&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceyellowgem&quot;,&#10;&quot;text&quot; : &quot;Price Yellow Gem&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 1000&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceredgem&quot;,&#10;&quot;text&quot; : &quot;Price Red Gem&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 1000&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricedemonshield&quot;,&#10;&quot;text&quot; : &quot;Price Demon Shield&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 29800&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceonyxflail&quot;,&#10;&quot;text&quot; : &quot;Price Onyx Flail&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 21900&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceobsidiantruncheon&quot;,&#10;&quot;text&quot; : &quot;Price Obsidian Truncheon&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 1000000&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricediamondsceptre&quot;,&#10;&quot;text&quot; : &quot;Price Diamond Sceptre&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 2900&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricemastermindshield&quot;,&#10;&quot;text&quot; : &quot;Price Mastermind Shield&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 49800&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceskullcrackerarmor&quot;,&#10;&quot;text&quot; : &quot;Price Skullcracker Armor&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 17800&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricedemonbone&quot;,&#10;&quot;text&quot; : &quot;Price Demonbone&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 3000000&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricethestomper&quot;,&#10;&quot;text&quot; : &quot;Price The Stomper&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 4000000&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricelavosarmor&quot;,&#10;&quot;text&quot; : &quot;Price Lavos Armor&quot;,&#10;&quot;suffix&quot; : &quot;GP&quot;,&#10;&quot;min&quot; : 0, &#10;&quot;max&quot; : 9999999,&#10;&quot;value&quot; : 1500000&#10;}&#10;]&#10;}"/>
        </Options>
        <SpecialAreas>
            <Area name="SArea" x="33192" y="31691" z="11" type="Square (Filled)" width="11" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea1" x="33201" y="31690" z="11" type="Square (Filled)" width="1" height="11" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea2" x="33192" y="31699" z="11" type="Square (Filled)" width="11" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea3" x="33193" y="31690" z="11" type="Square (Filled)" width="1" height="11" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea4" x="32657" y="31681" z="8" type="Square (Filled)" width="11" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea5" x="32666" y="31680" z="8" type="Square (Filled)" width="1" height="11" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea6" x="32657" y="31689" z="8" type="Square (Filled)" width="11" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea7" x="32658" y="31680" z="8" type="Square (Filled)" width="1" height="11" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea9" x="33188" y="31682" z="14" type="Square (Filled)" width="1" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Cavebot" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
        </SpecialAreas>
        <CavebotScripts/>
        <WaypointSection name="Refill">
            <Waypoint type="Node" x="33171" y="31812" z="7" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Action" x="33171" y="31796" z="8" rangeX="1" rangeY="1" label="healing" script="setsetting('PotionHealer/Rules/GSP/ConditionValue', '60 to 60%')&#10;setsetting('PotionHealer/Rules/GSP/ExtraConditionValue', '90 to 90%')&#10;setsetting('Cavebot/WalkingMethod', 'Walk With Arrow Keys')&#10;setsetting('Looting/Enabled', 'yes')&#10;setsetting('SpellHealer/Enabled', 'yes')"/>
            <Waypoint type="Stand" x="33169" y="31812" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33171" y="31808" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33171" y="31800" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33171" y="31800" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33171" y="31800" z="8" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;start&quot;)&#10;end"/>
            <Waypoint type="Action" x="33171" y="31800" z="8" rangeX="1" rangeY="1" script="depot()"/>
            <Waypoint type="Action" x="33171" y="31797" z="8" rangeX="1" rangeY="1" script="if ammotype == &quot;Infernal Bolt&quot; and itemcount(ammotype, ammobp) &lt; maxammo then&#10;messagebox(&quot;HEY!&quot;,&quot;You have not enought infernal bolts inside ammo depot backpack and character cant buy them anywhere please put more infernal bolts inside ammo depot backpack or change ammo type&quot;)&#10;setsetting('Cavebot/Enabled', 'no')&#10;end"/>
            <Waypoint type="Stand" x="33170" y="31805" z="8" rangeX="1" rangeY="1" label="gotobank"/>
            <Waypoint type="Stand" x="33170" y="31812" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33169" y="31812" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33173" y="31803" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33173" y="31803" z="7" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gotobank&quot;)&#10;end"/>
            <Waypoint type="Action" x="33173" y="31803" z="7" rangeX="1" rangeY="1" script="withdrawmoney()"/>
            <Waypoint type="Stand" x="33172" y="31806" z="7" rangeX="1" rangeY="1" label="gotovenore"/>
            <Waypoint type="Node" x="33190" y="31817" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33197" y="31817" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33200" y="31807" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33200" y="31795" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33192" y="31789" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33193" y="31821" z="7" rangeX="1" rangeY="1" script="if itemcount(&quot;fire bomb rune&quot;) &gt;= maxfb then&#10;gotolabel(&quot;norunes&quot;)&#10;end"/>
            <Waypoint type="Node" x="33190" y="31778" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33178" y="31776" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33175" y="31775" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Ladder" x="33175" y="31775" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33176" y="31765" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33176" y="31765" z="6" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gotovenore&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33176" y="31765" z="6" rangeX="1" rangeY="1" label="sailtov"/>
            <Waypoint type="Action" x="33176" y="31765" z="6" rangeX="1" rangeY="1" script="local cre = getcreature(&quot;Captain Seahorse&quot;)&#10;if cre.onscreen then&#10;if cre.dist &gt;= 3 then&#10;reachcreature(&quot;Captain Seahorse&quot;)&#10;wait(200)&#10;travel(&quot;venore&quot;)&#10;else&#10;travel(&quot;venore&quot;)&#10;end&#10;end"/>
            <Waypoint type="Stand" x="32954" y="32023" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32954" y="32023" z="6" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;sailtov&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32954" y="32023" z="6" rangeX="1" rangeY="1" label="gotovenoremshop"/>
            <Waypoint type="Node" x="32954" y="32037" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32056" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32954" y="32072" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32972" y="32073" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32971" y="32082" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32971" y="32082" z="6" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gotovenoremshop&quot;)&#10;end"/>
            <Waypoint type="Action" x="32971" y="32082" z="6" rangeX="1" rangeY="1" script="buyrune(&quot;fire bomb rune&quot;,maxfb)"/>
            <Waypoint type="Stand" x="32971" y="32082" z="6" rangeX="1" rangeY="1" label="backtoedron"/>
            <Waypoint type="Node" x="32971" y="32073" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32953" y="32068" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32953" y="32048" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32954" y="32023" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32954" y="32023" z="6" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;backtoedron&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32954" y="32023" z="6" rangeX="1" rangeY="1" label="sailtoe"/>
            <Waypoint type="Action" x="32954" y="32023" z="6" rangeX="1" rangeY="1" script="local cre = getcreature(&quot;Captain Fearless&quot;)&#10;if cre.onscreen then&#10;if cre.dist &gt;= 3 then&#10;reachcreature(&quot;Captain Fearless&quot;)&#10;wait(200)&#10;travel(&quot;edron&quot;)&#10;else&#10;travel(&quot;edron&quot;)&#10;end&#10;end"/>
            <Waypoint type="Stand" x="33175" y="31764" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33175" y="31764" z="6" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;sailtoe&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33175" y="31764" z="6" rangeX="1" rangeY="1" label="gotoammoshop"/>
            <Waypoint type="Stand" x="33175" y="31768" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33175" y="31775" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33188" y="31778" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33190" y="31787" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33203" y="31788" z="7" rangeX="1" rangeY="1" label="norunes"/>
            <Waypoint type="Action" x="33204" y="31788" z="7" rangeX="1" rangeY="1" script="if ammotype == &quot;Infernal Bolt&quot; then&#10;gotolabel(&quot;skipbuyingammo&quot;)&#10;end"/>
            <Waypoint type="Ladder" x="33208" y="31789" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33213" y="31796" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33213" y="31796" z="6" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gotoammoshop&quot;)&#10;end"/>
            <Waypoint type="Action" x="33213" y="31796" z="6" rangeX="1" rangeY="1" script="ammoshop()"/>
            <Waypoint type="Stand" x="33209" y="31798" z="6" rangeX="1" rangeY="1" label="gotoedronmshop"/>
            <Waypoint type="Stand" x="33209" y="31807" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33209" y="31817" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33209" y="31818" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33202" y="31819" z="7" rangeX="1" rangeY="1" label="skipbuyingammo"/>
            <Waypoint type="Stand" x="33194" y="31820" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33193" y="31833" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33208" y="31843" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33222" y="31841" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33237" y="31841" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33247" y="31841" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33255" y="31838" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33255" y="31840" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33255" y="31840" z="7" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gotoedronmshop&quot;)&#10;end"/>
            <Waypoint type="Action" x="33255" y="31840" z="7" rangeX="1" rangeY="1" script="suppshop()"/>
            <Waypoint type="Stand" x="33255" y="31839" z="7" rangeX="1" rangeY="1" label="goforebomb"/>
            <Waypoint type="Stand" x="33255" y="31838" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33258" y="31840" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33257" y="31842" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33255" y="31842" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33256" y="31841" z="3" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33256" y="31841" z="3" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;goforebomb&quot;)&#10;end"/>
            <Waypoint type="Action" x="33256" y="31841" z="3" rangeX="1" rangeY="1" script="buyrune(&quot;energy bomb rune&quot;,3)&#10;buyrune(&quot;stone shower rune&quot;,30)"/>
            <Waypoint type="Stand" x="33255" y="31841" z="3" rangeX="1" rangeY="1" label="alldone"/>
            <Waypoint type="Stand" x="33255" y="31842" z="3" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33257" y="31842" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33258" y="31840" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33251" y="31841" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33247" y="31841" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33237" y="31840" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33237" y="31840" z="7" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;alldone&quot;)&#10;end"/>
            <Waypoint type="Action" x="33237" y="31840" z="7" rangeX="1" rangeY="1" script="bpsforhunt()"/>
            <Waypoint type="Action" x="33237" y="31840" z="7" rangeX="1" rangeY="1" script="if itemcount(ammotype)+10 &lt; maxammo or itemcount(&quot;strong mana potion&quot;)+10 &lt; maxsmp or itemcount(&quot;great spirit potion&quot;)+10 &lt; maxgsp or itemcount(&quot;fire bomb rune&quot;)+5 &lt; maxfb or itemcount(&quot;energy bomb rune&quot;) &lt; 3 then&#10;gotolabel(&quot;backtorefillagain&quot;)&#10;else&#10;gotolabel(&quot;runtohunt&quot;)&#10;setsetting('Cavebot/WalkingMethod', 'Walk With Map-Clicks')&#10;end"/>
            <Waypoint type="Stand" x="33229" y="31841" z="7" rangeX="1" rangeY="1" label="backtorefillagain"/>
            <Waypoint type="Stand" x="33214" y="31843" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33203" y="31843" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33195" y="31839" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33191" y="31827" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33182" y="31820" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33173" y="31816" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33173" y="31816" z="7" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;backtorefillagain&quot;)&#10;else&#10;gotolabel(&quot;start&quot;)&#10;end"/>
            <Waypoint type="Node" x="33249" y="31769" z="7" rangeX="1" rangeY="1" label="runtohunt"/>
            <Waypoint type="Action" x="0" y="0" z="0" rangeX="1" rangeY="1" script="changetoshield = true"/>
            <Waypoint type="Stand" x="33241" y="31767" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33224" y="31769" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33215" y="31761" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33216" y="31757" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33215" y="31740" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33190" y="31707" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33176" y="31655" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33171" y="31650" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33162" y="31643" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33163" y="31637" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33163" y="31636" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33162" y="31629" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33161" y="31624" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33154" y="31624" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33141" y="31623" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33141" y="31612" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33143" y="31607" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33148" y="31605" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33149" y="31601" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33148" y="31597" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33144" y="31597" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33140" y="31596" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33138" y="31595" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33136" y="31593" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33138" y="31594" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33138" y="31594" z="10" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;runtohunt&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33139" y="31595" z="10" rangeX="1" rangeY="1" label="cave1"/>
            <Waypoint type="Node" x="33150" y="31595" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33166" y="31596" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33169" y="31588" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33164" y="31593" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33155" y="31595" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33150" y="31595" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33150" y="31597" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33143" y="31601" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33139" y="31593" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33144" y="31589" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33146" y="31594" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33146" y="31594" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;cave1&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33146" y="31595" z="13" rangeX="1" rangeY="1" label="cave2"/>
            <Waypoint type="Node" x="33146" y="31606" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33146" y="31615" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33146" y="31638" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33157" y="31642" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33161" y="31642" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33168" y="31642" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33176" y="31642" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33182" y="31642" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33188" y="31642" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33191" y="31642" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33191" y="31647" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33192" y="31653" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33192" y="31653" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;cave2&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33192" y="31656" z="13" rangeX="1" rangeY="1" label="wejscienawarlocki"/>
            <Waypoint type="Stand" x="33192" y="31658" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33192" y="31661" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33192" y="31662" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33192" y="31663" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33192" y="31665" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33187" y="31675" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33190" y="31683" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Use" x="33190" y="31684" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33190" y="31686" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33190" y="31686" z="14" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;gotolabel(&quot;wejscienawarlocki&quot;)&#10;else&#10;setsetting('Targeting/Enabled', 'no')&#10;end"/>
            <Waypoint type="Stand" x="33192" y="31690" z="14" rangeX="1" rangeY="1" label="passhff"/>
            <Waypoint type="Stand" x="33192" y="31691" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33168" y="31686" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33168" y="31690" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33169" y="31695" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33169" y="31701" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33168" y="31703" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33168" y="31707" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33168" y="31710" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33168" y="31712" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33168" y="31712" z="14" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;passhff&quot;)&#10;end"/>
            <Waypoint type="Action" x="33169" y="31714" z="14" rangeX="1" rangeY="1" script="keepring = true&#10;running = true&#10;setsetting('Looting/Enabled', 'no')&#10;setsetting('Targeting/Enabled', 'no')&#10;setsetting('SpellHealer/Enabled', 'no')&#10;setsetting('PotionHealer/Rules/GSP/ConditionValue', '80 to 80%')&#10;setsetting('PotionHealer/Rules/GSP/ExtraConditionValue', '90 to 90%')&#10;setsetting('PotionHealer/Rules/SMP/ConditionValue', '90 to 90%')"/>
            <Waypoint type="Stand" x="33170" y="31718" z="14" rangeX="1" rangeY="1" label="gotoanni"/>
            <Waypoint type="Action" x="33170" y="31718" z="14" rangeX="1" rangeY="1" script="if islocation(1) then&#10;while $mppc &lt; 95 do&#10;useoncreature(&quot;strong mana potion&quot;,$self)&#10;waitping()&#10;end&#10;end&#10;changesmp(30)&#10;&#10;"/>
            <Waypoint type="Stand" x="33170" y="31719" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33039" y="31756" z="15" rangeX="1" rangeY="1" label="gta01"/>
            <Waypoint type="Action" x="33039" y="31756" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gotoanni&quot;)&#10;end"/>
            <Waypoint type="Node" x="33039" y="31761" z="15" rangeX="1" rangeY="1" label="gta011"/>
            <Waypoint type="Action" x="33039" y="31761" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta011&quot;)&#10;end"/>
            <Waypoint type="Node" x="33040" y="31767" z="15" rangeX="1" rangeY="1" label="gta02"/>
            <Waypoint type="Action" x="33040" y="31767" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta02&quot;)&#10;end"/>
            <Waypoint type="Node" x="33040" y="31773" z="15" rangeX="1" rangeY="1" label="gta012"/>
            <Waypoint type="Action" x="33040" y="31773" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta012&quot;)&#10;end"/>
            <Waypoint type="Node" x="33047" y="31780" z="15" rangeX="1" rangeY="1" label="gta03"/>
            <Waypoint type="Action" x="33047" y="31780" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta03&quot;)&#10;end"/>
            <Waypoint type="Node" x="33053" y="31780" z="15" rangeX="1" rangeY="1" label="gta013"/>
            <Waypoint type="Action" x="33053" y="31780" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta013&quot;)&#10;end"/>
            <Waypoint type="Node" x="33059" y="31773" z="15" rangeX="1" rangeY="1" label="gta04"/>
            <Waypoint type="Action" x="33059" y="31773" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta04&quot;)&#10;end"/>
            <Waypoint type="Node" x="33059" y="31768" z="15" rangeX="1" rangeY="1" label="gta014"/>
            <Waypoint type="Action" x="33059" y="31768" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta014&quot;)&#10;end"/>
            <Waypoint type="Node" x="33060" y="31762" z="15" rangeX="1" rangeY="1" label="gta015"/>
            <Waypoint type="Action" x="33060" y="31762" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta015&quot;)&#10;end"/>
            <Waypoint type="Node" x="33060" y="31756" z="15" rangeX="1" rangeY="1" label="gta05"/>
            <Waypoint type="Action" x="33060" y="31756" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta05&quot;)&#10;end&#10;changesmp(90)"/>
            <Waypoint type="Stand" x="33061" y="31751" z="15" rangeX="1" rangeY="1" label="gta06"/>
            <Waypoint type="Action" x="33061" y="31751" z="15" rangeX="1" rangeY="1" script="--przeskakuje to nie mozna locationa&#10;if not islocation(3) then&#10;--gotolabel(&quot;gta06&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33091" y="31781" z="15" rangeX="1" rangeY="1" label="gta07"/>
            <Waypoint type="Action" x="33091" y="31781" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta06&quot;)&#10;end&#10;--setsetting('PotionHealer/Rules/SMP/Enabled', 'no')"/>
            <Waypoint type="Stand" x="33091" y="31781" z="15" rangeX="1" rangeY="1" label="gotoanni1"/>
            <Waypoint type="Action" x="33091" y="31781" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gotoanni1&quot;)&#10;end"/>
            <Waypoint type="Action" x="33091" y="31781" z="15" rangeX="1" rangeY="1" label="fb1reloadmana" script="--keepstoneshower = false&#10;&#10;--refilfbomb($wptx,$wpty)&#10;"/>
            <Waypoint type="Stand" x="33091" y="31781" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33091" y="31781" z="15" rangeX="1" rangeY="1" script="--[[if islocation(2) then&#10;if $mppc &lt; 90 then&#10;&#10;&#10;if maround(1) ~= 0 and maround(1) &lt;= 4 then&#10;if cancast(&quot;exevo mas san&quot;) then&#10;cast(&quot;exevo mas san&quot;)&#10;end&#10;else&#10;gotolabel(&quot;gta016&quot;)&#10;changesmp(90)&#10;end&#10;&#10;&#10;waitping()&#10;gotolabel(&quot;fb1reloadmana&quot;)&#10;else&#10;&#10;changesmp(30)&#10;end&#10;end]]--"/>
            <Waypoint type="Node" x="33101" y="31780" z="15" rangeX="1" rangeY="1" label="gta016"/>
            <Waypoint type="Action" x="33101" y="31780" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta016&quot;)&#10;end&#10;keepstoneshower = true"/>
            <Waypoint type="Node" x="33108" y="31780" z="15" rangeX="1" rangeY="1" label="gta11"/>
            <Waypoint type="Action" x="33108" y="31780" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta11&quot;)&#10;end"/>
            <Waypoint type="Node" x="33115" y="31777" z="15" rangeX="1" rangeY="1" label="gta017"/>
            <Waypoint type="Action" x="33115" y="31777" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta017&quot;)&#10;end"/>
            <Waypoint type="Node" x="33118" y="31774" z="15" rangeX="1" rangeY="1" label="gta018"/>
            <Waypoint type="Action" x="33118" y="31774" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta018&quot;)&#10;end"/>
            <Waypoint type="Node" x="33118" y="31771" z="15" rangeX="1" rangeY="1" label="gta12"/>
            <Waypoint type="Action" x="33118" y="31771" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta12&quot;)&#10;end"/>
            <Waypoint type="Node" x="33116" y="31766" z="15" rangeX="1" rangeY="1" label="gta019"/>
            <Waypoint type="Action" x="33116" y="31766" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta019&quot;)&#10;end"/>
            <Waypoint type="Node" x="33111" y="31761" z="15" rangeX="1" rangeY="1" label="gta020"/>
            <Waypoint type="Action" x="33111" y="31761" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta020&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33107" y="31761" z="15" rangeX="1" rangeY="1" label="gta13"/>
            <Waypoint type="Action" x="33107" y="31761" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta13&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33099" y="31764" z="15" rangeX="1" rangeY="1" label="gta14"/>
            <Waypoint type="Action" x="33099" y="31764" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta14&quot;)&#10;end"/>
            <Waypoint type="Node" x="33093" y="31763" z="15" rangeX="1" rangeY="1" label="gta021"/>
            <Waypoint type="Action" x="33093" y="31763" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta021&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33089" y="31759" z="15" rangeX="1" rangeY="1" label="gta15"/>
            <Waypoint type="Stand" x="33150" y="31782" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33150" y="31782" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta15&quot;)&#10;end"/>
            <Waypoint type="Action" x="33150" y="31782" z="15" rangeX="1" rangeY="1" script="if islocation(2) then&#10;&#10;changesmp(90)&#10;if maround(10) &lt; 3 then&#10;pausewalking(5000)&#10;end&#10;&#10;&#10;end"/>
            <Waypoint type="Stand" x="33152" y="31782" z="15" rangeX="1" rangeY="1" label="gotoanni2"/>
            <Waypoint type="Node" x="33159" y="31782" z="15" rangeX="1" rangeY="1" label="gta21"/>
            <Waypoint type="Action" x="33159" y="31782" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gotoanni2&quot;)&#10;end&#10;changesmp(30)"/>
            <Waypoint type="Node" x="33167" y="31781" z="15" rangeX="1" rangeY="1" label="gta022"/>
            <Waypoint type="Action" x="33167" y="31781" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta022&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33171" y="31777" z="15" rangeX="1" rangeY="1" label="gta22"/>
            <Waypoint type="Action" x="33171" y="31777" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta22&quot;)&#10;end"/>
            <Waypoint type="Node" x="33167" y="31772" z="15" rangeX="1" rangeY="1" label="gta23"/>
            <Waypoint type="Action" x="33167" y="31772" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta23&quot;)&#10;end"/>
            <Waypoint type="Node" x="33164" y="31767" z="15" rangeX="1" rangeY="1" label="gta024"/>
            <Waypoint type="Action" x="33164" y="31767" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta024&quot;)&#10;end"/>
            <Waypoint type="Node" x="33164" y="31762" z="15" rangeX="1" rangeY="1" label="gta023"/>
            <Waypoint type="Action" x="33164" y="31762" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta023&quot;)&#10;end"/>
            <Waypoint type="Node" x="33170" y="31759" z="15" rangeX="1" rangeY="1" label="gta25"/>
            <Waypoint type="Action" x="33170" y="31759" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta25&quot;)&#10;end"/>
            <Waypoint type="Node" x="33176" y="31756" z="15" rangeX="1" rangeY="1" label="gta025"/>
            <Waypoint type="Action" x="33176" y="31756" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta025&quot;)&#10;end"/>
            <Waypoint type="Node" x="33186" y="31759" z="15" rangeX="1" rangeY="1" label="gta026"/>
            <Waypoint type="Action" x="33186" y="31759" z="15" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta026&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33187" y="31759" z="15" rangeX="1" rangeY="1" label="gta26"/>
            <Waypoint type="Stand" x="33094" y="31575" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33094" y="31575" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;&#10;gotolabel(&quot;gta25&quot;)&#10;else&#10;&#10;changesmp(90)&#10;keepstoneshower = false&#10;end&#10;--if $mppc &lt; 60 then&#10;pausewalking(2000)&#10;ebomb()&#10;&#10;--end"/>
            <Waypoint type="Stand" x="33097" y="31574" z="11" rangeX="1" rangeY="1" label="reloadmana"/>
            <Waypoint type="Action" x="33097" y="31574" z="11" rangeX="1" rangeY="1" script="if islocation(2) then&#10;if $mppc &lt; 90 and maround(1) &lt; 2 then&#10;waitping()&#10;gotolabel(&quot;reloadmana&quot;)&#10;end&#10;end&#10;"/>
            <Waypoint type="Stand" x="33095" y="31577" z="11" rangeX="1" rangeY="1" label="gotoanni3"/>
            <Waypoint type="Action" x="33095" y="31577" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gotoanni3&quot;)&#10;end"/>
            <Waypoint type="Node" x="33104" y="31594" z="11" rangeX="1" rangeY="1" label="gta311"/>
            <Waypoint type="Action" x="33104" y="31594" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta311&quot;)&#10;end"/>
            <Waypoint type="Node" x="33099" y="31601" z="11" rangeX="1" rangeY="1" label="gta31"/>
            <Waypoint type="Action" x="33099" y="31601" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta31&quot;)&#10;end"/>
            <Waypoint type="Node" x="33095" y="31608" z="11" rangeX="1" rangeY="1" label="gta32"/>
            <Waypoint type="Action" x="33095" y="31608" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta32&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33101" y="31615" z="11" rangeX="1" rangeY="1" label="gta313"/>
            <Waypoint type="Action" x="33101" y="31615" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta313&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33106" y="31621" z="11" rangeX="1" rangeY="1" label="gta312"/>
            <Waypoint type="Action" x="33106" y="31621" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta312&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33107" y="31627" z="11" rangeX="1" rangeY="1" label="gta314"/>
            <Waypoint type="Action" x="33107" y="31627" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta314&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33109" y="31635" z="11" rangeX="1" rangeY="1" label="gta315"/>
            <Waypoint type="Action" x="33109" y="31635" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta315&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33110" y="31645" z="11" rangeX="1" rangeY="1" label="gta316"/>
            <Waypoint type="Action" x="33110" y="31645" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta316&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33107" y="31651" z="11" rangeX="1" rangeY="1" label="gta33"/>
            <Waypoint type="Action" x="33107" y="31651" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta33&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33111" y="31659" z="11" rangeX="1" rangeY="1" label="gta317"/>
            <Waypoint type="Action" x="33111" y="31659" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta317&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33119" y="31659" z="11" rangeX="1" rangeY="1" label="gta34"/>
            <Waypoint type="Action" x="33119" y="31659" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta34&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33130" y="31659" z="11" rangeX="1" rangeY="1" label="gta318"/>
            <Waypoint type="Action" x="33130" y="31659" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta318&quot;)&#10;end"/>
            <Waypoint type="Node" x="33133" y="31665" z="11" rangeX="1" rangeY="1" label="gta319"/>
            <Waypoint type="Action" x="33133" y="31665" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta319&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33137" y="31670" z="11" rangeX="1" rangeY="1" label="gta35"/>
            <Waypoint type="Action" x="33137" y="31670" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;gta35&quot;)&#10;end"/>
            <Waypoint type="Action" x="33170" y="31713" z="14" rangeX="1" rangeY="1" script="setsetting('PotionHealer/Rules/GSP/ConditionValue', '70 to 70%')&#10;setsetting('PotionHealer/Rules/GSP/ExtraConditionValue', '60 to 60%')&#10;setsetting('PotionHealer/Rules/SMP/ConditionValue', '85 to 85%')&#10;setsetting('Cavebot/WalkingMethod', 'Walk With Arrow Keys')&#10;setsetting('Looting/Enabled', 'yes')&#10;setsetting('Targeting/Enabled', 'yes')&#10;setsetting('Looting/OpenNextBP', 'yes')&#10;setsetting('SpellHealer/Enabled', 'yes')&#10;keepring = false&#10;running = false&#10;changetoshield = false"/>
            <Waypoint type="Stand" x="33137" y="31671" z="11" rangeX="1" rangeY="1" label="entertp"/>
            <Waypoint type="Action" x="33173" y="31798" z="8" rangeX="1" rangeY="1" script=""/>
            <Waypoint type="Stand" x="33197" y="31703" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33197" y="31703" z="11" rangeX="1" rangeY="1" script=""/>
            <Waypoint type="Stand" x="33195" y="31698" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33195" y="31698" z="11" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;entertp&quot;)&#10;end"/>
            <Waypoint type="Action" x="33195" y="31698" z="11" rangeX="1" rangeY="1" script="cancheckfb = true&#10;gotolabel(&quot;start&quot;,&quot;Hunt&quot;)"/>
        </WaypointSection>
        <WaypointSection name="Hunt">
            <Waypoint type="Stand" x="33194" y="31695" z="11" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Action" x="33194" y="31695" z="11" rangeX="1" rangeY="1" script="wait(200)&#10;cancheckfb = true&#10;movingposition = false&#10;setsetting('Looting/Enabled', 'yes')&#10;setsetting('Targeting/Enabled', 'yes')&#10;setsetting('Cavebot/SpecialAreas/SArea/Policy', 'Targeting')&#10;setsetting('Cavebot/SpecialAreas/SArea1/Policy', 'Targeting')&#10;setsetting('Cavebot/SpecialAreas/SArea2/Policy', 'Targeting')&#10;setsetting('Cavebot/SpecialAreas/SArea3/Policy', 'Targeting')"/>
        </WaypointSection>
        <WaypointSection name="Leave">
            <Waypoint type="Stand" x="33197" y="31698" z="11" rangeX="1" rangeY="1" label="Leave"/>
            <Waypoint type="Stand" x="33197" y="31702" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33197" y="31704" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33199" y="31687" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33165" y="31709" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33165" y="31709" z="14" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;Leave&quot;)&#10;else&#10;cancheckfb = false&#10;end"/>
            <Waypoint type="Stand" x="33167" y="31710" z="14" rangeX="1" rangeY="1" label="rhff"/>
            <Waypoint type="Stand" x="33168" y="31710" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33168" y="31704" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33168" y="31683" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33168" y="31682" z="15" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33193" y="31687" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33193" y="31687" z="14" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;rhff&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33195" y="31685" z="14" rangeX="1" rangeY="1" label="ewarlock"/>
            <Waypoint type="Use" x="33195" y="31684" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33197" y="31674" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33192" y="31663" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33192" y="31658" z="14" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33192" y="31656" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33192" y="31656" z="13" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;ewarlock&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33192" y="31656" z="13" rangeX="1" rangeY="1" label="cave3"/>
            <Waypoint type="Stand" x="33192" y="31649" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33191" y="31643" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33187" y="31641" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33171" y="31641" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33150" y="31641" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33145" y="31636" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33146" y="31630" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33146" y="31622" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33145" y="31619" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33146" y="31613" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33146" y="31607" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33146" y="31601" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33145" y="31591" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33144" y="31589" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Ladder" x="33144" y="31589" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33142" y="31590" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33142" y="31590" z="12" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;cave3&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33139" y="31596" z="12" rangeX="1" rangeY="1" label="cave4"/>
            <Waypoint type="Stand" x="33146" y="31601" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33150" y="31595" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33150" y="31595" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="33150" y="31595" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33154" y="31595" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33159" y="31596" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33164" y="31593" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33169" y="31588" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="33169" y="31588" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33169" y="31592" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33159" y="31596" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33144" y="31596" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33136" y="31593" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="33136" y="31593" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33147" y="31597" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33149" y="31604" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33142" y="31606" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33140" y="31615" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33148" y="31624" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33161" y="31624" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="33161" y="31624" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33162" y="31626" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33162" y="31626" z="8" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;cave4&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33163" y="31636" z="8" rangeX="1" rangeY="1" label="cave5"/>
            <Waypoint type="Rope" x="33163" y="31636" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33162" y="31640" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33162" y="31640" z="7" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;cave5&quot;)&#10;end&#10;setsetting('Cavebot/WalkingMethod', 'Walk With Arrow Keys')"/>
            <Waypoint type="Stand" x="33162" y="31640" z="7" rangeX="1" rangeY="1" label="btdp"/>
            <Waypoint type="Node" x="33170" y="31653" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33178" y="31668" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33182" y="31684" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33188" y="31699" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33194" y="31710" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33211" y="31721" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33215" y="31740" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33216" y="31756" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33224" y="31769" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33240" y="31767" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33241" y="31767" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33250" y="31783" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33242" y="31794" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33242" y="31812" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33236" y="31825" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33228" y="31840" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33200" y="31842" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33190" y="31826" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33180" y="31820" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33171" y="31812" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33171" y="31812" z="7" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;gotolabel(&quot;btdp&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Refill&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Anni">
            <Waypoint type="Stand" x="33194" y="31692" z="11" rangeX="1" rangeY="1" label="a"/>
            <Waypoint type="Action" x="33171" y="31692" z="8" rangeX="1" rangeY="1" script="setsetting('Cavebot/Enabled', 'no')&#10;movingposition = false&#10;cancheckfb = true"/>
            <Waypoint type="Stand" x="33200" y="31692" z="11" rangeX="1" rangeY="1" label="b"/>
            <Waypoint type="Action" x="33171" y="31796" z="8" rangeX="1" rangeY="1" script="setsetting('Cavebot/Enabled', 'no')&#10;movingposition = false&#10;cancheckfb = true"/>
            <Waypoint type="Stand" x="33200" y="31698" z="11" rangeX="1" rangeY="1" label="c"/>
            <Waypoint type="Action" x="33171" y="31796" z="8" rangeX="1" rangeY="1" script="setsetting('Cavebot/Enabled', 'no')&#10;movingposition = false&#10;cancheckfb = true"/>
            <Waypoint type="Stand" x="33194" y="31698" z="11" rangeX="1" rangeY="1" label="d"/>
            <Waypoint type="Action" x="33171" y="31796" z="8" rangeX="1" rangeY="1" script="setsetting('Cavebot/Enabled', 'no')&#10;movingposition = false&#10;cancheckfb = true"/>
        </WaypointSection>
    </Cavebot>
    <Looting enabled="yes">
        <Options>
            <Option range="10"/>
            <Option moveItemsQuickly="yes"/>
            <Option eatFoodFromCorpse="yes"/>
            <Option openNextBP="yes"/>
            <Option openBPsAtLogin="no"/>
            <Option valuableBodies="3000"/>
            <Option ultraValuableBodies="50000"/>
            <Option alertOnValuableBodies="no"/>
            <Option openValuableBodiesOnly="no"/>
            <Option openUltraValuableBodiesImmediately="no"/>
            <Option policy="Smart Looting"/>
            <LootingDestinations>
                <lootingDestination name="lootbp" destination="yellow backpack"/>
                <lootingDestination name="mainbp" destination="backpack of holding"/>
                <lootingDestination name="ammobp" destination="zaoan chess box"/>
                <lootingDestination name="potionbp" destination="golden backpack"/>
                <lootingDestination name="maindpbp" destination="red backpack"/>
                <lootingDestination name="stackdpbp" destination="blue backpack"/>
                <lootingDestination name="raredpbp" destination="purple backpack"/>
                <lootingDestination name="ammodpbp" destination="orange backpack"/>
            </LootingDestinations>
        </Options>
        <LootingProfile name="LootList" isCurrentProfile="yes">
            <LootItem name="platinum coin" id="3035" sellPrice="100" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="violet gem" id="3036" sellPrice="10000" weight="0.30" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="green gem" id="3038" sellPrice="5000" weight="0.30" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="blue gem" id="3041" sellPrice="5000" weight="0.30" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="giant shimmering pearl (green)" id="281" sellPrice="3000" weight="0.80" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="giant shimmering pearl (brown)" id="282" sellPrice="3000" weight="0.80" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="yellow gem" id="3037" sellPrice="1000" weight="0.30" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="red gem" id="3039" sellPrice="1000" weight="0.30" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="small amethyst" id="3033" sellPrice="200" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="demon shield" id="3420" sellPrice="30000" weight="26.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="mastermind shield" id="3414" sellPrice="50000" weight="57.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="onyx flail" id="7421" sellPrice="22000" weight="26.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="heavy mace" id="3340" sellPrice="50000" weight="110.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="emerald bangle" id="3010" sellPrice="800" weight="1.79" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="gold ingot" id="9058" sellPrice="5000" weight="18.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="berserk potion" id="7439" sellPrice="500" weight="2.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="mastermind potion" id="7440" sellPrice="500" weight="2.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="paladin armor" id="8063" sellPrice="15000" weight="65.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="diamond sceptre" id="7387" sellPrice="3000" weight="15.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="lavos armor" id="8049" sellPrice="16000" weight="85.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="skullcracker armor" id="8061" sellPrice="18000" weight="110.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="crown shield" id="3419" sellPrice="8000" weight="62.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="ring of healing" id="3098" sellPrice="100" weight="0.80" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="guardian halberd" id="3315" sellPrice="11000" weight="110.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="demon horn" id="5954" sellPrice="1000" weight="10.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="tower shield" id="3428" sellPrice="8000" weight="82.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="guardian shield" id="3415" sellPrice="2000" weight="55.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="the stomper" id="8101" sellPrice="0" weight="115.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="yes" alertOnMiss="yes"/>
            <LootItem name="demonbone" id="7431" sellPrice="0" weight="180.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="obsidian truncheon" id="8100" sellPrice="0" weight="65.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="rusty armor (rare)" id="8896" sellPrice="0" weight="120.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="great mana potion" id="238" sellPrice="0" weight="3.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="great spirit potion" id="7642" sellPrice="0" weight="3.10" destinationName="potionbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="great health potion" id="239" sellPrice="0" weight="3.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="ultimate health potion" id="7643" sellPrice="0" weight="3.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="knight armor" id="3370" sellPrice="5000" weight="120.00" destination="" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="paladin armor" id="8063" sellPrice="15000" weight="65.00" destination="" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="crown armor" id="3381" sellPrice="12000" weight="99.00" destination="" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="golden armor" id="3360" sellPrice="20000" weight="80.00" destination="" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="magic plate armor" id="3366" sellPrice="90000" weight="85.00" destination="" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="assassin star" id="7368" sellPrice="0" weight="2.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="infernal bolt" id="6528" sellPrice="0" weight="0.90" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="soul orb" id="5944" sellPrice="25" weight="0.20" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
        </LootingProfile>
    </Looting>
    <Supplies>
        <Options>
            <Option defaultBackpack=""/>
            <Option extraCashMin="1000" extraCashMax="2500"/>
            <Option autoSwitchProfiles="no"/>
        </Options>
        <SupplyProfile name="SupplyList" vocation="Paladin" level="276" isCurrentProfile="yes">
            <SupplyItem name="crystalline arrow" id="15793" buyPrice="20" weight="0.75" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="prismatic bolt" id="16141" buyPrice="20" weight="0.85" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="strong mana potion" id="237" buyPrice="80" weight="2.90" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="great spirit potion" id="7642" buyPrice="190" weight="3.10" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="fire bomb rune" id="3192" buyPrice="117" weight="1.05" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="energy bomb rune" id="3149" buyPrice="162" weight="1.05" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="infernal bolt" id="6528" buyPrice="0" weight="0.90" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
        </SupplyProfile>
    </Supplies>
    <Targeting enabled="yes" allowDiagonalMovement="no" autoSwitchProfiles="no" nonPvPMode="no">
        <TargetingProfile name="TargetList" vocation="Paladin" level="0" targetMustBeShootable="no" targetMustBeReachable="yes" isCurrentProfile="yes">
            <Priorities>
                <Priority health="20"/>
                <Priority proximity="30"/>
                <Priority danger="10"/>
                <Priority random="0"/>
                <Priority lure="30"/>
                <Priority stick="2"/>
            </Priorities>
            <Creatures>
                <Creature name="Annihilon" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="1" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Keep Away" distance="2" attackMode="No Change" firstSpell="Divine Missile" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Others" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
            </Creatures>
        </TargetingProfile>
    </Targeting>
    <OtherBots>
        <HealingPaths/>
        <TargetingPaths/>
    </OtherBots>
</WindbotSettings>
