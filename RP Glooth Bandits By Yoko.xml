<?xml version="1.0" encoding="UTF-8"?>
<WindbotSettings>
    <Healer>
        <SpellHealer enabled="yes">
            <HealRule name="Exura Gran San" spell="Salvation" condition="Health Percent below" conditionMin="55" conditionMax="55" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="Exura San" spell="Divine Healing" condition="Health Percent below" conditionMin="65" conditionMax="65" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="Exura Gran" spell="Intense Healing" condition="Health Percent below" conditionMin="75" conditionMax="80" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="Exura" spell="Light Healing" condition="Health Percent below" conditionMin="90" conditionMax="95" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </SpellHealer>
        <PotionHealer enabled="yes">
            <HealRule name="SMP" spell="Strong Mana Potion" condition="Mana Percent below" conditionMin="85" conditionMax="85" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="NewHealRule" spell="Great Spirit Potion" condition="Health Percent below" conditionMin="50" conditionMax="50" extraCondition="Mana Percent below" extraConditionMin="55" extraConditionMax="55" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </PotionHealer>
        <ConditionHealer enabled="yes">
            <HealRule name="NewHealRule" spell="Light Healing" condition="Paralyzed" conditionMin="0" conditionMax="0" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="NewHealRule1" spell="Haste" condition="Not Hasted" conditionMin="0" conditionMax="0" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </ConditionHealer>
        <ManaTrainer manaTrainCondition="Mana Percent above" manaTrainMin="87" manaTrainMax="93" enabled="no"/>
    </Healer>
    <Scripter>
        <HotkeyScripts/>
        <PersistentScripts>
            <PersistentScript name="Fast Variables" script="init start&#10;errorshowed = false&#10;init end&#10;auto(300)&#10;&#10;&#10;&#10;distinlure = getuseroption('distinlure')&#10;distoutlure = getuseroption('distwhenluring')&#10;switchtarget = getuseroption('switchtarget')&#10;&#10;--[[&#10;if $posy &gt; 31924 then&#10;setsetting('Cavebot/SpecialAreas/SArea5/Policy', 'Targeting')&#10;else&#10;setsetting('Cavebot/SpecialAreas/SArea5/Policy', 'None')&#10;end&#10;]]--&#10;&#10;if $posy &lt; 31929 then&#10;setsetting('Cavebot/SpecialAreas/SArea4/Policy', 'None')&#10;setsetting('Targeting/ProximityPriority', '0')&#10;setsetting('Targeting/Creatures/Category A/Setting1/Distance', distinlure)&#10;&#10;if $target.hppc &lt; 20 then&#10;--setsetting('Targeting/Creatures/Category A/Setting1/FirstSpell', 'Ethereal Spear')&#10;else&#10;--setsetting('Targeting/Creatures/Category A/Setting1/FirstSpell', 'Divine Missile')&#10;end&#10;else&#10;setsetting('Cavebot/SpecialAreas/SArea4/Policy', 'Targeting')&#10;if switchtarget then&#10;setsetting('Targeting/ProximityPriority', '100')&#10;else&#10;setsetting('Targeting/ProximityPriority', '30')&#10;end&#10;&#10;setsetting('Targeting/Creatures/Category A/Setting1/Distance', distoutlure)&#10;--setsetting('Targeting/Creatures/Category A/Setting1/FirstSpell', 'Ethereal Spear')&#10;end&#10;&#10;&#10;&#10;&#10;if not errorshowed and windowcount(mainbp) &gt; 0 and itemcount(ropetype) &lt; 1 and cavebotenabled then&#10;messagebox('Important', 'You have not that type of rope inside main backpack!')&#10;errorshowed = true&#10;end&#10;if maround(10) &gt; 1 then&#10;setsetting('Cavebot/SpecialAreas/SArea3/Policy', 'None')&#10;setsetting('Cavebot/SpecialAreas/SArea6/Policy', 'None')&#10;if usegfb then&#10;esanamount = 10&#10;else&#10;esanamount = 1&#10;end&#10;else&#10;setsetting('Cavebot/SpecialAreas/SArea3/Policy', 'Targeting')&#10;setsetting('Cavebot/SpecialAreas/SArea6/Policy', 'Targeting')&#10;esanamount = 1&#10;end" enabled="yes"/>
            <PersistentScript name="Functions" script="auto(2000)&#10;function depot()&#10;setsetting('Looting/OpenNextBP', 'no')&#10;closewindows()&#10;wait(2000)&#10;while windowcount() &lt; 2 do&#10;closewindows()&#10;wait(500,1200)&#10;openitem(mainbp, &quot;back&quot;, true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;openitem(lootbp,mainbp,true)&#10;wait(500,1200)&#10;resizewindows()&#10;end&#10;&#10;&#10;while windowcount(&quot;Depot Chest&quot;) == 0 do&#10;&#9;opendepot()&#10;&#9;wait(500)&#10;end&#10;&#10;&#10;while windowcount(lootbp) == 0 do&#10;openitem(lootbp,mainbp,true)&#10;wait(300)&#10;end&#10;&#10;&#10;while windowcount(maindpbp) == 0 do &#10;openitem(maindpbp, &quot;Depot Chest&quot;) &#10;wait(300,500) &#10;resizewindows(1000,maindpbp) &#10;wait(300,500) &#10;end &#10;&#10;&#10;&#10;setsetting('Looting/OpenNextBP', 'no')&#10;waitping()&#10;&#10;&#10;local CONFIG = {&#10;    LOOT_BACKPACK = lootbp,&#10;    MAIN_DP_BACKPACK = maindpbp,&#10;    STACKABLE_BACKPACK = stackdpbp,&#10;    NOT_STACKABLE_BACKPACK = raredpbp,&#10;}&#10; &#10;clearlastonto()&#10; &#10;while (true) do&#10;&#9;foreach lootingitem ITEM_ENTRY do&#10;if ITEM_ENTRY.id == 3035 then&#10;else&#10;&#9;&#9;while (itemcount(ITEM_ENTRY.id, CONFIG.LOOT_BACKPACK) &gt; 0) do&#10;&#10;&#9;&#9;&#9;if (itemproperty(ITEM_ENTRY.id, ITEM_STACKABLE)) then&#10;&#9;&#9;&#9;&#9;moveitemsonto(ITEM_ENTRY.id, CONFIG.STACKABLE_BACKPACK, 1, CONFIG.MAIN_DP_BACKPACK, CONFIG.LOOT_BACKPACK) wait(600, 1200)&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;moveitemsonto(ITEM_ENTRY.id, CONFIG.NOT_STACKABLE_BACKPACK, $lastonto, CONFIG.MAIN_DP_BACKPACK, CONFIG.LOOT_BACKPACK) wait(600, 200)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;end&#10;end&#10;&#10; &#10;    if (itemcount(CONFIG.LOOT_BACKPACK, CONFIG.LOOT_BACKPACK) &gt; 0) then&#10;        openitem(CONFIG.LOOT_BACKPACK, CONFIG.LOOT_BACKPACK, false) waitcontainer(CONFIG.LOOT_BACKPACK, false)&#10;    else&#10;        break&#10;    end&#10; &#10;    wait(100)&#10;end&#10;&#10;closewindows()&#10;&#10;wait(700, 900)&#10;&#10;if sellitemsonmarket then&#10;while not $marketopen do&#10;wait(600)&#10;openmarket()&#10;wait(1600)&#10;end&#10;&#10;if sellterramantles then&#10;sellitemsmarket( &quot;terra mantle&quot;,  priceterramantle ,  9999 ,  true ,  true ) &#10;end&#10;&#10;if sellterralegs then&#10;sellitemsmarket( &quot;terra legs&quot;,  priceterralegs ,  9999 ,  true ,  true ) &#10;end&#10;if sellterraboots then&#10;sellitemsmarket( &quot;terra boots&quot;,  priceterraboots ,  9999 ,  true ,  true ) &#10;end&#10;&#10;if sellmercenaryswords then&#10;sellitemsmarket( &quot;mercenary sword&quot;,  pricemercenarysword ,  9999 ,  true ,  true ) &#10;end&#10;&#10;if sellskullstaffs then&#10;sellitemsmarket( &quot;skull staff&quot;,  priceskullstaff ,  9999 ,  true ,  true ) &#10;end&#10;&#10;if sellwaraxes then&#10;sellitemsmarket( &quot;war axe&quot;,  pricewaraxe ,  9999 ,  true ,  true ) &#10;end&#10;&#10;if sellbutchersaxes then&#10;sellitemsmarket( &quot;butchers axe&quot;,  pricebutchersaxe ,  9999 ,  true ,  true ) &#10;end&#10;&#10;if selldreadedcleaver then&#10;sellitemsmarket( &quot;dreaded cleaver&quot;,  pricedreadedcleaver ,  9999 ,  true ,  true ) &#10;end&#10;&#10;waitping()&#10;closemarket()&#10;end&#10;&#10;&#10;end&#10;&#10;function bpsforbank()&#10;&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(suppbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#10;end&#10;end&#10;&#10;&#10;function withdrawmoney()&#10;&#10;Mana = math.positive(maxsmp - itemcount(&quot;strong mana potion&quot;)) * 80&#10;GSP = math.positive(maxgsp - itemcount(&quot;great spirit potion&quot;)) * 190 &#10;if usegfb then&#10;GFB = math.positive(maxgfb - itemcount(&quot;great fireball rune&quot;)) * 45 &#10;else&#10;GFB = 0&#10;end&#10;AMMO = math.positive(maxammo - itemcount(ammotype)) * 20&#10;Total = math.ceil(Mana + GSP + AMMO, 10000) + 10000&#10;&#10;&#10;&#10;&#9;npctalk(&quot;hi&quot;,&quot;deposit all&quot;,&quot;yes&quot;, &quot;withdraw &quot;..Total, &quot;yes&quot;, &quot;balance&quot;)&#10;&#10;end&#10;function suppshop()&#10;&#10;&#10;&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(suppbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end&#10;if useextrabp then&#10;while windowcount &lt; 3 do&#10;openitem(extrabp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end &#10;end&#10;&#10;sellflasks()&#10;&#10;--GSP&#10;amount2 = maxgsp - itemcount(&quot;great spirit potion&quot;)&#10;while amount2 &gt; 0 and islocation(1) do &#10;&#9;buyitems(&quot;great spirit potion&quot;, amount2) &#10;&#9;waitping(2,3)&#10;&#10;&#9;&#9;moveitems(&quot;great spirit potion&quot;,suppbp, mainbp) &#10;&#10;&#9;waitping(2,3)&#10;&#9;amount2 = amount2-100&#10;end&#10;&#10;--MANAS&#10;amount1 = tonumber(maxsmp) - itemcount(&quot;strong mana potion&quot;)&#10;while amount1 &gt; 0 and islocation(1) do &#10;&#9;buyitems(&quot;strong mana potion&quot;, amount1) &#10;&#9;waitping(2,3)&#10;&#9;if getcontainer(suppbp).emptycount &gt; 0 then&#10;&#9;&#9;moveitems(&quot;strong mana potion&quot;,suppbp, mainbp) &#10;&#9;else&#10;&#9;&#9;moveitems(&quot;strong mana potion&quot;,extrabp, mainbp) &#10;&#9;end&#10;&#9;waitping(2,3)&#10;&#9;amount1 = amount1-100&#10;end&#10;end&#10;&#10;&#10;function ammoshop()&#10;&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(suppbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end&#10;if useextrabp then&#10;while windowcount &lt; 3 do&#10;openitem(extrabp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end &#10;end&#10;::opentradeagainammo::&#10;if not ischannel('NPCs') then&#10;say('hi')&#10;wait(1500)&#10;else&#10;npcsay('hi')&#10;wait(300)&#10;end&#10;&#10;npcsay(&quot;trade&quot;)&#10;wait(1000)&#10;&#10;if not $tradeopen then&#10;goto opentradeagainammo&#10;end&#10;&#10;amount1 = tonumber(maxammo) - itemcount(ammotype)&#10;while amount1 &gt; 0 and islocation(1) do &#10;&#9;buyitems(ammotype, amount1) &#10;&#9;waitping(2,3)&#10;&#9;if getcontainer(suppbp).emptycount &gt; 0 then&#10;&#9;&#9;moveitems(ammotype,suppbp, mainbp) &#10;&#9;else&#10;&#9;&#9;moveitems(ammotype,extrabp, mainbp) &#10;&#9;end&#10;&#9;waitping(2,3)&#10;&#9;amount1 = amount1-100&#10;end&#10;end&#10;&#10;&#10;&#10;function checksupp()&#10;if itemcount(ammotype)+10 &lt; maxammo or itemcount(&quot;strong mana potion&quot;) + 20 &lt; maxsmp or itemcount(&quot;great spirit potion&quot;) + 20 &lt; maxgsp then&#10;gotolabel(&quot;start&quot;)&#10;end&#10;end&#10;&#10;function sellraresinflintshoop()&#10;::opentradeagain::&#10;if not ischannel('NPCs') then&#10;say('hi')&#10;wait(1500)&#10;else&#10;npcsay('hi')&#10;wait(300)&#10;end&#10;&#10;npcsay(&quot;trade&quot;)&#10;wait(1000)&#10;&#10;if not $tradeopen then&#10;goto opentradeagain&#10;end&#10;&#10;if sellgloothclubs then&#10;sellitems('glooth club', tradecount('sell', 'glooth club'))&#10;end&#10;&#10;if sellgloothaxes then&#10;sellitems('glooth axe', tradecount('sell', 'glooth axe'))&#10;end&#10;&#10;if sellgloothbladess then&#10;sellitems('glooth blade', tradecount('sell', 'glooth blade'))&#10;end&#10;&#10;if sellgloothamulets then&#10;sellitems('glooth amulet', tradecount('sell', 'glooth amulet'))&#10;&#10;end&#10;if sellgloothcapes then&#10;sellitems('glooth cape', tradecount('sell', 'glooth cape'))&#10;&#10;end&#10;if sellrubbercaps then&#10;sellitems('rubber cap', tradecount('sell', 'rubber cap'))&#10;&#10;end&#10;if sellheatcores then&#10;sellitems('heat core', tradecount('sell', 'heat core'))&#10;&#10;end&#10;end&#10;&#10;function seljewerly()&#10;::opentradejagain::&#10;if not ischannel('NPCs') then&#10;say('hi')&#10;wait(1500)&#10;else&#10;npcsay('hi')&#10;wait(300)&#10;end&#10;&#10;npcsay(&quot;trade&quot;)&#10;wait(1000)&#10;&#10;if not $tradeopen then&#10;goto opentradejagain&#10;end&#10;&#10;if sellsmallemeralds then&#10;sellitems('small emerald', tradecount('sell', 'small emerald'))&#10;end&#10;&#10;if sellsmalltopazes then&#10;sellitems('small topaz', tradecount('sell', 'small topaz'))&#10;end&#10;&#10;if sellgiantshimmeringpearls then&#10;sellitems('giant shimmering pearl', tradecount('sell', 'giant shimmering pearl'))&#10;end&#10;&#10;end&#10;&#10;function bpsforhunt()&#10;&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 4 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(suppbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(lootbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(goldbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#10;end&#10;end&#10;&#10;function runeshop()&#10;&#10;&#10;&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(suppbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end&#10;if useextrabp then&#10;while windowcount &lt; 3 do&#10;openitem(extrabp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end &#10;end&#10;&#10;sellflasks()&#10;&#10;--GSP&#10;amount2 = maxgfb - itemcount(&quot;great fireball rune&quot;)&#10;while amount2 &gt; 0 and islocation(1) do &#10;&#9;buyitems(&quot;great fireball rune&quot;, amount2) &#10;&#9;waitping(2,3)&#10;&#10;&#9;&#9;moveitems(&quot;great fireball rune&quot;,suppbp, mainbp) &#10;&#10;&#9;waitping(2,3)&#10;&#9;amount2 = amount2-100&#10;end&#10;end" enabled="yes"/>
            <PersistentScript name="Slow Variables" script="auto(1000)&#10;&#10;usealertonspawn = getuseroption('usealertonspawn')&#10;&#10;usegfb = getuseroption('Use GFB')&#10;&#10;selllooteditems = getuseroption('Sell Looted Items')&#10;selljewerly = getuseroption('Sell Jewerly')&#10;sellitemsonmarket = getuseroption('Sell Items On Market')&#10;&#10;sellgloothclubs = getuseroption('sellgloothclubs')&#10;sellgloothaxes = getuseroption('sellgloothaxes')&#10;sellgloothblades = getuseroption('sellgloothblades')&#10;sellgloothamulets = getuseroption('sellgloothamulets')&#10;sellgloothcapes = getuseroption('sellgloothcapes')&#10;sellrubbercaps = getuseroption('sellrubbercaps')&#10;sellheatcores = getuseroption('sellheatcores')&#10;&#10;sellsmallemeralds = getuseroption('sellsmallemeralds')&#10;sellsmalltopazes = getuseroption('sellsmalltopazes')&#10;sellgiantshimmeringpearls = getuseroption('sellgiantshimmeringpearls')&#10;&#10;sellterramantles = getuseroption('sellterramantles')&#10;sellterralegs = getuseroption('sellterralegs')&#10;sellterraboots = getuseroption('sellterraboots')&#10;sellmercenaryswords = getuseroption('sellmercenaryswords')&#10;sellskullstaffs = getuseroption('sellskullstaffs')&#10;sellwaraxes = getuseroption('sellwaraxes')&#10;sellbutchersaxes = getuseroption('sellbutchersaxes')&#10;selldreadedcleaver = getuseroption('selldreadedcleaver')&#10;&#10;priceterramantles = getuseroption('priceterramantles')&#10;priceterralegs = getuseroption('priceterralegs')&#10;priceterraboots = getuseroption('priceterraboots')&#10;pricemercenaryswords = getuseroption('pricemercenaryswords')&#10;priceskullstaffs = getuseroption('priceskullstaffs')&#10;pricewaraxes = getuseroption('pricewaraxes')&#10;pricebutchersaxes = getuseroption('pricebutchersaxes')&#10;pricedreadedcleaver = getuseroption('pricedreadedcleaver')&#10;&#10;pvpe = getuseroption('pvpe')&#10;massanmonsters = getuseroption('massanmonsters')&#10;gfbmonsters = getuseroption('gfbmonsters')&#10;&#10;mainbp = getuseroption('mainbp')&#10;suppbp = getuseroption('suppbp')&#10;lootbp = getuseroption('lootbp')&#10;goldbp = getuseroption('goldbp')&#10;extrabp = getuseroption('extrabp')&#10;maindpbp = getuseroption('maindpbp')&#10;stackdpbp = getuseroption('stackdpbp')&#10;raredpbp = getuseroption('raredpbp')&#10;maxsmp = getuseroption('maxsmp')&#10;minsmp = getuseroption('minsmp')&#10;maxgsp = getuseroption('maxgsp')&#10;mingsp = getuseroption('mingsp')&#10;ammotype = getuseroption('ammotype')&#10;maxammo = getuseroption('maxammo')&#10;minammo = getuseroption('minammo')&#10;mincap = getuseroption('mincap')&#10;maxgfb = getuseroption('maxgfb')&#10;mingfb = getuseroption('mingfb')&#10;&#10;ropetype = getsetting('Cavebot/Rope')&#10;cavebotenabled = getsetting('Cavebot/Enabled')&#10;&#10;keephaste = getuseroption('keephaste')&#10;&#10;if keephaste then&#10;setsetting('ConditionHealer/Rules/NewHealRule1/Enabled', 'yes')&#10;else&#10;setsetting('ConditionHealer/Rules/NewHealRule1/Enabled', 'no')&#10;end&#10;&#10;&#10;if pvpe then&#10;if not $pzone then&#10;setsetting('Cavebot/WalkThroughPlayers', 'no')&#10;else&#10;setsetting('Cavebot/WalkThroughPlayers', 'yes')&#10;end&#10;else&#10;setsetting('Cavebot/WalkThroughPlayers', 'yes')&#10;end&#10;&#10;&#10;if itemcount(ammotype) &lt; minammo or itemcount(&quot;strong mana potion&quot;) &lt; minsmp or itemcount(&quot;great spirit potion&quot;) &lt; mingsp or itemcount(&quot;great fireball rune&quot;) &lt; mingfb then&#10;havesupply = false&#10;else&#10;havesupply = true&#10;end&#10;&#10;if $cap &gt; mincap then&#10;havecap = true&#10;else&#10;havecap = false&#10;end&#10;&#10;--Looting destinations&#10;setlootingdestination('mainbp', mainbp)&#10;setlootingdestination('lootbp', lootbp)&#10;setlootingdestination('suppbp', suppbp)&#10;setlootingdestination('goldbp', goldbp)&#10;setlootingdestination('extrabp', extrabp)&#10;setlootingdestination('maindpbp', maindpbp)&#10;setlootingdestination('stackdpbp', stackdpbp)&#10;setlootingdestination('raredpbp', raredpbp)&#10;--koniec&#10;if usegfb then&#10;showuseroption('maxgfb', true)&#10;showuseroption('mingfb', true)&#10;else&#10;showuseroption('maxgfb', false)&#10;showuseroption('mingfb', false)&#10;&#10;end&#10;if itemcount(&quot;great spirit potion&quot;,suppbp) &lt; maxgsp then&#10;setsetting('Looting/LootList/great spirit potion/LootingDestination', 'suppbp')&#10;else&#10;setsetting('Looting/LootList/great spirit potion/LootingDestination', 'lootbp')&#10;end&#10;&#10;if $wptsection == &quot;Hunt&quot; then&#10;if not havesupply or not havecap then&#10;gotolabel(&quot;start&quot;,&quot;Leave&quot;)&#10;setsetting('Targeting/Creatures/Category A/Setting1/OnlyIfTrapped', 'yes')&#10;end&#10;end&#10;&#10;&#10;if $belt.count &lt; 20 then&#10;equipitem(ammotype,'belt')&#10;end&#10;&#10;if sellitemsonmarket then&#10;showuseroption('Enable checkbox to see market items list', false)&#10;showuseroption('Market Prices', true)&#10;showuseroption('sellterramantles', true)&#10;showuseroption('sellterralegs', true)&#10;showuseroption('sellterraboots', true)&#10;showuseroption('sellmercenaryswords', true)&#10;showuseroption('sellskullstaffs', true)&#10;showuseroption('sellwaraxes', true)&#10;showuseroption('sellbutchersaxes', true)&#10;showuseroption('selldreadedcleaver', true)&#10;&#10;else&#10;showuseroption('Enable checkbox to see market items list', true)&#10;showuseroption('Market Prices', false)&#10;showuseroption('sellterramantles', false)&#10;showuseroption('sellterralegs', false)&#10;showuseroption('sellterraboots', false)&#10;showuseroption('sellmercenaryswords', false)&#10;showuseroption('sellskullstaffs', false)&#10;showuseroption('sellwaraxes', false)&#10;showuseroption('sellbutchersaxes', false)&#10;showuseroption('selldreadedcleaver', false)&#10;end&#10;&#10;if sellitemsonmarket then&#10;&#10;if sellterramantles then&#10;showuseroption('priceterramantle',true)&#10;else&#10;showuseroption('priceterramantle',false)&#10;end&#10;&#10;if sellterralegs then&#10;showuseroption('priceterralegs',true)&#10;else&#10;showuseroption('priceterralegs',false)&#10;end&#10;if sellterraboots then&#10;showuseroption('priceterraboots',true)&#10;else&#10;showuseroption('priceterraboots',false)&#10;end&#10;&#10;if sellmercenaryswords then&#10;showuseroption('pricemercenarysword',true)&#10;else&#10;showuseroption('pricemercenarysword',false)&#10;end&#10;&#10;if sellskullstaffs then&#10;showuseroption('priceskullstaff',true)&#10;else&#10;showuseroption('priceskullstaff',false)&#10;end&#10;&#10;if sellwaraxes then&#10;showuseroption('pricewaraxe',true)&#10;else&#10;showuseroption('pricewaraxe',false)&#10;end&#10;&#10;if sellbutchersaxes then&#10;showuseroption('pricebutchersaxe',true)&#10;else&#10;showuseroption('pricebutchersaxe',false)&#10;end&#10;&#10;if selldreadedcleaver then&#10;showuseroption('pricedreadedcleaver',true)&#10;else&#10;showuseroption('pricedreadedcleaver',false)&#10;end&#10;&#10;&#10;end&#10;&#10;&#10;if selllooteditems then&#10;showuseroption('Enable checkbox to see loot items list', false)&#10;showuseroption('sellgloothclubs', true)&#10;showuseroption('sellgloothaxes', true)&#10;showuseroption('sellgloothblades', true)&#10;showuseroption('sellgloothamulets',true)&#10;showuseroption('sellgloothcapes',true)&#10;showuseroption('sellrubbercaps',true)&#10;showuseroption('sellheatcores',true)&#10;else&#10;showuseroption('Enable checkbox to see loot items list', true)&#10;showuseroption('sellgloothclubs', false)&#10;showuseroption('sellgloothaxes', false)&#10;showuseroption('sellgloothblades', false)&#10;showuseroption('sellgloothamulets',false)&#10;showuseroption('sellgloothcapes',false)&#10;showuseroption('sellrubbercaps',false)&#10;showuseroption('sellheatcores',false)&#10;end&#10;if selljewerly then&#10;showuseroption('Enable checkbox to see jewerly list', false)&#10;showuseroption('sellsmallemeralds', true)&#10;showuseroption('sellsmalltopazes',true)&#10;showuseroption('sellgiantshimmeringpearls',true)&#10;else&#10;showuseroption('Enable checkbox to see jewerly list', true)&#10;showuseroption('sellsmallemeralds', false)&#10;showuseroption('sellsmalltopazes',false)&#10;showuseroption('sellgiantshimmeringpearls',false)&#10;end&#10;&#10;if $cap &lt; 500 then&#10;if (itemcount(283) + itemcount(284) + itemcount(285)) &gt; 10 then&#10;    for id = 283, 285 do&#10;    if itemcount(id) &gt; 5 then&#10;    moveitems(id, 'ground') return&#10;    end&#10;    end&#10;end&#10;end&#10;" enabled="yes"/>
            <PersistentScript name="Mas San" script="    init start&#10;&#10;    local Monsters = {&quot;glooth bandit&quot;, &quot;glooth brigand&quot;}&#10;&#10;    init end&#10;    local Players = {&#10;    Consider = pvpe,&#10;    Distance = 10,&#10;    FloorDifference = 1,&#10;    SafeList = {&quot;Bubble&quot;, &quot;Eternal Oblivion&quot;},&#10;    }&#10;&#10;    local Spells = {&#10;    {Name = &quot;exevo mas san&quot;, Amount = massanmonsters},&#10;    {Name = &quot;exori san&quot;, Amount = esanamount},&#10;    }&#10;&#10;    local SpecialAreas = {&#10;    -- {min x, max x, min y, max y, z}&#10;    }&#10;&#10;    local UseTargetState = false&#10;&#10;    -- DO NOT CHANGE ANYTHING BELOW THIS LINE&#10;&#10;    local i, LastFloor, Exhaust = 1, $posz, $timems&#10;&#10;    while Spells[i] ~= nil do&#10;    Spells[i].Info = spellinfo(Spells[i].Name)&#10;&#10;    if Spells[i].Info.words == 0 then&#10;    table.remove(Spells, i)&#10;    else&#10;    Spells[i].Monsters = Spells[i].Monsters or Monsters&#10;    Spells[i].NeedDirection = table.find({&quot;WaveSmall&quot;, &quot;WaveVerySmall&quot;, &quot;WaveBig&quot;, &quot;BeamSmall&quot;, &quot;BeamBig&quot;, &quot;Front&quot;, &quot;Strike&quot;}, Spells[i].Info.castarea) ~= nil&#10;    Spells[i].AttackSupport = Spells[i].Info.group:match(&quot;Support&quot;) ~= nil&#10;&#10;    table.lower(Spells[i].Monsters)&#10;    i = i + 1&#10;    end&#10;    end&#10;&#10;&#10;    auto(500, 600)&#10;&#10;    if $posz ~= LastFloor then&#10;    LastFloor, Exhaust = $posz, $timems + 2000&#10;    return&#10;    end&#10;&#10;    if $timems &gt;= Exhaust and ($targeting or not UseTargetState) then&#10;    for _, Spell in ipairs(Spells) do&#10;    if cancast(Spell.Info) and not isinsidearea(SpecialAreas) then&#10;    if Spell.Amount and (not Players.Consider or paroundfloorignore(Players.Distance, Players.FloorDifference, unpack(Players.SafeList)) == 0) then&#10;    local BestAmount, BestDir = 0, $self.dir&#10;&#10;    if Spell.NeedDirection then&#10;    for Dir, Amount in pairs({n = 0, e = 0, s = 0, w = 0}) do&#10;    Amount = maroundspell(Spell.Name, Dir, unpack(Spell.Monsters))&#10;&#10;    if Amount &gt; BestAmount or (Amount &gt;= BestAmount and Dir == $self.dir) then&#10;    BestAmount, BestDir = Amount, Dir&#10;    end&#10;    end&#10;    else&#10;    BestAmount = not Spell.AttackSupport and maroundspell(Spell.Name, BestDir, unpack(Spell.Monsters)) or maround(1, false, unpack(Spell.Monsters))&#10;    end&#10;&#10;    if BestAmount &gt;= math.max(Spell.Amount, 1) then&#10;    while $self.dir ~= BestDir do&#10;    turn(BestDir) waitping()&#10;    end&#10;    cast(Spell.Name) waitping()&#10;    end&#10;    elseif Spell.Hppc and $attacked.hppc &gt;= math.max(Spell.Hppc, 1) and table.find(Spell.Monsters, $attacked.name:lower()) and cancast(Spell.Info, $attacked) then&#10;    cast(Spell.Name) waitping()&#10;    end&#10;    end&#10;    end&#10;    end" enabled="yes"/>
            <PersistentScript name="Gfb" script="init start&#10;-- VERSION 1.1.0 --&#10;runeerror = false&#10;local Monsters = {&quot;glooth bandit&quot;, &quot;glooth brigand&quot;}&#10;&#10;init end&#10;if usegfb then&#10;&#10;auto(100, 200)&#10;&#10;&#10;local AmountToShoot = gfbmonsters&#10;&#10;local Players = {&#10;Consider = pvpe,&#10;Distance = 20,&#10;SafeList = {&quot;Bubble&quot;, &quot;Eternal Oblivion&quot;},&#10;FloorDifference = 1&#10;}&#10;&#10;local Rune = &quot;Great Fireball Rune&quot;&#10;local MoveSpeed = 'Instantaneous'&#10;&#10;-- DO NOT EDIT BELOW --&#10;&#10;if not ($fasthotkeys or isbinded({Rune, 'crosshair'})) then&#10;if not runeerror then&#10;printerrorf('Rune &quot;%s&quot; is not set on Tibia hotkeys, please change settings and restart script', Rune)&#10;runeerror = true&#10;end&#10;end&#10;&#10;setsetting('Settings/MouseMoveSpeed', tostring(MoveSpeed))&#10;&#10;&#10;&#10;if not Players.Consider or paroundfloorignore(Players.Distance, Players.FloorDifference, unpack(Players.SafeList)) == 0 then&#10;local sqm = getarearunetile(not Players.Consider, unpack(Monsters))&#10;&#10;if sqm.amount &gt;= AmountToShoot then&#10;pausewalking(100)&#10;useitemon(Rune, 0, sqm.tile)&#10;pausewalking(0)&#10;wait(2000)&#10;end&#10;end&#10;end" enabled="yes"/>
            <PersistentScript name="SafeBank" script="auto(100)&#10;foreach newmessage m do&#10; if m.content == &quot;There is not enough gold on your account.&quot; and m.type == 6 then&#10;   gotolabel(&quot;start&quot;, &quot;GoTrainers&quot;)&#10;  end&#10;end" enabled="yes"/>
            <PersistentScript name="Alert" script="auto(1000)&#10;    -- local SCRIPT_VERSION = '1.0.1'&#10;if $wptsection == &quot;Hunt&quot; then&#10;    local alerts = {&#10;    {&#10;    name = 'Player on Screen',&#10;    sound = 'playeronscreen.wav',&#10;&#10;    playSound = usealertonspawn,&#10;    pauseBot = false,&#10;    logout = false,&#10;    safelist = {}&#10;    },&#10;    {&#10;    name = 'Player Attacking',&#10;    sound = 'playerattacking.wav',&#10;&#10;    playSound = getuseroption('alertonspawn'),&#10;    pauseBot = false,&#10;    logout = false,&#10;    safelist = {getuseroption('friendname')}&#10;    },&#10;    {&#10;    name = 'Monster Attacking',&#10;    sound = 'monsterattacking.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    safelist = {'Rat', 'Bat'}&#10;    },&#10;    {&#10;    name = 'Private Message',&#10;    sound = 'privatemessage.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    safelist = {'Bubble', 'Cachero'}&#10;    },&#10;    {&#10;    name = 'Default Message',&#10;    sound = 'defaultmessage.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    safelist = {'Bubble', 'Cachero'}&#10;    },&#10;    {&#10;    name = 'GM Detected',&#10;    sound = 'gmdetected.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false&#10;    },&#10;    {&#10;    name = 'Disconnected',&#10;    sound = 'disconnected.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false&#10;    },&#10;    {&#10;    name = 'Character Stuck',&#10;    sound = 'characterstuck.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    stuckTime = 30000 -- ms&#10;    },&#10;    {&#10;    name = 'Health Below',&#10;    sound = 'lowhealth.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    pcBelow = 50&#10;    },&#10;    {&#10;    name = 'Mana Below',&#10;    sound = 'lowmana.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    pcBelow = 50&#10;    }&#10;    }&#10;&#10;    -- Do not edit below this line&#10;&#10;    do&#10;    local tests = {&#10;    function(safelist) return paroundignore(10, table.unpack(safelist)) &gt; 0 end,&#10;    function(safelist) return $pattacker.id ~= 0 and not table.find(safelist, $pattacker.name:lower()) end,&#10;    function(safelist) return $mattacker.id ~= 0 and not table.find(safelist, $mattacker.name:lower()) end,&#10;    function(safelist) foreach newmessage m do if m.type == MSG_PVT then return true end end return false end,&#10;    function(safelist) foreach newmessage m do if m.type == MSG_WHISPER or m.type == MSG_DEFAULT or m.type == MSG_YELL then return true end end return false end,&#10;    function() foreach creature c do if c.name:starts('GM') or c.name:starts('CM') then return true end end return false end,&#10;    function() return not $connected end,&#10;    function(stuckTime) return $standtime &gt; stuckTime end,&#10;    function(pcBelow) return $hppc &lt; pcBelow end,&#10;    function(pcBelow) return $mppc &lt; pcBelow end&#10;    }&#10;&#10;    for i = 1, #alerts do&#10;    local alert = alerts[i]&#10;    alert.test = tests[i]&#10;&#10;    if alert.safelist then&#10;    table.lower(alert.safelist)&#10;    end&#10;    end&#10;    end&#10;&#10;&#10;    auto(100)&#10;    listas('Alerts')&#10;    for _, v in ipairs(alerts) do&#10;    if v.test(v.safelist or v.stuckTime or v.pcBelow) then&#10;    if v.playSound then&#10;    playsound(v.sound)&#10;    end&#10;    if v.pauseBot then&#10;    pausebot(true)&#10;    end&#10;    if v.logout then&#10;    xlog()&#10;    end&#10;    end&#10;    end&#10;end" enabled="yes"/>
        </PersistentScripts>
    </Scripter>
    <HUDs>
        <HUDScripts>
            <HUDScript name="GeneralInfo" script="init start&#13;&#10;&#9;-- local SCRIPT_VERSION = '1.0.0'&#13;&#10;&#9;&#13;&#10;&#9;local fontsize = 10&#13;&#10;&#9;local fontspacing = fontsize + 6&#13;&#10;&#9;setfontstyle(&quot;MS Serif&quot;, 10, 100, 0xCCCCCC, 1, 0x555555)&#13;&#10;&#9;&#13;&#10;&#9;local displayontitle = true -- set it to false to display it as a rectangular info instead&#13;&#10;&#9;local maxsize = 220&#13;&#10;&#9;&#13;&#10;&#9;setmaskcolorxp(0)&#13;&#10;init end&#13;&#10;&#13;&#10;auto(100)&#13;&#10;local info = {&#13;&#10;&#9;{color = 0xff5577, text = 'Exp/h: ', value = num($exphour)},&#13;&#10;&#9;{color = 0x77ff77, text = 'Level up: ', value = num($exptonextlevel) .. ' / ' .. time(timetolevel())},&#13;&#10;&#9;{color = 0x44eeff, text = 'Stamina: ', value = num($stamina)},&#13;&#10;&#9;{color = 0xcccccc, text = 'Ping: ', value = num($pingaverage)},&#13;&#10;&#9;{color = 0xc6b2ea, text = 'ItemID: ', value = $cursorinfo.id},&#13;&#10;}&#13;&#10;&#13;&#10;if (displayontitle) then&#13;&#10;&#9;local x = 0&#13;&#10;&#9;for _,j in ipairs(info) do&#13;&#10;&#9;&#9;local str = j.text .. j.value&#13;&#10;&#9;&#9;local w = measurestring(str)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;setfontcolor(j.color)&#13;&#10;&#9;&#9;drawtext(str, x, 0)&#13;&#10;&#9;&#9;x = x + w + 50&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setposition($clientwin.left + 30, $clientwin.top - 21)&#13;&#10;else&#13;&#10;&#9;for i,j in ipairs(info) do&#13;&#10;&#9;&#9;local w = measurestring(j.value)&#13;&#10;&#9;&#9;local posy = (i-1)*fontspacing&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;setfontcolor(j.color)&#13;&#10;&#9;&#9;drawtext(j.text, 2, posy)&#13;&#10;&#9;&#9;drawtext(j.value, maxsize-w, posy)&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;setposition($worldwin.left+20, $worldwin.top+8)&#13;&#10;end" enabled="no" refreshRate="100"/>
            <HUDScript name="ContextMenu" script="init start&#13;&#10;&#9;-- local SCRIPT_VERSION = '2.2.0'&#13;&#10;&#13;&#10;&#9;local showProfile = true&#13;&#10;&#9;local showRelation = true&#13;&#10;&#9;local showWaypoints = true&#13;&#10;&#9;local mainWaypoints = {'Node', 'Stand', 'Action', 'Lure'}&#13;&#10;&#9;local secondaryWaypoints = {'Walk', 'Shovel', 'Rope', 'Machete', 'Ladder', 'Use'}&#13;&#10;&#9;local showSpecialAreas = true&#13;&#10;&#9;local specialAreas = {'none', 'cavebot', 'targeting', 'cavebot &amp; targeting'}&#13;&#10;&#13;&#10;&#9;-- DO NOT EDIT BELOW THIS LINE --&#13;&#10;&#13;&#10;&#9;local defFontColor        = color(223, 223, 223)&#13;&#10;&#9;local defBackColor        = color(70, 70, 70)&#13;&#10;&#9;local defHighColor        = color(128, 128, 128)&#13;&#10;&#9;local boxColor            = color(70, 70, 70)&#13;&#10;&#9;local boxLightShadowColor = color(117, 117, 117)&#13;&#10;&#9;local boxDarkShadowColor  = color(41, 41, 41)&#13;&#10;&#13;&#10;&#9;local borderSize = 4&#13;&#10;&#9;local paddingSize = 3&#13;&#10;&#13;&#10;&#9;local PROFILE_URL = &quot;http://www.tibia.com/community/?subtopic=characters&amp;name=&quot;&#13;&#10;&#13;&#10;&#9;ALIGN_LEFT   = 0&#13;&#10;&#9;ALIGN_CENTER = 1&#13;&#10;&#9;ALIGN_RIGHT  = 2&#13;&#10;&#13;&#10;&#9;MENU_SEPARATOR = '-- SEPARATOR --'&#13;&#10;&#13;&#10;&#9;local items, highlight, contextMenu, maxWidth, maxHeight, clicked&#13;&#10;&#13;&#10;&#9;do -- Register default handlers&#13;&#10;&#9;&#9;if showProfile then&#13;&#10;&#9;&#9;&#9;local function showProfileName(m)&#13;&#10;&#9;&#9;&#9;&#9;return 'Show page for ' .. m.creature.name&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local function showProfileCall(m)&#13;&#10;&#9;&#9;&#9;&#9;openbrowser(PROFILE_URL .. m.creature.name:gsub(' ', '+'))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', showProfileName, showProfileCall)&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if showRelation then&#13;&#10;&#9;&#9;&#9;local function currentRelationName(m)&#13;&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id then&#13;&#10;&#9;&#9;&#9;&#9;&#9;return m.creature.name .. ': ' .. m.creature.teamname, m.creature.teamcolor, nil, color(70, 70, 70)&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', currentRelationName, nil)&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- enemy&#13;&#10;&#9;&#9;&#9;local function setEnemyName(m)&#13;&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and not m.creature.isenemy then&#13;&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as enemy'&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local function setEnemyCall(m)&#13;&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'enemy')&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setEnemyName, setEnemyCall)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- ally&#13;&#10;&#9;&#9;&#9;local function setAllyName(m)&#13;&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and (not m.creature.isally or m.creature.isleader) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as ally'&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local function setAllyCall(m)&#13;&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'ally')&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setAllyName, setAllyCall)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- leader&#13;&#10;&#9;&#9;&#9;local function setLeaderName(m)&#13;&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and not m.creature.isleader then&#13;&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as leader'&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local function setLeaderCall(m)&#13;&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'leader')&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setLeaderName, setLeaderCall)&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if showWaypoints then&#13;&#10;&#9;&#9;&#9;for _, v in ipairs({mainWaypoints, secondaryWaypoints}) do&#13;&#10;&#9;&#9;&#9;&#9;for _, vv in ipairs(v) do&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- I learned this trick with JavaScript; basically, we call a anonymous&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- function that returns the function we'll actually use. The trick is&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- that we pass to this first anonymous function the type of the node&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- we want the returned function to add. This works because the inner&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- function is created in a scope where `type` has the desired value,&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- so it's value is retained for future calls.&#13;&#10;&#9;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', 'Add ' .. vv, (function(type)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;return function(m)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;addwaypoint(type, m.posx, m.posy, m.posz)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end)(vv))&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', MENU_SEPARATOR, nil)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if showSpecialAreas then&#13;&#10;&#9;&#9;&#9;for _, v in ipairs(specialAreas) do&#13;&#10;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', 'Add Special Area (' .. v:capitalizeall() .. ')', (function(type)&#13;&#10;&#9;&#9;&#9;&#9;&#9;return function(m)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;addspecialarea(type, m.posx, m.posy, m.posz)&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end)(v))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_world', MENU_SEPARATOR, nil)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function loadCategories(...)&#13;&#10;&#9;&#9;local categories = {...}&#13;&#10;&#13;&#10;&#9;&#9;for _, v in ipairs(categories) do&#13;&#10;&#9;&#9;&#9;local cat = 'contextMenu_' .. v&#13;&#10;&#9;&#9;&#9;foreach messagehandler m cat do&#13;&#10;&#9;&#9;&#9;&#9;local text, fontColor, backColor, highColor, align&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if type(m.name) == 'function' then&#13;&#10;&#9;&#9;&#9;&#9;&#9;text, fontColor, highColor, backColor, align = m.name(contextMenu)&#13;&#10;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;text = m.name&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if text and text ~= '' then&#13;&#10;&#9;&#9;&#9;&#9;&#9;local width&#13;&#10;&#9;&#9;&#9;&#9;&#9;if text == MENU_SEPARATOR then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxHeight = maxHeight + 8&#13;&#10;&#9;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;width = (measurestring(text))&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxHeight = maxHeight + 19&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxWidth = math.max(maxWidth, width)&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;table.insert(items, {&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;text      = text,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;width     = width,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;callback  = m.callback,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;fontColor = fontColor or defFontColor,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;highColor = highColor or defHighColor,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;backColor = backColor or defBackColor&#13;&#10;&#9;&#9;&#9;&#9;&#9;});&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;filterinput(false, true, true, false)&#13;&#10;&#9;function inputevents(e)&#13;&#10;&#9;&#9;local eventItem, itemIndex&#13;&#10;&#9;&#9;for i, v in ipairs(items) do&#13;&#10;&#9;&#9;&#9;if v.id == e.elementid then&#13;&#10;&#9;&#9;&#9;&#9;eventItem = v&#13;&#10;&#9;&#9;&#9;&#9;itemIndex = i&#13;&#10;&#9;&#9;&#9;&#9;break&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;highlight = itemIndex&#13;&#10;&#9;&#9;if e.type == IEVENT_LMOUSEUP then&#13;&#10;&#9;&#9;&#9;if eventItem and eventItem.callback then&#13;&#10;&#9;&#9;&#9;&#9;eventItem.callback(contextMenu)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;clicked = true&#13;&#10;&#9;&#9;&#9;highlight = nil&#13;&#10;&#9;&#9;&#9;waitforevents(false)&#13;&#10;&#9;&#9;&#9;press('[ESC]')&#13;&#10;&#9;&#9;&#9;waitforevents(true)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setfontstyle('Tahoma', 7, 75, defFontColor, 1, 0x000000)&#13;&#10;&#9;setantialiasing(true)&#13;&#10;init end&#13;&#10;&#13;&#10;auto(10)&#13;&#10;&#13;&#10;contextMenu = contextmenuinfo()&#13;&#10;&#13;&#10;-- This prevents the HUD from redrawing after clicking&#13;&#10;if clicked then&#13;&#10;&#9;clicked = contextMenu ~= nil&#13;&#10;&#9;contextMenu = nil&#13;&#10;end&#13;&#10;&#13;&#10;if contextMenu == nil then&#13;&#10;&#9;highlight = nil&#13;&#10;&#9;return&#13;&#10;end&#13;&#10;&#13;&#10;items = {}&#13;&#10;maxWidth, maxHeight = 0, -4&#13;&#10;local fullWidth, fullHeight&#13;&#10;do -- Bootstrap&#13;&#10;&#13;&#10;&#9;-- Load categories&#13;&#10;&#9;if contextMenu.type == 'battle' or contextMenu.itemid == 99 then&#13;&#10;&#9;&#9;contextMenu.creature = getcreaturebyid(contextMenu.creatureid)&#13;&#10;&#13;&#10;&#9;&#9;if contextMenu.creature.isplayer then&#13;&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'Player', 'player')&#13;&#10;&#9;&#9;elseif contextMenu.creature.isnpc then&#13;&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'NPC', 'NPC')&#13;&#10;&#9;&#9;elseif contextMenu.creature.ismonster then&#13;&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'Monster', 'monster')&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;loadCategories(contextMenu.type .. 'Creature', 'creature')&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if contextMenu.type == 'world' then&#13;&#10;&#9;&#9;if not contextMenu.creature then&#13;&#10;&#9;&#9;&#9;loadCategories('worldItem', 'item')&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if contextMenu.posz == $posz then&#13;&#10;&#13;&#10;&#9;&#9;&#9;do&#13;&#10;&#9;&#9;&#9;&#9;local i = 0&#13;&#10;&#9;&#9;&#9;&#9;foreach settingsentry e 'Cavebot/Waypoints' do&#13;&#10;&#9;&#9;&#9;&#9;&#9;local x, y, z = get(e, 'Coordinates'):match(REGEX_COORDS)&#13;&#10;&#9;&#9;&#9;&#9;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;if z == $posz then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;local diffX, diffY = contextMenu.posx - x, contextMenu.posy - y&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &gt;= 0 and diffY &gt;= 0 then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local w, h = get(e, 'Range'):match(REGEX_RANGE)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;w, h = tonumber(w), tonumber(h)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &lt; w and diffY &lt; h then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.waypoint = e&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.waypointID = i&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;i = i + 1&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if contextMenu.waypoint then&#13;&#10;&#9;&#9;&#9;&#9;&#9;loadCategories('worldWaypoint', 'waypoint')&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;do&#13;&#10;&#9;&#9;&#9;&#9;foreach settingsentry e 'Cavebot/SpecialAreas' do&#13;&#10;&#9;&#9;&#9;&#9;&#9;local x, y, z = get(e, 'Coordinates'):match(REGEX_COORDS)&#13;&#10;&#9;&#9;&#9;&#9;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;if z == $posz then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;local diffX, diffY = contextMenu.posx - x, contextMenu.posy - y&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &gt;= 0 and diffY &gt;= 0 then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local w, h = get(e, 'Size'):match(REGEX_RANGE)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;w, h = tonumber(w), tonumber(h)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &lt; w and diffY &lt; h then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.specialArea = e&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.specialAreaName = get(e, 'Name')&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if contextMenu.specialArea then&#13;&#10;&#9;&#9;&#9;&#9;&#9;loadCategories('worldSpecialArea', 'specialArea')&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;elseif contextMenu.type == 'container' then&#13;&#10;&#9;&#9;loadCategories('containerItem', 'item')&#13;&#10;&#9;elseif contextMenu.type == 'equip' then&#13;&#10;&#9;&#9;loadCategories('equipItem', 'item')&#13;&#10;&#9;end&#13;&#10;&#9;loadCategories(contextMenu.type)&#13;&#10;&#13;&#10;&#9;-- We set it as true from the beginning so that it also removes the first&#13;&#10;&#9;-- item if it's a separator; we obviously don't want the first item to be a&#13;&#10;&#9;-- separator. NOTE: relies on the fact that ipairs() will traverse the&#13;&#10;&#9;-- table in ascending order, which isn't guaranteed by the reference manual&#13;&#10;&#9;-- but is the common implementation&#13;&#10;&#9;local lastSep = true&#13;&#10;&#13;&#10;&#9;-- Instead of removing the items at the for loop, we simply set it to nil&#13;&#10;&#9;-- and normalize it after; this is because if we did remove it, it would&#13;&#10;&#9;-- shift the indexes and end up fucking up posterior checks&#13;&#10;&#9;for i, v in ipairs(items) do&#13;&#10;&#9;&#9;local curSep = v.text == MENU_SEPARATOR&#13;&#10;&#9;&#9;if curSep and (lastSep or i == #items) then&#13;&#10;&#9;&#9;&#9;items[i] = nil&#13;&#10;&#9;&#9;&#9;maxHeight = maxHeight - 8&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;lastSep = curSep&#13;&#10;&#9;end&#13;&#10;&#9;table.normalize(items)&#13;&#10;&#13;&#10;&#9;-- No item to display, abort mission!&#13;&#10;&#9;if #items == 0 then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- The Tibia context menu has an extra width of 44 pixels for the longest&#13;&#10;&#9;-- item; here we account for that&#13;&#10;&#9;maxWidth = maxWidth + 44&#13;&#10;&#13;&#10;&#9;fullWidth, fullHeight = maxWidth + 2*borderSize, maxHeight + 2*borderSize&#13;&#10;&#9;setposition($clientwin.x + contextMenu.x - fullWidth - 2,$clientwin.y + contextMenu.y)&#13;&#10;end&#13;&#10;&#13;&#10;do -- Draw Container&#13;&#10;&#9;-- Draw main box&#13;&#10;&#9;setfillstyle('color', boxColor)&#13;&#10;&#9;setbordercolor(-1)&#13;&#10;&#9;drawrect(0, 0, fullWidth, fullHeight)&#13;&#10;&#13;&#10;&#9;-- Draw shadows&#13;&#10;&#9;setbordercolor(boxLightShadowColor)&#13;&#10;&#9;drawline(0, 0, fullWidth, 0)&#13;&#10;&#9;drawline(0, 0, 0, fullHeight)&#13;&#10;&#9;drawline(2, fullHeight - 2, fullWidth - borderSize, 0)&#13;&#10;&#9;drawline(fullWidth - 2, 2, 0, fullHeight - borderSize)&#13;&#10;&#13;&#10;&#9;setbordercolor(boxDarkShadowColor)&#13;&#10;&#9;drawline(2, 2, fullWidth - borderSize, 0)&#13;&#10;&#9;drawline(2, 2, 0, fullHeight - borderSize)&#13;&#10;&#9;drawline(0, fullHeight, fullWidth, 0)&#13;&#10;&#9;drawline(fullWidth, 0, 0, fullHeight)&#13;&#10;end&#13;&#10;&#13;&#10;do -- Draw items&#13;&#10;&#9;local curHeight = borderSize&#13;&#10;&#9;for i, v in ipairs(items) do&#13;&#10;&#9;&#9;-- Separators get special treatment here&#13;&#10;&#9;&#9;if v.text == MENU_SEPARATOR then&#13;&#10;&#9;&#9;&#9;setbordercolor(boxDarkShadowColor)&#13;&#10;&#9;&#9;&#9;drawline(borderSize, curHeight, maxWidth, 0)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setbordercolor(boxLightShadowColor)&#13;&#10;&#9;&#9;&#9;drawline(borderSize, curHeight + 1, maxWidth, 0)&#13;&#10;&#13;&#10;&#9;&#9;&#9;curHeight = curHeight + 8&#13;&#10;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- This is a dirty, dirrty attempt of making the code shorter; and&#13;&#10;&#9;&#9;&#9;-- that's what I love the most about programming&#13;&#10;&#9;&#9;&#9;local alignOffset = ((maxWidth - paddingSize - v.width) / 2) * (v.align or ALIGN_LEFT)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Set style&#13;&#10;&#9;&#9;&#9;setbordercolor(-1)&#13;&#10;&#9;&#9;&#9;setfontcolor(v.fontColor)&#13;&#10;&#9;&#9;&#9;setfillstyle('color', tern(i == highlight, v.highColor, v.backColor))&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Draw stuff&#13;&#10;&#9;&#9;&#9;v.id = drawrect(borderSize, curHeight, maxWidth, 15)&#13;&#10;&#9;&#9;&#9;drawtext(v.text, borderSize + paddingSize + alignOffset, curHeight + paddingSize)&#13;&#10;&#13;&#10;&#9;&#9;&#9;curHeight = curHeight + 19&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end" enabled="no" refreshRate="100"/>
            <HUDScript name="MonitorMyHunting" script="init start&#10;&#9;--&#10;&#9;--                        88                                                                  &#10;&#9;--                        &quot;&quot;                                                ,d                &#10;&#9;--                                                                          88                &#10;&#9;--             ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;&#9;--             I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;&#9;--              `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;&#9;--             aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;&#9;--   Author:   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;&#9;--   &#10;&#9;--   Monitor My Hunting!&#10;&#9;--&#10;&#9;--   Version: 1.0&#10;&#9;--   Created: 29.12.2013&#10;&#9;--   Last update: 29.12.2013&#10;&#9;--&#10;&#10;&#9;local MMH = {&#10;&#9;&#9;SHOW_ALL_ITEMS = false,&#10;&#9;&#9;SHOW_ALL_SUPPLIES = false,&#10;&#9;}&#10;&#10;&#9;-- [[ Do not change anything below this line. ]] --&#10;&#10;&#9;-- [[ COLORS ]] --&#10;&#9;MMH.COLORS = {}&#10;&#9;MMH.COLORS.FONT_COLOR = color(255, 255, 255, 0)&#10;&#9;MMH.COLORS.SECTION_HEADER_BACKGROUND = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)}&#10;&#9;MMH.COLORS.ENTRY_NAME_BACKGROUND = {0.0, color(41, 105, 100, 105), 0.76, color(37, 94, 50, 50), 0.23, color(19, 19, 19, 20)}&#10;&#9;MMH.COLORS.ENTRY_VALUE_BACKGROUND = {0.0, color(19, 19, 19, 20), 0.23, color(37, 94, 50, 50), 0.76, color(41, 105, 100, 105)}&#10;&#9;MMH.COLORS.RESULT_POSITIVE_BACKGROUND = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)}&#10;&#9;MMH.COLORS.RESULT_NEGATIVE_BACKGROUND = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)}&#10;&#9;MMH.COLORS.RESET_BUTTON_BACKGROUND = {0.0, color(100, 255, 100, 100), 0.23, color(50, 100, 255, 100), 0.76, color(100, 100, 100, 255)}&#10;&#10;&#9;-- [[ ELEMENTS ]] --&#10;&#9;MMH.ELEMENTS = {}&#10;&#9;MMH.ELEMENTS.RESET_BUTTON = -1&#10;&#9;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = -1&#10;&#9;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = -1&#10;&#10;&#9;-- [[ SECTION STATES ]] --&#10;&#9;MMH.SECTIONS = {}&#10;&#9;MMH.SECTIONS.ITEMS_LOOTED = true&#10;&#9;MMH.SECTIONS.SUPPLIES_USED = true&#10;&#10;&#9;-- [[ OTHERS ]] --&#9;&#10;&#9;filterinput(false, true, false, false)&#10;&#9;local MOVING, TEMP, MOVED = false, {0, 0}, {0, 0}&#10;&#10;&#9;function inputevents(e)&#10;&#9;&#9;if (e.type == IEVENT_LMOUSEDOWN) then&#10;&#9;&#9;&#9;if (e.elementid == MMH.ELEMENTS.RESET_BUTTON) then&#10;&#9;&#9;&#9;&#9;resetcharactertime()&#10;&#9;&#9;&#9;&#9;resetlootcounter()&#10;&#9;&#9;&#9;&#9;resetexpcounter()&#10;&#9;&#9;&#9;&#9;friendwaste = 0&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_ITEMS_LOOTED) then&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.ITEMS_LOOTED = not MMH.SECTIONS.ITEMS_LOOTED&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_SUPPLIES_USED) then&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.SUPPLIES_USED = not MMH.SECTIONS.SUPPLIES_USED&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEDOWN) then&#10;&#9;&#9;&#9;MOVING, TEMP = true, {$cursor.x - MOVED[1], $cursor.y - MOVED[2]}&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEUP) then&#10;&#9;&#9;&#9;MOVING = false&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;if (MOVING) then&#10;    auto(10)&#10;    MOVED = {$cursor.x - TEMP[1], $cursor.y - TEMP[2]}&#10;end&#10;&#10;setposition($clientwin.right - 424 + MOVED[1], $worldwin.top + MOVED[2])&#10;setfontstyle('Tahoma', 8, 75, MMH.COLORS.FONT_COLOR, 1, color(0, 0, 0, 20))&#10;&#10;local ROW_QUANTITY, STRING_WIDTH, STRING_HEIGHT = 0, measurestring('TEMP')&#10;local ITEMS_LOOTED_WORTH, ITEM_LOOTED_QUANTITY, ITEM_LOOTED_WORTH = 0, 0, 0&#10;local SUPPLIES_USED_WORTH, SUPPLY_USED_QUANTITY, SUPPLY_USED_WORTH = 0, 0, 0&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 0, 240, 20, 2, 2)&#10;drawtext('Monitor My Hunting v1.0', 6, 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.RESET_BUTTON_BACKGROUND))&#10;MMH.ELEMENTS.RESET_BUTTON = drawroundrect(196, 0, 44, 20, 2, 2)&#10;drawtext('RESET', 202, 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 23, 240, 15, 2, 2)&#10;drawtext('Looting Accuracy', 6, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;drawroundrect(130, 23, 110, 15, 2, 2)&#10;drawtext(string.format('%.2f', $lootaccuracy) .. '%', 136, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;drawroundrect(0, 41, 240, 20, 2, 2)&#10;drawtext('ITEMS LOOTED', 6, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = drawroundrect(220, 41, 20, 20, 2, 2)&#10;drawtext('X', 228, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;foreach lootingitem ItemEntry do&#10;&#9;if (MMH.SHOW_ALL_ITEMS or ItemEntry.amountlooted &gt; 0) then&#10;&#9;&#9;ITEM_LOOTED_QUANTITY = ItemEntry.amountlooted&#10;&#9;&#9;ITEM_LOOTED_WORTH = ItemEntry.sellprice * ITEM_LOOTED_QUANTITY&#10;&#10;&#9;&#9;if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#9;&#9;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 64 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(130, 64 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;&#9;&#9;drawtext(num(ITEM_LOOTED_QUANTITY) .. ' (' .. math.floor(ITEM_LOOTED_WORTH / 100) / 10 .. 'K)', 136, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;ITEMS_LOOTED_WORTH = ITEMS_LOOTED_WORTH + ITEM_LOOTED_WORTH&#10;&#9;end&#10;end&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;drawtext('Total: ' .. num(ITEMS_LOOTED_WORTH) .. ' GPs', 6, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;drawtext('SUPPLIES USED', 6, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = drawroundrect(220, 64 + ROW_QUANTITY * 18, 20, 20, 2, 2)&#10;drawtext('X', 228, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;foreach supplyitem ItemEntry do&#10;&#9;if (MMH.SHOW_ALL_SUPPLIES or ItemEntry.amountused &gt; 0) then&#10;&#9;&#9;SUPPLY_USED_QUANTITY = ItemEntry.amountused&#10;&#9;&#9;SUPPLY_USED_WORTH = ItemEntry.buyprice * SUPPLY_USED_QUANTITY&#10;&#10;&#9;&#9;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;&#9;&#9;drawtext(num(SUPPLY_USED_QUANTITY) .. ' (' .. math.floor(SUPPLY_USED_WORTH / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + SUPPLY_USED_WORTH&#10;&#9;end&#10;end&#10;&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;addgradcolors(0.0, color(90, 12, 15, 200), 0.23, color(98, 13, 17, 200), 0.76, color(52, 6, 9, 200))&#10;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#10;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;drawitem(3031, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;drawtext('Money Wasted', 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;drawtext(num($moneyspent) .. ' (' .. math.floor($moneyspent / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;end&#10;&#10;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + $moneyspent&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;drawtext('Total: ' .. num(SUPPLIES_USED_WORTH) .. ' GPs', 6, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;&#10;drawtext(((ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH and ('Profit: ')) or ('Waste: ')) .. num(ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) .. ' GPs (' .. math.abs(math.floor(((ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) * 3600) / ($charactertime / 1000) / 100) / 10) .. ' k/h)', 6, 87 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;" enabled="yes" refreshRate="100"/>
            <HUDScript name="MonitorMyStats" script="init start&#10;    --&#10;    --              88                                                                  &#10;    --              &quot;&quot;                                                ,d                &#10;    --                                                                88                &#10;    --   ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;    --   I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;    --    `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;    --   aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;    --   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;    --&#10;&#10;    --   Name: Monitor My Stats&#10;    --   Last Updated: 19/12/2013&#10;    --   Version: 1.0&#10;&#10;    local MMS = {&#10;        ShowInfo = true,&#10;&#10;        Title = &quot;Glooth Bandits - RP&quot;,&#10;        Creator = &quot;Yoko&quot;,&#10;        Info = 'RP Version',&#10;        Version = '1.0.0'&#10;    }&#10;&#10;    -- [[ Do not change anything below this line. ]] --&#10;&#10;    filterinput(false, true, false, false)&#10;&#10;    local HUD_Sections = {&#10;        {Name = 'OTHERS', State = true, Items = {&#10;                {'Ping', function() return $ping .. ' (avg: ' .. $pingaverage .. ')' end},&#10;                {'Bank Balance', function() return num($balance) end},&#10;            }&#10;        },&#10;&#10;        {Name = 'CHARACTER STATS', State = true, Items = {&#10;                {'Level', function() return $level .. ' (' .. 100 - math.floor(($exp - expatlvl($level)) * 100 / (expatlvl($level + 1) - expatlvl($level))) .. '%)' end},&#10;                {'Experience', function() return num($exp) end},&#10;                {'Magic Level', function() return $mlevel .. ' (' .. 100 - $mlevelpc .. '%)' end},&#10;                {'Weapon Skill', function() local _ = WeaponSkill() return _.skill .. ' (' .. 100 - _.skillpc .. '%)' end},&#10;                {'Shielding', function() return $shielding .. ' (' .. 100 - $shieldingpc .. '%)' end},&#10;                {'Fishing', function() return $fishing .. ' (' .. 100 - $fishingpc .. '%)' end}&#10;            }&#10;        },&#10;&#10;        {Name = 'ENGINE STATES', State = true, Items = {&#10;                {'Spell Healer', function() return getsetting('SpellHealer/Enabled') end, function() return toggle('SpellHealer/Enabled') end},&#10;                {'Potion Healer', function() return getsetting('PotionHealer/Enabled') end, function() return toggle('PotionHealer/Enabled') end},&#10;                {'Condition Healer', function() return getsetting('ConditionHealer/Enabled') end, function() return toggle('ConditionHealer/Enabled') end},&#10;                {'Mana Training', function() return getsetting('ManaTrainer/Enabled') end, function() return toggle('ManaTrainer/Enabled') end},&#10;                {'Cavebot', function() return getsetting('Cavebot/Enabled') end, function() return toggle('Cavebot/Enabled') end},&#10;                {'Looting', function() return getsetting('Looting/Enabled') end, function() return toggle('Looting/Enabled') end},&#10;                {'Targeting', function() return getsetting('Targeting/Enabled') end, function() return toggle('Targeting/Enabled') end}&#10;            }&#10;        },&#10;&#10;        {Name = 'BOTTING STATS', State = true, Items = {&#10;                {'Experience per Hour', function() return num($exphour) end},&#10;                {'Experience Left', function() return num(exptolevel()) end},&#10;                {'Experience Today', function() return num($expgained) end},&#10;                {'Time to Next Level', function() return time(timetolevel()) end},&#10;                {'Played Time', function() return time(math.floor($charactertime / 1000)) end},&#10;                {'Stamina', function() return time($stamina) end}&#10;            }&#10;        }&#10;    }&#10;&#10;    local HUD_Colors = {&#10;            Font = color(255, 255, 255, 0),&#10;            SectionHeaderBackground = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)},EntryNameBackground = {0.0, color(41, 105, 100, 105), 0.76, color(37, 94, 50, 50), 0.23, color(19, 19, 19, 20)},&#10;EntryValueBackground = {0.0, color(19, 19, 19, 20), 0.23, color(37, 94, 50, 50), 0.76, color(41, 105, 100, 105)},&#10;EntryValueEnabledBackground = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)},&#10;            EntryValueDisabledBackground = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)},&#10;    }&#10;&#10;    function WeaponSkill()&#10;        local SkillTypes = {&#10;            ['axe'] = {type = 'axe', skill = $axe, skillpc = $axepc},&#10;            ['club'] = {type = 'club', skill = $club, skillpc = $clubpc},&#10;            ['sword'] = {type = 'sword', skill = $sword, skillpc = $swordpc},&#10;            ['bow'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['distance weapon'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['no weapon'] = {type = 'fist', skill = $fist, skillpc = $fistpc},&#10;            ['rod'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;            ['wand'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;        }&#10;&#10;        return SkillTypes[findweapontype()]&#10;    end&#10;&#10;    local Moving, Temp, Moved = false, {0, 0}, {0, 0}&#10;&#10;    function inputevents(e)&#10;        if (e.type == IEVENT_LMOUSEDOWN) then&#10;            for _, Section in ipairs(HUD_Sections) do&#10;                if (e.elementid == Section.StateSwitch) then&#10;                    Section.State = not Section.State&#10;                    return&#10;                end&#10;            end&#10;        for _, Section in ipairs(HUD_Sections) do&#10;                if (Section.Name == 'ENGINE STATES') then&#10;                    for _, SectionItem in ipairs(Section.Items) do&#10;                        if (e.elementid == SectionItem[4]) then&#10;                            SectionItem[3]()&#10;                            return&#10;                        end&#10;                    end&#10;                end&#10;            end&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEDOWN) then&#10;            Moving, Temp = true, {$cursor.x - Moved[1], $cursor.y - Moved[2]}&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEUP) then&#10;            Moving = false&#10;        end&#10;    end&#10;    &#10;    setmaskcolorxp(0)&#10;init end&#10;&#10;if (Moving) then&#10;    auto(10)&#10;    Moved = {$cursor.x - Temp[1], $cursor.y - Temp[2]}&#10;end&#10;&#10;setposition($clientwin.left + 5 + Moved[1], $worldwin.top + Moved[2])&#10;setfontstyle('Tahoma', 8, 75, 0xFFFFFF, 1, color(0, 0, 0, 20))&#10;&#10;local YPosition, SectionRow, SectionItemsRow = 0, 0, 0&#10;&#10;if MMS.ShowInfo then&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, 0, 240, 21, 2, 2)&#10;    drawtext(MMS.Title, 6, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 0, 110, 21, 2, 2)&#10;    drawtext(MMS.Creator, 136, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfontsize(7)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 0 * 18, 240, 15, 2, 2)&#10;    drawtext(MMS.Info, 6, 24 + 0 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 1 * 18, 240, 15, 2, 2)&#10;    drawtext('Script version:', 6, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 24 + 1 * 18, 110, 15, 2, 2)&#10;    drawtext(MMS.Version, 136, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;    &#10;    YPosition = 22 + 2 * 19&#10;end&#10;&#10;for SectionIndex, Section in ipairs(HUD_Sections) do&#10;    setfontsize(8)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 20, 2, 2)&#10;    drawtext(Section.Name, 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    if (Section.State) then&#10;        addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;    else&#10;        addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;    end&#10;    Section.StateSwitch = drawroundrect(220, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 20, 20, 2, 2)&#10;    drawtext('X', 228, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    SectionRow = SectionRow + 1&#10;&#10;    if (Section.State) then&#10;        setfontsize(7)&#10;&#10;        local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;        for SectionItemIndex, SectionItem in ipairs(Section.Items) do&#10;            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)     &#10;            addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;            drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 16, 2, 2)&#10;            drawtext(SectionItem[1], 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;&#10;            if (Section.Name == 'ENGINE STATES') then&#10;                local EngineCurrentState = SectionItem[2]()&#10;&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                if (EngineCurrentState == 'yes') then&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;                else&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;                end&#10;                HUD_Sections[SectionIndex].Items[SectionItemIndex][4] = drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;&#10;&#10;                drawtext((EngineCurrentState == 'yes' and ('On')) or ('Off'), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            else&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;                drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;                drawtext(SectionItem[2](), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            end&#10;&#10;            SectionItemsRow = SectionItemsRow + 1&#10;        end&#10;    end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="ShowSpecialAreas" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.2.1'&#10;&#10;&#9;local function deleteSpecialAreaCall(menu)&#10;&#9;&#9;removespecialarea(menu.specialAreaName)&#10;&#9;end&#10;&#10;&#9;local function moveSpecialAreaName()&#10;&#9;&#9;if resizedSP == nil then&#10;&#9;&#9;&#9;return tern(draggedSP == nil, 'Move Special Area', 'Stop Moving')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function moveSpecialAreaCall(menu)&#10;&#9;&#9;if draggedSP == nil then&#10;&#9;&#9;&#9;draggedSP = menu.specialArea&#10;&#9;&#9;else&#10;&#9;&#9;&#9;draggedSP = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeSpecialAreaName()&#10;&#9;&#9;if draggedSP == nil then&#10;&#9;&#9;&#9;return tern(resizedSP == nil, 'Resize Special Area', 'Stop Resizing')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeSpecialAreaCall(menu)&#10;&#9;&#9;if resizedSP == nil then&#10;&#9;&#9;&#9;resizedSP = menu.specialArea&#10;&#9;&#9;else&#10;&#9;&#9;&#9;resizedSP = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;registermessagehandler('contextMenu_specialArea', moveSpecialAreaName, moveSpecialAreaCall)&#10;&#9;registermessagehandler('contextMenu_specialArea', resizeSpecialAreaName, resizeSpecialAreaCall)&#10;&#9;registermessagehandler('contextMenu_specialArea', 'Delete Special Area', deleteSpecialAreaCall)&#10;&#9;registermessagehandler('contextMenu_specialArea', MENU_SEPARATOR, nil)&#10;&#10;&#9;local worldWidth, worldHeight, x, y, z, width, height, avoidance, name, policy, areaType&#10;&#9;local specialAreaRect = {}&#10;&#9;local innerRect = {}&#10;&#10;&#9;local function gettilepos(x, y, z)&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#10;&#10;&#9;&#9;if tile == nil then&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#10;&#9;&#9;&#9;&#9;xDiff = 0&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#10;&#9;&#9;&#9;&#9;yDiff = 0&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#10;&#9;&#9;&#9;-- adding this as a precaution.&#10;&#9;&#9;&#9;if tile ~= nil then&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#10;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return tile&#10;&#9;end&#10;&#10;&#9;local function getAreaRect(x, y, w, h)&#10;&#9;&#9;local ret = {x = 0, y = 0, w = 0, h = 0}&#10;&#10;&#9;&#9;local topLeftTilePos = gettilepos(x, y, $posz)&#10;&#9;&#9;local botRightTilePos = gettilepos(x + w - 1, y + h - 1, $posz)&#10;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#10;&#9;&#9;&#9;ret.x = math.max(topLeftTilePos.left, 0)&#10;&#9;&#9;&#9;ret.y = math.max(topLeftTilePos.top, 0)&#10;&#9;&#9;&#9;ret.w = math.min(botRightTilePos.right, worldWidth) - ret.x&#10;&#9;&#9;&#9;ret.h = math.min(botRightTilePos.bottom, worldHeight) - ret.y&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return ret&#10;&#9;end&#10;&#10;&#9;local function drawInnerRect(areaType, x, y, width, height)&#10;&#9;&#9;innerRect = {w = 0, h = 0}&#10;&#9;&#9;if areaType == 'Square (Border Only)' then&#10;&#9;&#9;&#9;innerRect = getAreaRect(x + 1, y + 1, width - 2, height - 2)&#10;&#9;&#9;elseif areaType == 'Square (Double Border)' then&#10;&#9;&#9;&#9;innerRect = getAreaRect(x + 2, y + 2, width - 4, height - 4)&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if innerRect.w &gt; 0 and innerRect.h &gt; 0 then&#10;&#9;&#9;&#9;setfillstyle('color', 0xFF000000)&#10;&#9;&#9;&#9;drawroundrect(innerRect.x, innerRect.y, innerRect.w, innerRect.h, 10, 10)&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;useworldhud()&#10;init end&#10;&#10;setfontstyle('Arial', 8, 75, 0xFFFFFF, 1, 0x000000)&#10;&#10;worldWidth, worldHeight = $worldwin.width - 2, $worldwin.height - 2&#10;&#10;foreach settingsentry e 'Cavebot/SpecialAreas' do&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match('.-(%d+).-(%d+).-(%d+)')&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;if z == $posz then&#10;&#9;&#9;width, height = getsetting(e, 'Size'):match('(%d+).-(%d+)')&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#10;&#10;&#9;&#9;specialAreaRect = getAreaRect(x, y, width, height)&#10;&#9;&#9;if specialAreaRect.w &gt; 0 and specialAreaRect.h &gt; 0 then&#10;&#9;&#9;&#9;avoidance = tonumber(getsetting(e, 'Avoidance'))&#10;&#9;&#9;&#9;areaType = getsetting(e, 'Type')&#10;&#9;&#9;&#9;name = getsetting(e, 'Name')&#10;&#9;&#9;&#9;policy = getsetting(e, 'Policy'):gsub('[^A-Z]', '')&#10;&#10;&#9;&#9;&#9;setfillstyle('color', color(255, 0, 0, math.round(100 - (avoidance / 4))))&#10;&#9;&#9;&#9;drawroundrect(specialAreaRect.x, specialAreaRect.y, specialAreaRect.w, specialAreaRect.h, 10, 10)&#10;&#9;&#9;&#9;drawInnerRect(areaType, x, y, width, height)&#10;&#10;&#9;&#9;&#9;if specialAreaRect.w &gt; 10 then&#10;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;string.fit(name, specialAreaRect.w - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.x + 5,&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.y + 3&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;string.fit(policy, specialAreaRect.w - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.x + 5,&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.y + 15&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;end&#10;&#10;if contextmenuinfo() == nil then&#10;&#9;if draggedSP then&#10;&#9;&#9;set(draggedSP, 'Coordinates', string.format('x:%i, y:%i, z:%i', $cursorinfo.x, $cursorinfo.y, $cursorinfo.z))&#10;&#9;elseif resizedSP then&#10;&#9;&#9;local x, y = get(resizedSP, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;x, y = tonumber(x), tonumber(y)&#10;&#10;&#9;&#9;set(resizedSP, 'Size', string.format('%i x %i', math.max(1, 1 + ($cursorinfo.x - x)) , math.max(1, 1 + ($cursorinfo.y - y))))&#10;&#9;end&#10;end" enabled="no" refreshRate="100"/>
            <HUDScript name="ShowWaypoints" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.2.1'&#10;&#10;&#9;local waypointColors = {&#10;&#9;&#9;walk    = 0xAAF200,&#10;&#9;&#9;node    = 0x2A0736,&#10;&#9;&#9;stand   = 0x00AACC,&#10;&#9;&#9;shovel  = 0xEB8540,&#10;&#9;&#9;rope    = 0xFFCC00,&#10;&#9;&#9;machete = 0x003366,&#10;&#9;&#9;ladder  = 0xC55186,&#10;&#9;&#9;use     = 0x36693E,&#10;&#9;&#9;action  = 0x00FFFF,&#10;&#9;&#9;lure    = 0xCCCCCC&#10;&#9;}&#10;&#10;&#9;local function deleteWaypointCall(menu)&#10;&#9;&#9;removewaypoint(menu.waypointID)&#10;&#9;end&#10;&#10;&#9;local function moveWaypointName()&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;return tern(draggedWpt == nil, 'Move Waypoint', 'Stop Moving')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function moveWaypointCall(menu)&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;draggedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;draggedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointName()&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;return tern(resizedWpt == nil, 'Resize Waypoint', 'Stop Resizing')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointCall(menu)&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;resizedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;resizedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;registermessagehandler('contextMenu_waypoint', moveWaypointName, moveWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', resizeWaypointName, resizeWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', 'Delete Waypoint', deleteWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', MENU_SEPARATOR, nil)&#10;&#10;&#9;local xOffset, yOffset, worldWidth, worldHeight, x, y, z, topLeftTilePos,&#10;&#9;      botRightTilePos, width, height, text, label&#10;&#9;local waypointRect = {}&#10;&#10;&#9;function gettilepos(x, y, z)&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#10;&#10;&#9;&#9;if tile == nil then&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#10;&#9;&#9;&#9;&#9;xDiff = 0&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#10;&#9;&#9;&#9;&#9;yDiff = 0&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#10;&#9;&#9;&#9;-- adding this as a precaution.&#10;&#9;&#9;&#9;if tile ~= nil then&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#10;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return tile&#10;&#9;end&#10;&#10;&#9;useworldhud()&#10;init end&#10;&#10;setfontstyle('Tahoma', 7, 75, 0xFFFFFF, 1, 0x000000)&#10;&#10;xOffset, yOffset = $worldwin.left - $clientwin.left, $worldwin.top - $clientwin.top&#10;worldWidth, worldHeight = $worldwin.right - $worldwin.left - 2, $worldwin.bottom - $worldwin.top - 2&#10;&#10;local i = 0&#10;foreach settingsentry e 'Cavebot/Waypoints' do&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match(REGEX_SPA_COORDS)&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;if z == $posz then&#10;&#9;&#9;width, height = getsetting(e, 'Range'):match(REGEX_SPA_SIZE)&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#10;&#10;&#9;&#9;topLeftTilePos = gettilepos(x, y, z)&#10;&#9;&#9;botRightTilePos = gettilepos(x + width - 1, y + height - 1, z)&#10;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#10;&#9;&#9;&#9;waypointRect.left   = math.max(topLeftTilePos.left  , 0)&#10;&#9;&#9;&#9;waypointRect.top    = math.max(topLeftTilePos.top   , 0)&#10;&#9;&#9;&#9;waypointRect.right  = math.min(botRightTilePos.right , worldWidth)&#10;&#9;&#9;&#9;waypointRect.bottom = math.min(botRightTilePos.bottom, worldHeight)&#10;&#9;&#9;&#9;waypointRect.width  = waypointRect.right - waypointRect.left&#10;&#9;&#9;&#9;waypointRect.height = waypointRect.bottom - waypointRect.top&#10;&#10;&#9;&#9;&#9;if waypointRect.width &gt; 0 and waypointRect.height &gt; 0 then&#10;&#9;&#9;&#9;&#9;label = getsetting(e, 'Label')&#10;&#9;&#9;&#9;&#9;text = tern(#label == 0, tostring(i), label .. ' (' .. i .. ')')&#10;&#9;&#9;&#9;&#9;wptType = getsetting(e, 'Type')&#10;&#10;&#9;&#9;&#9;&#9;setfillstyle('color', (waypointColors[wptType:lower()] or 0) + (math.floor(2.55*50)*16777216))&#10;&#9;&#9;&#9;&#9;drawroundrect(&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.left,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.top,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.width,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.height,&#10;&#9;&#9;&#9;&#9;&#9;10, 10&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;&#9;if waypointRect.width &gt; 10 then&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(text, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 3&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(wptType, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 15&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;i = i + 1&#10;end&#10;&#10;if contextmenuinfo() == nil then&#10;&#9;if draggedWpt then&#10;&#9;&#9;set(draggedWpt, 'Coordinates', string.format('x:%i, y:%i, z:%i', $cursorinfo.x, $cursorinfo.y, $cursorinfo.z))&#10;&#9;elseif resizedWpt then&#10;&#9;&#9;local x, y = get(resizedWpt, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;x, y = tonumber(x), tonumber(y)&#10;&#10;&#9;&#9;set(resizedWpt, 'Range', string.format('%i x %i', math.max(1, 1 + ($cursorinfo.x - x)) , math.max(1, 1 + ($cursorinfo.y - y))))&#10;&#9;end&#10;end" enabled="no" refreshRate="100"/>
        </HUDScripts>
    </HUDs>
    <GeneralSettings>
        <Input>
            <MouseOption mouseMode="Simulate Mouse"/>
            <MouseOption scrollMode="Use mouse wheel"/>
            <MouseOption stuckCursorPolicy="If Cavebot on, Release Instantly"/>
            <MouseOption moveSpeed="Instantaneous"/>
            <MouseOption clickWaitMin="10" clickWaitMax="10"/>
            <KeyboardOption keyboardMode="Simulate Keyboard"/>
            <KeyboardOption stuckCtrlShiftPolicy="If Cavebot on, Release Instantly"/>
            <KeyboardOption typeWaitMin="10" typeWaitMax="10"/>
            <KeyboardOption pressWaitMin="10" pressWaitMax="10"/>
            <FocusOption focusPolicy="Don't auto-focus"/>
            <FocusOption openMenuPolicy="Confirm if cavebotting"/>
        </Input>
    </GeneralSettings>
    <Alerts disableSounds="no">
        <alert name="Player On Screen" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Player Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Monster Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Private Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Default Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="GM Detected" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Disconnected" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Character Stuck" playSound="no" pauseBot="no" logout="no" standTime="30000"/>
        <alert name="Health Below" playSound="no" pauseBot="no" logout="no" healthPercent="50"/>
        <alert name="Mana Below" playSound="no" pauseBot="no" logout="no" manaPercent="50"/>
        <alert name="Unjust Kill" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Enemies Online" playSound="no" pauseBot="no" logout="no" enemiesCount="50"/>
    </Alerts>
    <Cavebot enabled="no">
        <Options>
            <Option shovel="3457"/>
            <Option rope="3003"/>
            <Option machete="3308"/>
            <Option pick="3456"/>
            <Option nodeRange="4"/>
            <Option pauseBotOnDeath="yes"/>
            <Option refillAmmo="no" refillAmmoMin="30" refillAmmoMax="70"/>
            <Option autoMount="no"/>
            <Option fireAvoidanceMin="0" fireAvoidanceMax="0"/>
            <Option energyAvoidanceMin="0" energyAvoidanceMax="0"/>
            <Option poisonAvoidanceMin="0" poisonAvoidanceMax="0"/>
            <Option walkThroughPlayers="yes"/>
            <Option walkMethod="Walk With Arrow Keys"/>
            <Option walkableItems="7, 140, 404, 831, 832, 833, 834, 883, 1020, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2131, 2132, 2133, 2134, 2135, 2314, 2315, 2316, 2319, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2431, 2432, 2433, 2434, 2441, 2442, 2443, 2444, 2469, 2471, 2472, 2473, 2478, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2519, 2523, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2981, 2982, 2983, 2984, 2985, 2987, 2988, 3503, 3504, 3514, 3807, 5086, 5087, 5088, 6114, 6115, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6371, 6372, 7864, 8455, 8763, 9061, 9062, 10209, 10216, 10286, 10287, 10288, 11009, 11010, 11011, 11800, 11801, 11802, 11803, 11804, 11805, 11806, 11807, 11808, 11809, 11810, 17972"/>
            <Option mapWalkDistMin="20" mapWalkDistMax="30"/>
            <Option userOptionsScript="    {&#10;    &quot;type&quot;: &quot;scriptinfo&quot;,&#10;    &quot;name&quot;: &quot;RP - Glooth Bandits by Yoko&quot;,&#10;    &quot;version&quot;: &quot;1.0.0&quot;&#10;    },&#10;{&#10;&#10;&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Character Backpacks Setup&quot;,&#10;    &quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;mainbp&quot;,&#10;&quot;text&quot; : &quot;Main BP&quot;,&#10;&quot;description&quot; : &quot;Backpack on character's back&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                  },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;suppbp&quot;,&#10;&quot;text&quot; : &quot;Supplies BP&quot;,&#10;&quot;description&quot; : &quot;Backpack with supplies inside main backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                 },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;lootbp&quot;,&#10;&quot;text&quot; : &quot;Loot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for loot inside main backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                 },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;goldbp&quot;,&#10;&quot;text&quot; : &quot;Gold BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for gold inside main backpack&quot;,&#10;  &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;extrabp&quot;,&#10;&quot;text&quot; : &quot;Extra BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for extra things inside main backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                }&#10;    ]&#10;    },&#10;&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Depot Backpacks Setup&quot;,&#10;&#9;&quot;column&quot; : 2,&#10;    &quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;maindpbp&quot;,&#10;&quot;text&quot; : &quot;Main Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack inside depot chest&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;stackdpbp&quot;,&#10;&quot;text&quot; : &quot;Stackable Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for stackable items inside main depot backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;raredpbp&quot;,&#10;&quot;text&quot; : &quot;Rare Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for rare items inside main depot backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;               }&#10;    ]&#10;    },&#10;    {&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Potions Setup&quot;,&#10;&#9;&quot;column&quot;:2,&#10;    &quot;children&quot; : [&#10;    {&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;maxsmp&quot;,&#10;    &quot;text&quot; : &quot;Max Strong Mana potion&quot;,&#10;    &quot;description&quot; : &quot;Amount of strong mana potions to buy&quot;,&#10;    &quot;suffix&quot; : &quot; SMP&quot;,&#10;    &quot;min&quot; : 100,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 700&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;minsmp&quot;,&#10;    &quot;text&quot; : &quot;Min Strong Mana potion&quot;,&#10;    &quot;description&quot; : &quot;Amount of strong mana potions to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; MP&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 100&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;maxgsp&quot;,&#10;    &quot;text&quot; : &quot;Max Great Spirit Potions&quot;,&#10;    &quot;description&quot; : &quot;Amount of great spirit potions to buy&quot;,&#10;    &quot;suffix&quot; : &quot; GSP&quot;,&#10;    &quot;min&quot; : 10,&#10;    &quot;max&quot; : 100,&#10;    &quot;value&quot; : 100&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;mingsp&quot;,&#10;    &quot;text&quot; : &quot;Min Great Spirit Potions&quot;,&#10;    &quot;description&quot; : &quot;Amount of great spirit potions to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; GSP&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 30&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Use GFB&quot;,&#9;&#9;&#10;&#9;&quot;checkable&quot; : true,&#10;    &quot;children&quot; : [&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;maxgfb&quot;,&#10;    &quot;text&quot; : &quot;Max Great Fireball Rune&quot;,&#10;    &quot;description&quot; : &quot;Amount of great fireball rune to buy&quot;,&#10;    &quot;suffix&quot; : &quot; GFB&quot;,&#10;    &quot;min&quot; : 10,&#10;    &quot;max&quot; : 100,&#10;    &quot;value&quot; : 100&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;mingfb&quot;,&#10;    &quot;text&quot; : &quot;Min Great Fireball Rune&quot;,&#10;    &quot;description&quot; : &quot;Amount of great fireball rune to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; GFB&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 30&#10;    }&#10;&#10;&#10;]&#10;},&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;ammotype&quot;,&#10;&quot;text&quot; : &quot;Ammo type&quot;,&#10;&quot;description&quot; : &quot;Ammunition type to use&quot;,&#10;&quot;items&quot; : [&quot;Prismatic Bolt[[item: Prismatic Bolt]]&quot;,&quot;Crystalline Arrow[[item: Crystalline Arrow]]&quot;]&#10;                },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;maxammo&quot;,&#10;    &quot;text&quot; : &quot;Max Ammo&quot;,&#10;    &quot;description&quot; : &quot;Amount of ammo to buy&quot;,&#10;    &quot;suffix&quot; : &quot; Ammo&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 900&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;minammo&quot;,&#10;    &quot;text&quot; : &quot;Min Ammo&quot;,&#10;    &quot;description&quot; : &quot;Amount of ammo to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; Ammo&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 130&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;mincap&quot;,&#10;    &quot;text&quot; : &quot;Min Cap&quot;,&#10;    &quot;description&quot; : &quot;Amount of cap to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; Cap&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 130&#10;    }&#10;    ]&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Extra Options&quot;,&#9;&#10;&#9;&quot;column&quot; : 1,&#10;    &quot;children&quot; : [&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;pvpe&quot;,&#10;&quot;text&quot; : &quot;Server PvPe&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will consider players with&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;usealertonspawn&quot;,&#10;&quot;text&quot; : &quot;Player On Spawn Alert&quot;,&#10;&quot;description&quot; : &quot;If Checked, bot will alert you if someone enter spawn&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;massanmonsters&quot;,&#10;    &quot;text&quot; : &quot;Monsters to cast Exevo Mas San&quot;,&#10;    &quot;description&quot; : &quot;Amount of monsters to atack them with Exevo Mas San&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 10,&#10;    &quot;value&quot; : 2&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;gfbmonsters&quot;,&#10;    &quot;text&quot; : &quot;Monsters to shoot GFB&quot;,&#10;    &quot;description&quot; : &quot;Amount of monsters to atack them with Great Fireball Rune&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 10,&#10;    &quot;value&quot; : 2&#10;    },&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;keephaste&quot;,&#10;&quot;text&quot; : &quot;Keep Haste&quot;,&#10;&quot;description&quot; : &quot;If you enable this checkbox then character will use utani hur if he have not speed up&quot;,&#10;&quot;value&quot; : true&#9;&#10;&#10;},&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Sell Looted Items&quot;,&#9;&#10;&#9;&quot;column&quot; : 1,&#9;&#10;&#9;&quot;checkable&quot; : true,&#10;    &quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;name&quot; : &quot;Enable checkbox to see loot items list&quot;,&#10;&quot;text&quot; : &quot;Enable checkbox to see loot items list&quot;,&#10;&quot;description&quot; : &quot;If You select this checkbox then u will see list of items to sell&quot;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgloothclubs&quot;,&#10;&quot;text&quot; : &quot;Sell Glooth Clubs&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted glooth clubs after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgloothaxes&quot;,&#10;&quot;text&quot; : &quot;Sell Glooth Axes&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted glooth axes after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgloothblades&quot;,&#10;&quot;text&quot; : &quot;Sell Glooth Blades&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted glooth blades after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgloothamulets&quot;,&#10;&quot;text&quot; : &quot;Sell Glooth Amulets&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted glooth amulets after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgloothcapes&quot;,&#10;&quot;text&quot; : &quot;Sell Glooth Capes&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted glooth capes after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellrubbercaps&quot;,&#10;&quot;text&quot; : &quot;Sell Ruber Caps&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted rubber caps after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellheatcores&quot;,&#10;&quot;text&quot; : &quot;Sell Heat Cores&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted heat cores after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;}&#10;    ]&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Sell Jewerly&quot;,&#9;&#10;&#9;&quot;column&quot; : 1,&#9;&#10;&#9;&quot;checkable&quot; : true,&#10;    &quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;name&quot; : &quot;Enable checkbox to see jewerly list&quot;,&#10;&quot;text&quot; : &quot;Enable checkbox to see jewerly list&quot;,&#10;&quot;description&quot; : &quot;If You select this checkbox then u will see list of items to sell&quot;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellsmallemeralds&quot;,&#10;&quot;text&quot; : &quot;Sell Small Emeralds&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted small emeralds after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellsmalltopazes&quot;,&#10;&quot;text&quot; : &quot;Sell Small Topazes&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted small topazes after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgiantshimmeringpearls&quot;,&#10;&quot;text&quot; : &quot;Sell Giant Shimmering Pearls&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted giant shimmering pearls after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;}&#10;    ]&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Sell Items On Market&quot;,&#9;&#10;&#9;&quot;column&quot; : 1,&#9;&#10;&#9;&quot;checkable&quot; : true,&#10;    &quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;name&quot; : &quot;Enable checkbox to see market items list&quot;,&#10;&quot;text&quot; : &quot;Enable checkbox to see market items list&quot;,&#10;&quot;description&quot; : &quot;If You select this checkbox then u will see list of items to sell on market&quot;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellterramantles&quot;,&#10;&quot;text&quot; : &quot;Sell Terra Mantles&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted terra mantles on market after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellterralegs&quot;,&#10;&quot;text&quot; : &quot;Sell Terra Legs&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted terra legs on market after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellterraboots&quot;,&#10;&quot;text&quot; : &quot;Sell Terra Boots&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted terra boots on market after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellmercenaryswords&quot;,&#10;&quot;text&quot; : &quot;Sell Mercenary Swords&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted mercenary swords on market after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellskullstaffs&quot;,&#10;&quot;text&quot; : &quot;Sell Skull Staffs&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted skull staffs on market after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellwaraxes&quot;,&#10;&quot;text&quot; : &quot;Sell War Axes&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted war axes on market after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellbutchersaxes&quot;,&#10;&quot;text&quot; : &quot;Sell Butcher's Axes&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted butcher's axes on market after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;selldreadedcleaver&quot;,&#10;&quot;text&quot; : &quot;Sell Dreaded Cleaver&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted dreaded cleaver on market after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;}&#10;&#10;    ]&#10;    }&#10;    ]&#10;    },&#10;&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Hunting Options&quot;,&#9;&#10;&#9;&quot;column&quot; : 2,&#10;    &quot;children&quot; : [&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;distinlure&quot;,&#10;    &quot;text&quot; : &quot;Distance insite lure&quot;,&#10;    &quot;description&quot; : &quot;Amount of distance to keep inside lure area&quot;,&#10;    &quot;min&quot; : 2,&#10;    &quot;max&quot; : 5,&#10;    &quot;value&quot; : 3&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;distwhenluring&quot;,&#10;    &quot;text&quot; : &quot;Distance outside lure&quot;,&#10;    &quot;description&quot; : &quot;Amount of distance to lure monsters inside lure area&quot;,&#10;    &quot;min&quot; : 2,&#10;    &quot;max&quot; : 4,&#10;    &quot;value&quot; : 4&#10;    },&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;switchtarget&quot;,&#10;&quot;text&quot; : &quot;Switch target to closest monster&quot;,&#10;&quot;description&quot; : &quot;If you enable this checkbox then character will atack the closest monster in way to lure area&quot;,&#10;&quot;value&quot; : true&#9;&#10;&#10;}&#10;&#10;&#10;&#10;&#10;    ]&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Market Prices&quot;,&#9;&#10;&#9;&quot;column&quot; : 2,&#10;    &quot;children&quot; : [&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;priceterramantle&quot;,&#10;    &quot;text&quot; : &quot;Price Terra Mantle&quot;,&#10;    &quot;description&quot; : &quot;Price of terra mantle to sell on market&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 900000,&#10;    &quot;value&quot; : 10500&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;priceterralegs&quot;,&#10;    &quot;text&quot; : &quot;Price Terra Legs&quot;,&#10;    &quot;description&quot; : &quot;Price of terra legs to sell on market&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 900000,&#10;    &quot;value&quot; : 9000&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;priceterraboots&quot;,&#10;    &quot;text&quot; : &quot;Price Terra Boots&quot;,&#10;    &quot;description&quot; : &quot;Price of terra boots to sell on market&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 900000,&#10;    &quot;value&quot; : 2400&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;pricemercenarysword&quot;,&#10;    &quot;text&quot; : &quot;Price Mercenary Sword&quot;,&#10;    &quot;description&quot; : &quot;Price of mercenary sword to sell on market&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 900000,&#10;    &quot;value&quot; : 11000&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;priceskullstaff&quot;,&#10;    &quot;text&quot; : &quot;Price Skull Staff&quot;,&#10;    &quot;description&quot; : &quot;Price of skull staff to sell on market&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 900000,&#10;    &quot;value&quot; : 5500&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;pricewaraxe&quot;,&#10;    &quot;text&quot; : &quot;Price War Axe&quot;,&#10;    &quot;description&quot; : &quot;Price of war axe to sell on market&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 900000,&#10;    &quot;value&quot; : 11000&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;pricebutchersaxe&quot;,&#10;    &quot;text&quot; : &quot;Price Butcher's Axe&quot;,&#10;    &quot;description&quot; : &quot;Price of butcher's axe to sell on market&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 900000,&#10;    &quot;value&quot; : 17500&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;pricedreadedcleaver&quot;,&#10;    &quot;text&quot; : &quot;Price Dreaded Cleaver&quot;,&#10;    &quot;description&quot; : &quot;Price of dreaded cleaver to sell on market&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 900000,&#10;    &quot;value&quot; : 14000&#10;    }&#10;&#10;&#10;&#10;]&#10;}"/>
        </Options>
        <SpecialAreas>
            <Area name="SArea" x="33634" y="31929" z="12" type="Square (Filled)" width="8" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="yes" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea1" x="33634" y="31925" z="12" type="Square (Filled)" width="1" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Cavebot &amp; Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea2" x="33639" y="31925" z="12" type="Square (Filled)" width="3" height="4" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Cavebot &amp; Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea3" x="33636" y="31925" z="12" type="Square (Filled)" width="1" height="3" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea4" x="33636" y="31928" z="12" type="Square (Filled)" width="3" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea5" x="33637" y="31924" z="12" type="Square (Filled)" width="2" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea6" x="33637" y="31925" z="12" type="Square (Filled)" width="1" height="2" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea7" x="33627" y="31947" z="12" type="Square (Filled)" width="11" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Cavebot &amp; Targeting" ignoreWhenLuring="yes" ignoreWhenLooting="no" comment=""/>
        </SpecialAreas>
        <CavebotScripts/>
        <WaypointSection name="Refill">
            <Waypoint type="Stand" x="33626" y="31894" z="6" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Stand" x="33628" y="31895" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33625" y="31893" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33625" y="31893" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;start&quot;)&#10;end"/>
            <Waypoint type="Action" x="33625" y="31893" z="7" rangeX="1" rangeY="1" script="depot()&#10;setsetting('Looting/Enabled', 'no')"/>
            <Waypoint type="Stand" x="33626" y="31895" z="7" rangeX="1" rangeY="1" label="gotobank"/>
            <Waypoint type="Stand" x="33628" y="31895" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33626" y="31891" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33626" y="31892" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33601" y="31900" z="7" rangeX="1" rangeY="1" script="if $stamina &lt; 15*60 then&#10;gotolabel(&quot;start&quot;,&quot;GoTrainers&quot;)&#10;end"/>
            <Waypoint type="Action" x="33626" y="31892" z="5" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;gotobank&quot;)&#10;else&#10;bpsforbank()&#10;withdrawmoney()&#10;end"/>
            <Waypoint type="Stand" x="33626" y="31892" z="5" rangeX="1" rangeY="1" label="gotomshop"/>
            <Waypoint type="Stand" x="33626" y="31891" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33619" y="31886" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33619" y="31886" z="6" rangeX="1" rangeY="1" script="if (topitem(33619,31885,6).id) == 20443 then&#10;usedoor(33619,31885,6,'open')&#10;end"/>
            <Waypoint type="Stand" x="33620" y="31880" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33619" y="31880" z="5" rangeX="1" rangeY="1" script="if not usegfb then&#10;gotolabel(&quot;skipruneshop&quot;)&#10;&#10;&#10;end"/>
            <Waypoint type="Stand" x="33619" y="31882" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33619" y="31882" z="5" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;gotomshop&quot;)&#10;else&#10;runeshop()&#10;end"/>
            <Waypoint type="Stand" x="33617" y="31879" z="5" rangeX="1" rangeY="1" label="skipruneshop"/>
            <Waypoint type="Stand" x="33618" y="31882" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33618" y="31882" z="4" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;gotomshop&quot;)&#10;else&#10;suppshop()&#10;end"/>
            <Waypoint type="Stand" x="33618" y="31882" z="4" rangeX="1" rangeY="1" label="gotoammoshop"/>
            <Waypoint type="Stand" x="33617" y="31879" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33620" y="31880" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33619" y="31884" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33619" y="31884" z="6" rangeX="1" rangeY="1" script="if (topitem(33619,31885,6).id) == 20443 then&#10;usedoor(33619,31885,6,'open')&#10;end"/>
            <Waypoint type="Stand" x="33626" y="31887" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33632" y="31886" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33632" y="31886" z="6" rangeX="1" rangeY="1" script="if (topitem(33632,31885,6).id) == 20443 then&#10;usedoor(33632,31885,6,'open')&#10;end"/>
            <Waypoint type="Stand" x="33630" y="31883" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33632" y="31882" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33632" y="31882" z="5" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;gotoammoshop&quot;)&#10;else&#10;ammoshop()&#10;end"/>
            <Waypoint type="Stand" x="33632" y="31882" z="5" rangeX="1" rangeY="1" label="gochecksupplies"/>
            <Waypoint type="Stand" x="33630" y="31882" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33632" y="31884" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33632" y="31884" z="6" rangeX="1" rangeY="1" script="if (topitem(33632,31885,6).id) == 20443 then&#10;usedoor(33632,31885,6,'open')&#10;end"/>
            <Waypoint type="Stand" x="33633" y="31888" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33625" y="31894" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33625" y="31894" z="6" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;gochecksupplies&quot;)&#10;else&#10;checksupp()&#10;end"/>
            <Waypoint type="Stand" x="33625" y="31894" z="6" rangeX="1" rangeY="1" label="runtohunt"/>
            <Waypoint type="Node" x="33630" y="31904" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33638" y="31935" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33636" y="31944" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33647" y="31948" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33647" y="31948" z="7" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;runtohunt&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33647" y="31948" z="7" rangeX="1" rangeY="1" label="opendoors"/>
            <Waypoint type="Action" x="33647" y="31948" z="7" rangeX="1" rangeY="1" script="if (topitem(33647,31947,7).id) == 20443 then&#10;usedoor(33647,31947,7,'open')&#10;end"/>
            <Waypoint type="Stand" x="33647" y="31946" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33647" y="31946" z="7" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;opendoors&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33651" y="31943" z="7" rangeX="1" rangeY="1" label="runtohunt1"/>
            <Waypoint type="Stand" x="33651" y="31941" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33564" y="31962" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33569" y="31946" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33581" y="31941" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33594" y="31939" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33594" y="31939" z="12" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;runtohunt1&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33594" y="31939" z="12" rangeX="1" rangeY="1" label="kraty"/>
            <Waypoint type="Use" x="33595" y="31939" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33597" y="31939" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33597" y="31939" z="12" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;kraty&quot;)&#10;end&#10;"/>
            <Waypoint type="Stand" x="33597" y="31939" z="12" rangeX="1" rangeY="1" label="runtohunt2"/>
            <Waypoint type="Stand" x="33613" y="31917" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33618" y="31913" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33633" y="31915" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33637" y="31923" z="12" rangeX="1" rangeY="1" script="bpsforhunt()&#10;setsetting('Looting/OpenNextBP', 'yes')&#10;setsetting('Targeting/Creatures/Category A/Setting1/OnlyIfTrapped', 'no')"/>
            <Waypoint type="Stand" x="33636" y="31924" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Lure" x="33637" y="31925" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="33636" y="31924" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33636" y="31925" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33636" y="31925" z="12" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;runtohunt2&quot;)&#10;else&#10;setsetting('Looting/Enabled', 'yes')&#10;gotolabel(&quot;start&quot;,&quot;Hunt&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Hunt">
            <Waypoint type="Stand" x="33635" y="31925" z="12" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Rope" x="33636" y="31924" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33636" y="31937" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33650" y="31940" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33656" y="31947" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33685" y="31939" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33654" y="31953" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33647" y="31961" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33646" y="31969" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33652" y="31980" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="33636" y="31924" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33653" y="31998" z="12" rangeX="1" rangeY="1"/>
        </WaypointSection>
        <WaypointSection name="Leave">
            <Waypoint type="Stand" x="33636" y="31925" z="12" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Stand" x="33636" y="31924" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33636" y="31921" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33636" y="31921" z="13" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;start&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33636" y="31920" z="13" rangeX="1" rangeY="1" label="runtocity"/>
            <Waypoint type="Stand" x="33619" y="31913" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33613" y="31917" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="33613" y="31917" z="13" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33596" y="31939" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33589" y="31939" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33575" y="31945" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33566" y="31946" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33565" y="31964" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33559" y="31970" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33558" y="31970" z="12" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33651" y="31943" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33651" y="31943" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;runtocity&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33651" y="31944" z="7" rangeX="1" rangeY="1" label="runtocity1"/>
            <Waypoint type="Stand" x="33647" y="31946" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33647" y="31946" z="7" rangeX="1" rangeY="1" script="if (topitem(33647,31947,7).id) == 20443 then&#10;usedoor(33647,31947,7,'open')&#10;end"/>
            <Waypoint type="Stand" x="33647" y="31948" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33647" y="31948" z="7" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;runtocity1&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33647" y="31948" z="7" rangeX="1" rangeY="1" label="passed"/>
            <Waypoint type="Stand" x="33636" y="31944" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33638" y="31925" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33630" y="31902" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33630" y="31902" z="6" rangeX="1" rangeY="1" script="if selllooteditems or selljewelry then&#10;gotolabel(&quot;start&quot;,&quot;Sellitems&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33626" y="31894" z="6" rangeX="1" rangeY="1" label="aftersell"/>
            <Waypoint type="Action" x="33626" y="31894" z="6" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;passed&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Refill&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Sellitems">
            <Waypoint type="Stand" x="33630" y="31902" z="6" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Action" x="33623" y="31892" z="4" rangeX="1" rangeY="1" script="if not selllooteditems then&#10;gotolabel(&quot;selljewelry&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33632" y="31886" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33632" y="31886" z="6" rangeX="1" rangeY="1" script="if (topitem(33632,31885,6).id) == 20443 then&#10;usedoor(33632,31885,6,'open')&#10;end"/>
            <Waypoint type="Stand" x="33633" y="31883" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33633" y="31883" z="6" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;start&quot;)&#10;else&#10;sellraresinflintshoop()&#10;end"/>
            <Waypoint type="Stand" x="33632" y="31884" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33632" y="31884" z="6" rangeX="1" rangeY="1" script="if (topitem(33632,31885,6).id) == 20443 then&#10;usedoor(33632,31885,6,'open')&#10;end"/>
            <Waypoint type="Stand" x="33632" y="31887" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33626" y="31894" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33626" y="31894" z="6" rangeX="1" rangeY="1" script="if not selljewerly then&#10;gotolabel(&quot;everythingsold&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33626" y="31894" z="6" rangeX="1" rangeY="1" label="selljewelry"/>
            <Waypoint type="Stand" x="33626" y="31891" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33625" y="31890" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33623" y="31890" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33623" y="31892" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33623" y="31892" z="4" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;selljewerly&quot;)&#10;else&#10;seljewerly()&#10;end"/>
            <Waypoint type="Stand" x="33623" y="31891" z="4" rangeX="1" rangeY="1" label="soldjewerly"/>
            <Waypoint type="Stand" x="33623" y="31890" z="4" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33626" y="31891" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33626" y="31893" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33626" y="31893" z="6" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;soldjewerly&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33626" y="31893" z="6" rangeX="1" rangeY="1" label="everythingsold"/>
            <Waypoint type="Action" x="33626" y="31893" z="6" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;everythingsold&quot;)&#10;else&#10;gotolabel(&quot;aftersell&quot;,&quot;Leave&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="GoTrainers">
            <Waypoint type="Stand" x="33626" y="31892" z="5" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Stand" x="33626" y="31891" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33626" y="31893" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33626" y="31893" z="6" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;start&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33626" y="31893" z="6" rangeX="1" rangeY="1" label="runtrainers"/>
            <Waypoint type="Node" x="33621" y="31898" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33610" y="31898" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33601" y="31900" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33601" y="31900" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;runtrainers&quot;)&#10;end&#10;"/>
            <Waypoint type="Use" x="33600" y="31901" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Use" x="33600" y="31901" z="7" rangeX="1" rangeY="1"/>
        </WaypointSection>
    </Cavebot>
    <Looting enabled="no">
        <Options>
            <Option range="49"/>
            <Option moveItemsQuickly="yes"/>
            <Option eatFoodFromCorpse="yes"/>
            <Option openNextBP="no"/>
            <Option openBPsAtLogin="no"/>
            <Option valuableBodies="3000"/>
            <Option ultraValuableBodies="3000"/>
            <Option alertOnValuableBodies="no"/>
            <Option openValuableBodiesOnly="no"/>
            <Option openUltraValuableBodiesImmediately="yes"/>
            <Option policy="Loot After All Dead"/>
            <LootingDestinations>
                <lootingDestination name="lootbp" destination="anniversary backpack"/>
                <lootingDestination name="goldbp" destination="anniversary backpack"/>
                <lootingDestination name="mainbp" destination="anniversary backpack"/>
                <lootingDestination name="suppbp" destination="anniversary backpack"/>
                <lootingDestination name="extrabp" destination="anniversary backpack"/>
                <lootingDestination name="maindpbp" destination="anniversary backpack"/>
                <lootingDestination name="stackdpbp" destination="anniversary backpack"/>
                <lootingDestination name="raredpbp" destination="anniversary backpack"/>
            </LootingDestinations>
        </Options>
        <LootingProfile name="LootList" isCurrentProfile="yes">
            <LootItem name="platinum coin" id="3035" sellPrice="100" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="gold coin" id="3031" sellPrice="1" weight="0.10" destinationName="goldbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="green gem" id="3038" sellPrice="5000" weight="0.30" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="giant shimmering pearl (green)" id="281" sellPrice="3000" weight="0.80" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="small emerald" id="3032" sellPrice="250" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="small topaz" id="9057" sellPrice="200" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="rubber cap" id="21165" sellPrice="11000" weight="8.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="glooth amulet" id="21183" sellPrice="2000" weight="2.20" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="terra legs" id="812" sellPrice="11000" weight="19.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="terra mantle" id="811" sellPrice="11000" weight="22.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="dreaded cleaver" id="7419" sellPrice="15000" weight="38.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="skull staff" id="3324" sellPrice="6000" weight="17.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="terra boots" id="813" sellPrice="2500" weight="7.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="terra amulet" id="814" sellPrice="1500" weight="5.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="butcher's axe" id="7412" sellPrice="18000" weight="63.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="terra hood" id="830" sellPrice="2500" weight="10.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="glooth cape" id="21164" sellPrice="7000" weight="29.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="war axe" id="3342" sellPrice="12000" weight="61.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="heat shield" id="21167" sellPrice="10000" weight="55.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="mercenary sword" id="7386" sellPrice="12000" weight="68.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="glooth axe" id="21180" sellPrice="1500" weight="19.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="glooth club" id="21178" sellPrice="1500" weight="19.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="glooth blade" id="21179" sellPrice="1500" weight="19.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="beastslayer axe" id="3344" sellPrice="1500" weight="61.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="great health potion" id="239" sellPrice="0" weight="3.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="ultimate health potion" id="7643" sellPrice="0" weight="3.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="great spirit potion" id="7642" sellPrice="0" weight="3.10" destinationName="suppbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="great mana potion" id="238" sellPrice="0" weight="3.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="glooth bag" id="21203" sellPrice="0" weight="30.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
        </LootingProfile>
    </Looting>
    <Supplies>
        <Options>
            <Option defaultBackpack=""/>
            <Option extraCashMin="1000" extraCashMax="2500"/>
            <Option autoSwitchProfiles="no"/>
        </Options>
        <SupplyProfile name="SupplyList" vocation="Paladin" level="266" isCurrentProfile="yes">
            <SupplyItem name="strong mana potion" id="237" buyPrice="80" weight="2.90" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="great spirit potion" id="7642" buyPrice="190" weight="3.10" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="great spirit potion" category=""/>
            <SupplyItem name="crystalline arrow" id="15793" buyPrice="20" weight="0.75" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="crystalline arrow" category=""/>
            <SupplyItem name="prismatic bolt" id="16141" buyPrice="20" weight="0.85" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="prismatic bolt" category=""/>
            <SupplyItem name="great fireball rune" id="3191" buyPrice="45" weight="0.52" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="great fireball rune" category=""/>
        </SupplyProfile>
    </Supplies>
    <Targeting enabled="yes" allowDiagonalMovement="no" autoSwitchProfiles="no" nonPvPMode="no">
        <TargetingProfile name="TargetList" vocation="Paladin" level="266" targetMustBeShootable="no" targetMustBeReachable="yes" isCurrentProfile="yes">
            <Priorities>
                <Priority health="20"/>
                <Priority proximity="0"/>
                <Priority danger="10"/>
                <Priority random="0"/>
                <Priority lure="30"/>
                <Priority stick="2"/>
            </Priorities>
            <Creatures>
                <Creature name="Category A" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Lure &amp; Keep Away" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Glooth Brigand" amount="Any" category="A" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Glooth Bandit" amount="Any" category="A" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Others" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
            </Creatures>
        </TargetingProfile>
    </Targeting>
    <OtherBots>
        <HealingPaths/>
        <TargetingPaths/>
    </OtherBots>
</WindbotSettings>
