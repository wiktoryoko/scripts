<?xml version="1.0" encoding="UTF-8"?>
<WindbotSettings>
    <Healer>
        <SpellHealer enabled="yes">
            <HealRule name="Exura Gran San" spell="Salvation" condition="Health Percent below" conditionMin="55" conditionMax="55" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="Exura San" spell="Divine Healing" condition="Health Percent below" conditionMin="65" conditionMax="65" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="Exura Gran" spell="Intense Healing" condition="Health Percent below" conditionMin="75" conditionMax="80" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="Exura" spell="Light Healing" condition="Health Percent below" conditionMin="90" conditionMax="95" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </SpellHealer>
        <PotionHealer enabled="yes">
            <HealRule name="GSP" spell="Great Spirit Potion" condition="Health Percent below" conditionMin="50" conditionMax="50" extraCondition="No Extra Condition" extraConditionMin="55" extraConditionMax="55" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="SMP" spell="Strong Mana Potion" condition="Mana Percent below" conditionMin="85" conditionMax="85" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </PotionHealer>
        <ConditionHealer enabled="yes">
            <HealRule name="NewHealRule" spell="Light Healing" condition="Paralyzed" conditionMin="0" conditionMax="0" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="NewHealRule1" spell="Haste" condition="Not Hasted" conditionMin="0" conditionMax="0" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </ConditionHealer>
        <ManaTrainer manaTrainCondition="Mana Percent above" manaTrainMin="87" manaTrainMax="93" enabled="no"/>
    </Healer>
    <Scripter>
        <HotkeyScripts/>
        <PersistentScripts>
            <PersistentScript name="Fast Variables" script="init start&#10;refills = 0&#10;init end&#10;auto(300)&#10;&#10;selllooteditems = getuseroption('Sell Looted Items')&#10;selljewerly = getuseroption('Sell Jewerly')&#10;sellitemsonmarket = getuseroption('Sell Items On Market')&#10;roundstosell = getuseroption('roundstosell')&#10;&#10;sellsmallsapphires = getuseroption(&quot;sellsmallsapphires&quot;)&#10;sellsmallemeralds = getuseroption(&quot;sellsmallemeralds&quot;)&#10;&#10;sellspellbookofmindcontrol = getuseroption('sellspellbookofmindcontrol')&#10;sellultimatehealthpotion = getuseroption('sellultimatehealthpotion')&#10;sellstrandofmedusahair = getuseroption('sellstrandofmedusahair')&#10;sellstronghealthpotion = getuseroption('sellstronghealthpotion')&#10;selllightningheadband = getuseroption('selllightningheadband')&#10;sellsacredtreeamulet = getuseroption('sellsacredtreeamulet')&#10;sellgreatmanapotion = getuseroption('sellgreatmanapotion')&#10;sellbonebeasttrophy = getuseroption('sellbonebeasttrophy')&#10;sellstoneskinamulet = getuseroption('sellstoneskinamulet')&#10;sellmercenarysword = getuseroption('sellmercenarysword')&#10;sellplatinumamulet = getuseroption('sellplatinumamulet')&#10;sellgreenmushroom = getuseroption('sellgreenmushroom')&#10;sellcharmerstiara = getuseroption('sellcharmerstiara')&#10;sellwarriorhelmet = getuseroption('sellwarriorhelmet')&#10;sellstrangehelmet = getuseroption('sellstrangehelmet')&#10;sellringofhealing = getuseroption('sellringofhealing')&#10;sellhardenedbone = getuseroption('sellhardenedbone')&#10;selloldparchment = getuseroption('selloldparchment')&#10;sellbootsofhaste = getuseroption('sellbootsofhaste')&#10;sellmedusashield = getuseroption('sellmedusashield')&#10;sellcrownarmor = getuseroption('sellcrownarmor')&#10;sellterraamulet = getuseroption('sellterraamulet')&#10;sellterramantle = getuseroption('sellterramantle')&#10;sellknightarmor = getuseroption('sellknightarmor')&#10;sellroyalhelmet = getuseroption('sellroyalhelmet')&#10;selltowershield = getuseroption('selltowershield')&#10;sellgoldenmug = getuseroption('sellgoldenmug')&#10;selllifecrystal = getuseroption('selllifecrystal')&#10;sellenergyring = getuseroption('sellenergyring')&#10;sellknightlegs = getuseroption('sellknightlegs')&#10;sellwingedtail = getuseroption('sellwingedtail')&#10;sellhydrahead = getuseroption('sellhydrahead')&#10;sellterralegs = getuseroption('sellterralegs')&#10;sellspidersilk = getuseroption('sellspidersilk')&#10;sellhydraegg = getuseroption('sellhydraegg')&#10;sellsnakeskin = getuseroption('sellsnakeskin')&#10;sellnobleaxe = getuseroption('sellnobleaxe')&#10;selltitanaxe = getuseroption('selltitanaxe')&#10;selltimering = getuseroption('selltimering')&#10;sellbonytail = getuseroption('sellbonytail')&#10;selllifering = getuseroption('selllifering')&#10;&#10;pricespellbookofmindcontrol = getuseroption('pricespellbookofmindcontrol')&#10;priceultimatehealthpotion = getuseroption('priceultimatehealthpotion')&#10;pricestrandofmedusahair = getuseroption('pricestrandofmedusahair')&#10;pricestronghealthpotion = getuseroption('pricestronghealthpotion')&#10;pricelightningheadband = getuseroption('pricelightningheadband')&#10;pricesacredtreeamulet = getuseroption('pricesacredtreeamulet')&#10;pricegreatmanapotion = getuseroption('pricegreatmanapotion')&#10;pricebonebeasttrophy = getuseroption('pricebonebeasttrophy')&#10;pricestoneskinamulet = getuseroption('pricestoneskinamulet')&#10;pricemercenarysword = getuseroption('pricemercenarysword')&#10;priceplatinumamulet = getuseroption('priceplatinumamulet')&#10;pricegreenmushroom = getuseroption('pricegreenmushroom')&#10;pricecharmerstiara = getuseroption('pricecharmerstiara')&#10;pricewarriorhelmet = getuseroption('pricewarriorhelmet')&#10;pricestrangehelmet = getuseroption('pricestrangehelmet')&#10;priceringofhealing = getuseroption('priceringofhealing')&#10;pricehardenedbone = getuseroption('pricehardenedbone')&#10;priceoldparchment = getuseroption('priceoldparchment')&#10;pricebootsofhaste = getuseroption('pricebootsofhaste')&#10;pricemedusashield = getuseroption('pricemedusashield')&#10;pricecrownarmor = getuseroption('pricecrownarmor')&#10;priceterraamulet = getuseroption('priceterraamulet')&#10;priceterramantle = getuseroption('priceterramantle')&#10;priceknightarmor = getuseroption('priceknightarmor')&#10;priceroyalhelmet = getuseroption('priceroyalhelmet')&#10;pricetowershield = getuseroption('pricetowershield')&#10;pricegoldenmug = getuseroption('pricegoldenmug')&#10;pricelifecrystal = getuseroption('pricelifecrystal')&#10;priceenergyring = getuseroption('priceenergyring')&#10;priceknightlegs = getuseroption('priceknightlegs')&#10;pricewingedtail = getuseroption('pricewingedtail')&#10;pricehydrahead = getuseroption('pricehydrahead')&#10;priceterralegs = getuseroption('priceterralegs')&#10;pricespidersilk = getuseroption('pricespidersilk')&#10;pricehydraegg = getuseroption('pricehydraegg')&#10;pricesnakeskin = getuseroption('pricesnakeskin')&#10;pricenobleaxe = getuseroption('pricenobleaxe')&#10;pricetitanaxe = getuseroption('pricetitanaxe')&#10;pricetimering = getuseroption('pricetimering')&#10;pricebonytail = getuseroption('pricebonytail')&#10;pricelifering = getuseroption('pricelifering')&#10;&#10;&#10;&#10;&#10;&#10;if sellspellbookofmindcontrol then&#10;showuseroption('pricespellbookofmindcontrol',true)&#10;else&#10;showuseroption('pricespellbookofmindcontrol',false)&#10;end&#10;&#10;&#10;if sellultimatehealthpotion then&#10;showuseroption('priceultimatehealthpotion',true)&#10;else&#10;showuseroption('priceultimatehealthpotion',false)&#10;end&#10;&#10;&#10;if sellstrandofmedusahair then&#10;showuseroption('pricestrandofmedusahair',true)&#10;else&#10;showuseroption('pricestrandofmedusahair',false)&#10;end&#10;&#10;&#10;if sellstronghealthpotion then&#10;showuseroption('pricestronghealthpotion',true)&#10;else&#10;showuseroption('pricestronghealthpotion',false)&#10;end&#10;&#10;&#10;if selllightningheadband then&#10;showuseroption('pricelightningheadband',true)&#10;else&#10;showuseroption('pricelightningheadband',false)&#10;end&#10;&#10;&#10;if sellsacredtreeamulet then&#10;showuseroption('pricesacredtreeamulet',true)&#10;else&#10;showuseroption('pricesacredtreeamulet',false)&#10;end&#10;&#10;&#10;if sellgreatmanapotion then&#10;showuseroption('pricegreatmanapotion',true)&#10;else&#10;showuseroption('pricegreatmanapotion',false)&#10;end&#10;&#10;&#10;if sellbonebeasttrophy then&#10;showuseroption('pricebonebeasttrophy',true)&#10;else&#10;showuseroption('pricebonebeasttrophy',false)&#10;end&#10;&#10;&#10;if sellstoneskinamulet then&#10;showuseroption('pricestoneskinamulet',true)&#10;else&#10;showuseroption('pricestoneskinamulet',false)&#10;end&#10;&#10;&#10;if sellmercenarysword then&#10;showuseroption('pricemercenarysword',true)&#10;else&#10;showuseroption('pricemercenarysword',false)&#10;end&#10;&#10;&#10;if sellplatinumamulet then&#10;showuseroption('priceplatinumamulet',true)&#10;else&#10;showuseroption('priceplatinumamulet',false)&#10;end&#10;&#10;&#10;if sellgreenmushroom then&#10;showuseroption('pricegreenmushroom',true)&#10;else&#10;showuseroption('pricegreenmushroom',false)&#10;end&#10;&#10;&#10;if sellcharmerstiara then&#10;showuseroption('pricecharmerstiara',true)&#10;else&#10;showuseroption('pricecharmerstiara',false)&#10;end&#10;&#10;&#10;if sellwarriorhelmet then&#10;showuseroption('pricewarriorhelmet',true)&#10;else&#10;showuseroption('pricewarriorhelmet',false)&#10;end&#10;&#10;&#10;if sellstrangehelmet then&#10;showuseroption('pricestrangehelmet',true)&#10;else&#10;showuseroption('pricestrangehelmet',false)&#10;end&#10;&#10;&#10;if sellringofhealing then&#10;showuseroption('priceringofhealing',true)&#10;else&#10;showuseroption('priceringofhealing',false)&#10;end&#10;&#10;&#10;if selloldparchment then&#10;showuseroption('priceoldparchment',true)&#10;else&#10;showuseroption('priceoldparchment',false)&#10;end&#10;&#10;&#10;if sellhardenedbone then&#10;showuseroption('pricehardenedbone',true)&#10;else&#10;showuseroption('pricehardenedbone',false)&#10;end&#10;&#10;&#10;if sellbootsofhaste then&#10;showuseroption('pricebootsofhaste',true)&#10;else&#10;showuseroption('pricebootsofhaste',false)&#10;end&#10;&#10;&#10;if sellmedusashield then&#10;showuseroption('pricemedusashield',true)&#10;else&#10;showuseroption('pricemedusashield',false)&#10;end&#10;&#10;&#10;if sellcrownarmor then&#10;showuseroption('pricecrownarmor',true)&#10;else&#10;showuseroption('pricecrownarmor',false)&#10;end&#10;&#10;&#10;if sellterraamulet then&#10;showuseroption('priceterraamulet',true)&#10;else&#10;showuseroption('priceterraamulet',false)&#10;end&#10;&#10;&#10;if sellterramantle then&#10;showuseroption('priceterramantle',true)&#10;else&#10;showuseroption('priceterramantle',false)&#10;end&#10;&#10;&#10;if sellknightarmor then&#10;showuseroption('priceknightarmor',true)&#10;else&#10;showuseroption('priceknightarmor',false)&#10;end&#10;&#10;&#10;if sellroyalhelmet then&#10;showuseroption('priceroyalhelmet',true)&#10;else&#10;showuseroption('priceroyalhelmet',false)&#10;end&#10;&#10;&#10;if selltowershield then&#10;showuseroption('pricetowershield',true)&#10;else&#10;showuseroption('pricetowershield',false)&#10;end&#10;&#10;&#10;if sellgoldenmug then&#10;showuseroption('pricegoldenmug',true)&#10;else&#10;showuseroption('pricegoldenmug',false)&#10;end&#10;&#10;&#10;if selllifecrystal then&#10;showuseroption('pricelifecrystal',true)&#10;else&#10;showuseroption('pricelifecrystal',false)&#10;end&#10;&#10;&#10;if sellenergyring then&#10;showuseroption('priceenergyring',true)&#10;else&#10;showuseroption('priceenergyring',false)&#10;end&#10;&#10;&#10;if sellknightlegs then&#10;showuseroption('priceknightlegs',true)&#10;else&#10;showuseroption('priceknightlegs',false)&#10;end&#10;&#10;&#10;if sellwingedtail then&#10;showuseroption('pricewingedtail',true)&#10;else&#10;showuseroption('pricewingedtail',false)&#10;end&#10;&#10;&#10;if sellhydrahead then&#10;showuseroption('pricehydrahead',true)&#10;else&#10;showuseroption('pricehydrahead',false)&#10;end&#10;&#10;&#10;if sellterralegs then&#10;showuseroption('priceterralegs',true)&#10;else&#10;showuseroption('priceterralegs',false)&#10;end&#10;&#10;&#10;if sellspidersilk then&#10;showuseroption('pricespidersilk',true)&#10;else&#10;showuseroption('pricespidersilk',false)&#10;end&#10;&#10;if sellhydraegg then&#10;showuseroption('pricehydraegg',true)&#10;else&#10;showuseroption('pricehydraegg',false)&#10;end&#10;&#10;if sellsnakeskin then&#10;showuseroption('pricesnakeskin',true)&#10;else&#10;showuseroption('pricesnakeskin',false)&#10;end&#10;&#10;if sellnobleaxe then&#10;showuseroption('pricenobleaxe',true)&#10;else&#10;showuseroption('pricenobleaxe',false)&#10;end&#10;&#10;if selltitanaxe then&#10;showuseroption('pricetitanaxe',true)&#10;else&#10;showuseroption('pricetitanaxe',false)&#10;end&#10;&#10;if selltimering then&#10;showuseroption('pricetimering',true)&#10;else&#10;showuseroption('pricetimering',false)&#10;end&#10;&#10;if sellbonytail then&#10;showuseroption('pricebonytail',true)&#10;else&#10;showuseroption('pricebonytail',false)&#10;end&#10;&#10;if selllifering then&#10;showuseroption('pricelifering',true)&#10;else&#10;showuseroption('pricelifering',false)&#10;end&#10;&#10;if sellitemsonmarket then&#10;showuseroption('Enable checkbox to see market items list', false)&#10;showuseroption('createnewoffer', true)&#10;showuseroption('roundstosell', true)&#10;showuseroption('Market Prices', true)&#10;wait(10)&#10;showuseroption('sellspellbookofmindcontrol', true)&#10;wait(10)&#10;showuseroption('sellultimatehealthpotion', true)&#10;wait(10)&#10;showuseroption('sellstrandofmedusahair', true)&#10;wait(10)&#10;showuseroption('sellstronghealthpotion', true)&#10;wait(10)&#10;showuseroption('selllightningheadband', true)&#10;wait(10)&#10;showuseroption('sellsacredtreeamulet', true)&#10;wait(10)&#10;showuseroption('sellgreatmanapotion', true)&#10;wait(10)&#10;showuseroption('sellbonebeasttrophy', true)&#10;wait(10)&#10;showuseroption('sellstoneskinamulet', true)&#10;wait(10)&#10;showuseroption('sellmercenarysword', true)&#10;wait(10)&#10;showuseroption('sellplatinumamulet', true)&#10;wait(10)&#10;showuseroption('sellgreenmushroom', true)&#10;wait(10)&#10;showuseroption('sellcharmerstiara', true)&#10;wait(10)&#10;showuseroption('sellwarriorhelmet', true)&#10;wait(10)&#10;showuseroption('sellstrangehelmet', true)&#10;wait(10)&#10;showuseroption('sellringofhealing', true)&#10;wait(10)&#10;showuseroption('sellhardenedbone', true)&#10;wait(10)&#10;showuseroption('selloldparchment', true)&#10;wait(10)&#10;showuseroption('sellbootsofhaste', true)&#10;wait(10)&#10;showuseroption('sellmedusashield', true)&#10;wait(10)&#10;showuseroption('sellcrownarmor', true)&#10;wait(10)&#10;showuseroption('sellterraamulet', true)&#10;wait(10)&#10;showuseroption('sellterramantle', true)&#10;wait(10)&#10;showuseroption('sellknightarmor', true)&#10;wait(10)&#10;showuseroption('sellroyalhelmet', true)&#10;wait(10)&#10;showuseroption('selltowershield', true)&#10;wait(10)&#10;showuseroption('sellgoldenmug', true)&#10;wait(10)&#10;showuseroption('selllifecrystal', true)&#10;wait(10)&#10;showuseroption('sellenergyring', true)&#10;wait(10)&#10;showuseroption('sellknightlegs', true)&#10;wait(10)&#10;showuseroption('sellwingedtail', true)&#10;wait(10)&#10;showuseroption('sellhydrahead', true)&#10;wait(10)&#10;showuseroption('sellterralegs', true)&#10;wait(10)&#10;showuseroption('sellhydraegg', true)&#10;wait(10)&#10;showuseroption('sellsnakeskin', true)&#10;wait(10)&#10;showuseroption('sellnobleaxe', true)&#10;wait(10)&#10;showuseroption('selltitanaxe', true)&#10;wait(10)&#10;showuseroption('sellspidersilk', true)&#10;wait(10)&#10;showuseroption('selltimering', true)&#10;wait(10)&#10;showuseroption('sellbonytail', true)&#10;wait(10)&#10;showuseroption('selllifering', true)&#10;wait(10)&#10;&#10;&#10;else&#10;showuseroption('roundstosell', false)&#10;showuseroption('createnewoffer', false)&#10;showuseroption('Market Prices', false)&#10;wait(10)&#10;showuseroption('sellspellbookofmindcontrol', false)&#10;wait(10)&#10;showuseroption('sellultimatehealthpotion', false)&#10;wait(10)&#10;showuseroption('sellstrandofmedusahair', false)&#10;wait(10)&#10;showuseroption('sellstronghealthpotion', false)&#10;wait(10)&#10;showuseroption('selllightningheadband', false)&#10;wait(10)&#10;showuseroption('sellsacredtreeamulet', false)&#10;wait(10)&#10;showuseroption('sellgreatmanapotion', false)&#10;wait(10)&#10;showuseroption('sellbonebeasttrophy', false)&#10;wait(10)&#10;showuseroption('sellstoneskinamulet', false)&#10;wait(10)&#10;showuseroption('sellmercenarysword', false)&#10;wait(10)&#10;showuseroption('sellplatinumamulet', false)&#10;wait(10)&#10;showuseroption('sellgreenmushroom', false)&#10;wait(10)&#10;showuseroption('sellcharmerstiara', false)&#10;wait(10)&#10;showuseroption('sellwarriorhelmet', false)&#10;wait(10)&#10;showuseroption('sellstrangehelmet', false)&#10;wait(10)&#10;showuseroption('sellringofhealing', false)&#10;wait(10)&#10;showuseroption('sellhardenedbone', false)&#10;wait(10)&#10;showuseroption('selloldparchment', false)&#10;wait(10)&#10;showuseroption('sellbootsofhaste', false)&#10;wait(10)&#10;showuseroption('sellmedusashield', false)&#10;wait(10)&#10;showuseroption('sellcrownarmor', false)&#10;wait(10)&#10;showuseroption('sellterraamulet', false)&#10;wait(10)&#10;showuseroption('sellterramantle', false)&#10;wait(10)&#10;showuseroption('sellknightarmor', false)&#10;wait(10)&#10;showuseroption('sellroyalhelmet', false)&#10;wait(10)&#10;showuseroption('selltowershield', false)&#10;wait(10)&#10;showuseroption('sellgoldenmug', false)&#10;wait(10)&#10;showuseroption('selllifecrystal', false)&#10;wait(10)&#10;showuseroption('sellenergyring', false)&#10;wait(10)             &#10;showuseroption('sellknightlegs', false)&#10;wait(10)&#10;showuseroption('sellwingedtail', false)&#10;wait(10)&#10;showuseroption('sellhydrahead', false)&#10;wait(10)&#10;showuseroption('sellterralegs', false)&#10;wait(10)&#10;showuseroption('sellhydraegg', false)&#10;wait(10)&#10;showuseroption('sellsnakeskin', false)&#10;wait(10)&#10;showuseroption('sellnobleaxe', false)&#10;wait(10)&#10;showuseroption('selltitanaxe', false)&#10;wait(10)&#10;showuseroption('sellspidersilk', false)&#10;wait(10)&#10;showuseroption('selltimering', false)&#10;wait(10)&#10;showuseroption('sellbonytail', false)&#10;wait(10)&#10;showuseroption('selllifering', false)&#10;wait(10)&#10;&#10;showuseroption('Enable checkbox to see market items list', true)&#10;end&#10;&#10;if selljewerly then&#10;showuseroption('Enable checkbox to see jewerly list', false)&#10;showuseroption('sellsmallemeralds', true)&#10;wait(100)&#10;showuseroption('sellsmallsapphires', true)&#10;else&#10;showuseroption('Enable checkbox to see jewerly list', true)&#10;showuseroption('sellsmallemeralds', false)&#10;wait(100)&#10;showuseroption('sellsmallsapphires', false)&#10;end" enabled="yes"/>
            <PersistentScript name="Functions" script="auto(2000)&#10;&#10;&#10;&#10;function depot()&#10;setsetting('Looting/OpenNextBP', 'no')&#10;closewindows()&#10;wait(2000)&#10;while windowcount() &lt; 2 do&#10;closewindows()&#10;wait(500,1200)&#10;openitem(mainbp, &quot;back&quot;, true)&#10;wait(500,1200)&#10;resizewindows()&#10;wait(500,1200)&#10;openitem(lootbp,mainbp,true)&#10;wait(500,1200)&#10;resizewindows()&#10;end&#10;&#10;&#10;while windowcount(&quot;Depot Chest&quot;) == 0 do&#10;&#9;opendepot()&#10;&#9;wait(500)&#10;end&#10;&#10;&#10;while windowcount(lootbp) == 0 do&#10;openitem(lootbp,mainbp,true)&#10;wait(300)&#10;end&#10;&#10;&#10;while windowcount(maindpbp) == 0 do &#10;openitem(maindpbp, &quot;Depot Chest&quot;) &#10;wait(300,500) &#10;resizewindows(1000,maindpbp) &#10;wait(300,500) &#10;end &#10;&#10;&#10;&#10;setsetting('Looting/OpenNextBP', 'no')&#10;waitping()&#10;&#10;&#10;local CONFIG = {&#10;    LOOT_BACKPACK = lootbp,&#10;    MAIN_DP_BACKPACK = maindpbp,&#10;    STACKABLE_BACKPACK = stackdpbp,&#10;    NOT_STACKABLE_BACKPACK = raredpbp,&#10;}&#10; &#10;clearlastonto()&#10; &#10;while (true) do&#10;&#9;foreach lootingitem ITEM_ENTRY do&#10;if ITEM_ENTRY.id == 3035 then&#10;else&#10;&#9;&#9;while (itemcount(ITEM_ENTRY.id, CONFIG.LOOT_BACKPACK) &gt; 0) do&#10;&#10;&#9;&#9;&#9;if (itemproperty(ITEM_ENTRY.id, ITEM_STACKABLE)) then&#10;&#9;&#9;&#9;&#9;moveitemsonto(ITEM_ENTRY.id, CONFIG.STACKABLE_BACKPACK, 1, CONFIG.MAIN_DP_BACKPACK, CONFIG.LOOT_BACKPACK) wait(300,400)&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;moveitemsonto(ITEM_ENTRY.id, CONFIG.NOT_STACKABLE_BACKPACK, $lastonto, CONFIG.MAIN_DP_BACKPACK, CONFIG.LOOT_BACKPACK) wait(300,400)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;end&#10;end&#10;&#10; &#10;    if (itemcount(CONFIG.LOOT_BACKPACK, CONFIG.LOOT_BACKPACK) &gt; 0) then&#10;        openitem(CONFIG.LOOT_BACKPACK, CONFIG.LOOT_BACKPACK, false) waitcontainer(CONFIG.LOOT_BACKPACK, false)&#10;    else&#10;        break&#10;    end&#10; &#10;    wait(100)&#10;end&#10;&#10;if refills &gt;= roundstosell then&#10;refills = 0&#10;end&#10;closewindows()&#10;&#10;wait(700, 900)&#10;&#10;&#10;&#10;if refills == 0 then&#10;if sellitemsonmarket then&#10;while not $marketopen do&#10;wait(600)&#10;openmarket()&#10;wait(1600)&#10;end&#10;&#10;&#10;for _,market in ipairs(itemsonmarket) do&#10;if market.item then&#10;sellitemsmarket( market.itemname,  market.price ,  9999 ,  createnewoffer ,  true ) &#10;end&#10;end&#10;&#10;&#10;&#10;waitping()&#10;closemarket()&#10;end&#10;end&#10;end&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;function bpsforbank()&#10;&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(suppbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#10;end&#10;end&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;function withdrawmoney()&#10;&#10;Mana = math.positive(maxsmp - itemcount(&quot;strong mana potion&quot;)) * 80&#10;GSP = math.positive(maxgsp - itemcount(&quot;great spirit potion&quot;)) * 190 &#10;if usegfb then&#10;GFB = math.positive(maxgfb - itemcount(&quot;great fireball rune&quot;)) * 45 &#10;else&#10;GFB = 0&#10;end&#10;AMMO = math.positive(maxammo - itemcount(ammotype)) * 20&#10;Total = math.ceil(Mana + GSP + AMMO, 10000) + 10000&#10;&#10;&#10;&#10;&#9;npctalk(&quot;hi&quot;,&quot;deposit all&quot;,&quot;yes&quot;, &quot;withdraw &quot;..Total, &quot;yes&quot;, &quot;balance&quot;)&#10;&#10;end&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;function suppshop()&#10;&#10;&#10;&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(suppbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end&#10;if useextrabp then&#10;while windowcount &lt; 3 do&#10;openitem(extrabp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end &#10;end&#10;&#10;sellflasks()&#10;&#10;--GSP&#10;amount2 = maxgsp - itemcount(&quot;great spirit potion&quot;)&#10;while amount2 &gt; 0 and islocation(1) do &#10;&#9;buyitems(&quot;great spirit potion&quot;, amount2) &#10;&#9;waitping(2,3)&#10;&#10;&#9;&#9;moveitems(&quot;great spirit potion&quot;,suppbp, mainbp) &#10;&#10;&#9;waitping(2,3)&#10;&#9;amount2 = amount2-100&#10;end&#10;&#10;--MANAS&#10;amount1 = tonumber(maxsmp) - itemcount(&quot;strong mana potion&quot;)&#10;while amount1 &gt; 0 and islocation(1) do &#10;&#9;buyitems(&quot;strong mana potion&quot;, amount1) &#10;&#9;waitping(2,3)&#10;&#9;if getcontainer(suppbp).emptycount &gt; 0 then&#10;&#9;&#9;moveitems(&quot;strong mana potion&quot;,suppbp, mainbp) &#10;&#9;else&#10;&#9;&#9;moveitems(&quot;strong mana potion&quot;,extrabp, mainbp) &#10;&#9;end&#10;&#9;waitping(2,3)&#10;&#9;amount1 = amount1-100&#10;end&#10;end&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;function ammoshop()&#10;&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(suppbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end&#10;if useextrabp then&#10;while windowcount &lt; 3 do&#10;openitem(extrabp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;end &#10;end&#10;::opentradeagainammo::&#10;if not ischannel('NPCs') then&#10;say('hi')&#10;wait(1500)&#10;else&#10;npcsay('hi')&#10;wait(300)&#10;end&#10;&#10;npcsay(&quot;trade&quot;)&#10;wait(1000)&#10;&#10;if not $tradeopen then&#10;goto opentradeagainammo&#10;end&#10;&#10;amount1 = tonumber(maxammo) - itemcount(ammotype)&#10;while amount1 &gt; 0 and islocation(1) do &#10;&#9;buyitems(ammotype, amount1) &#10;&#9;waitping(2,3)&#10;&#9;if getcontainer(suppbp).emptycount &gt; 0 then&#10;&#9;&#9;moveitems(ammotype,suppbp, mainbp) &#10;&#9;else&#10;&#9;&#9;moveitems(ammotype,extrabp, mainbp) &#10;&#9;end&#10;&#9;waitping(2,3)&#10;&#9;amount1 = amount1-100&#10;end&#10;end&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;function checksupp()&#10;if itemcount(ammotype)+10 &lt; maxammo or itemcount(&quot;strong mana potion&quot;) + 20 &lt; maxsmp or itemcount(&quot;great spirit potion&quot;) + 20 &lt; maxgsp then&#10;gotolabel(&quot;start&quot;)&#10;end&#10;end&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;function seljewerly()&#10;::opentradejagain::&#10;if not ischannel('NPCs') then&#10;say('hi')&#10;wait(1500)&#10;else&#10;npcsay('hi')&#10;wait(300)&#10;end&#10;&#10;npcsay(&quot;trade&quot;)&#10;wait(1000)&#10;&#10;if not $tradeopen then&#10;goto opentradejagain&#10;end&#10;&#10;if sellsmallemeralds then&#10;sellitems('small emerald', tradecount('sell', 'small emerald'))&#10;end&#10;&#10;if sellsmallsapphires then&#10;sellitems('small sapphire', tradecount('sell', 'small sapphire'))&#10;end&#10;&#10;end&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;function bpsforhunt()&#10;&#10;closewindows()&#10;wait(1000)&#10;&#9;while windowcount() &lt; 4 do&#10;&#9;&#9;closewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(mainbp, &quot;back&quot;, true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(suppbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(lootbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;openitem(goldbp,mainbp,true)&#10;&#9;&#9;wait(500,800)&#10;&#9;&#9;resizewindows()&#10;&#10;end&#10;end&#10;" enabled="yes"/>
            <PersistentScript name="Slow Variables" script="auto(1000)&#10;&#10;usealertonspawn = getuseroption('usealertonspawn')&#10;traymessages = getuseroption('traymessages')&#10;createnewoffer = getuseroption('createnewoffer')&#10;equiplrings = getuseroption('Equip looted Rings')&#10;ringtype = getuseroption('ringtype')&#10;antilure = getuseroption('Enable Anti Lure')&#10;antiluremonsters = getuseroption('antiluremonsters')&#10;&#10;&#10;pvpe = getuseroption('pvpe')&#10;&#10;mainbp = getuseroption('mainbp')&#10;suppbp = getuseroption('suppbp')&#10;lootbp = getuseroption('lootbp')&#10;goldbp = getuseroption('goldbp')&#10;extrabp = getuseroption('extrabp')&#10;maindpbp = getuseroption('maindpbp')&#10;stackdpbp = getuseroption('stackdpbp')&#10;raredpbp = getuseroption('raredpbp')&#10;maxsmp = getuseroption('maxsmp')&#10;minsmp = getuseroption('minsmp')&#10;maxgsp = getuseroption('maxgsp')&#10;mingsp = getuseroption('mingsp')&#10;ammotype = getuseroption('ammotype')&#10;maxammo = getuseroption('maxammo')&#10;minammo = getuseroption('minammo')&#10;mincap = getuseroption('mincap')&#10;useutanavid = getuseroption('useutanavid')&#10;lootgold = getuseroption('lootgold')&#10;&#10;traveltobanuta = getuseroption('traveltobanuta')&#10;ropetype = getsetting('Cavebot/Rope')&#10;shoveltype = getsetting('Cavebot/Shovel')&#10;cavebotenabled = getsetting('Cavebot/Enabled')&#10;&#10;keephaste = getuseroption('keephaste')&#10;&#10;medusastask = 500&#10;hydrastask = 650&#10;serpentspawnstask = 800&#10;&#10;taskingmedusas = getuseroption('Medusa Task')&#10;taskingserpentspawns = getuseroption('Serpent Spawn Task')&#10;taskinghydras = getuseroption('Hydra Task')&#10;&#10;&#10;&#10;&#10;&#10;if lootgold then&#10;setsetting('Looting/LootList/gold coin/Action', 'Loot')&#10;else&#10;setsetting('Looting/LootList/gold coin/Action', 'Ignore')&#10;end&#10;&#10;&#10;if not havesupply and $wptsection == &quot;Hunt&quot; then&#10;setsetting('Looting/Enabled', 'no')&#10;setsetting('Targeting/Creatures/Bonebeast/Setting1/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Medusa/Setting1/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Serpent Spawn/Setting1/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Hydra/Setting1/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Giant Spider/Setting1/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Bonebeast/Setting2/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Medusa/Setting2/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Serpent Spawn/Setting2/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Hydra/Setting2/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Giant Spider/Setting2/OnlyIfTrapped', 'yes')&#10;if $posy &lt; 32556 and $posx &gt; 32548 then&#10;gotolabel(&quot;go1&quot;,&quot;Leave&quot;)&#10;elseif $posy &lt; 32564 and $posx &lt; 32828 then&#10;gotolabel(&quot;le1&quot;,&quot;Leave&quot;)&#10;elseif $posy &lt; 32595 and $posx &lt; 32795 then&#10;gotolabel(&quot;le2&quot;,&quot;Leave&quot;)&#10;elseif $posy &lt; 32621 and $posx &lt; 32818 then&#10;gotolabel(&quot;le3&quot;,&quot;Leave&quot;)&#10;elseif $posy &lt; 32804 and $posx &lt; 32620 then&#10;gotolabel(&quot;le4&quot;,&quot;Leave&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Leave&quot;)&#10;end&#10;end&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;if keephaste then&#10;setsetting('ConditionHealer/Rules/NewHealRule1/Enabled', 'yes')&#10;else&#10;setsetting('ConditionHealer/Rules/NewHealRule1/Enabled', 'no')&#10;end&#10;&#10;if windowcount(mainbp) &gt;= 1 then&#10;if itemcount(ropetype) &lt; 1 or itemcount(shoveltype) &lt; 1 then&#10;showuseroption(&quot;Reminder&quot;,true)&#10;else&#10;showuseroption(&quot;Reminder&quot;,false)&#10;end&#10;end&#10;&#10;if pvpe then&#10;if not $pzone then&#10;setsetting('Cavebot/WalkThroughPlayers', 'no')&#10;else&#10;setsetting('Cavebot/WalkThroughPlayers', 'yes')&#10;end&#10;else&#10;setsetting('Cavebot/WalkThroughPlayers', 'yes')&#10;end&#10;&#10;&#10;if itemcount(ammotype) &lt; minammo or itemcount(&quot;strong mana potion&quot;) &lt; minsmp or itemcount(&quot;great spirit potion&quot;) &lt; mingsp then&#10;havesupply = false&#10;else&#10;havesupply = true&#10;end&#10;&#10;if $cap &gt; mincap then&#10;havecap = true&#10;else&#10;havecap = false&#10;end&#10;&#10;--Looting destinations&#10;setlootingdestination('mainbp', mainbp)&#10;setlootingdestination('lootbp', lootbp)&#10;setlootingdestination('suppbp', suppbp)&#10;setlootingdestination('goldbp', goldbp)&#10;setlootingdestination('extrabp', extrabp)&#10;setlootingdestination('maindpbp', maindpbp)&#10;setlootingdestination('stackdpbp', stackdpbp)&#10;setlootingdestination('raredpbp', raredpbp)&#10;--koniec&#10;&#10;if itemcount(&quot;great spirit potion&quot;,suppbp) &lt; maxgsp then&#10;setsetting('Looting/LootList/great spirit potion/LootingDestination', 'suppbp')&#10;else&#10;setsetting('Looting/LootList/great spirit potion/LootingDestination', 'lootbp')&#10;end&#10;&#10;&#10;if $belt.count &lt; 20 then&#10;equipitem(ammotype,'belt')&#10;end&#10;&#10;&#10;&#10;if $cap &lt; 500 then&#10;if (itemcount(283) + itemcount(284) + itemcount(285)) &gt; 10 then&#10;    for id = 283, 285 do&#10;    if itemcount(id) &gt; 5 then&#10;    moveitems(id, 'ground') return&#10;    end&#10;    end&#10;end&#10;end&#10;" enabled="yes"/>
            <PersistentScript name="Mas San" script="    init start&#10;&#10;    local Monsters = {&quot;Medusa&quot;,&quot;Serpent Spawn&quot;,&quot;Giant Spider&quot;,&quot;Hydra&quot;,&quot;Bonebeast&quot;}&#10;&#10;    init end&#10;    local Players = {&#10;    Consider = pvpe,&#10;    Distance = 10,&#10;    FloorDifference = 1,&#10;    SafeList = {&quot;Bubble&quot;, &quot;Eternal Oblivion&quot;},&#10;    }&#10;&#10;    local Spells = {&#10;    {Name = &quot;exevo mas san&quot;, Amount = 2},&#10;    }&#10;&#10;    local SpecialAreas = {&#10;    -- {min x, max x, min y, max y, z}&#10;    }&#10;&#10;    local UseTargetState = false&#10;&#10;    -- DO NOT CHANGE ANYTHING BELOW THIS LINE&#10;&#10;    local i, LastFloor, Exhaust = 1, $posz, $timems&#10;&#10;    while Spells[i] ~= nil do&#10;    Spells[i].Info = spellinfo(Spells[i].Name)&#10;&#10;    if Spells[i].Info.words == 0 then&#10;    table.remove(Spells, i)&#10;    else&#10;    Spells[i].Monsters = Spells[i].Monsters or Monsters&#10;    Spells[i].NeedDirection = table.find({&quot;WaveSmall&quot;, &quot;WaveVerySmall&quot;, &quot;WaveBig&quot;, &quot;BeamSmall&quot;, &quot;BeamBig&quot;, &quot;Front&quot;, &quot;Strike&quot;}, Spells[i].Info.castarea) ~= nil&#10;    Spells[i].AttackSupport = Spells[i].Info.group:match(&quot;Support&quot;) ~= nil&#10;&#10;    table.lower(Spells[i].Monsters)&#10;    i = i + 1&#10;    end&#10;    end&#10;&#10;&#10;    auto(500, 600)&#10;&#10;    if $posz ~= LastFloor then&#10;    LastFloor, Exhaust = $posz, $timems + 2000&#10;    return&#10;    end&#10;&#10;    if $timems &gt;= Exhaust and ($targeting or not UseTargetState) then&#10;    for _, Spell in ipairs(Spells) do&#10;    if cancast(Spell.Info) and not isinsidearea(SpecialAreas) then&#10;    if Spell.Amount and (not Players.Consider or paroundfloorignore(Players.Distance, Players.FloorDifference, unpack(Players.SafeList)) == 0) then&#10;    local BestAmount, BestDir = 0, $self.dir&#10;&#10;    if Spell.NeedDirection then&#10;    for Dir, Amount in pairs({n = 0, e = 0, s = 0, w = 0}) do&#10;    Amount = maroundspell(Spell.Name, Dir, unpack(Spell.Monsters))&#10;&#10;    if Amount &gt; BestAmount or (Amount &gt;= BestAmount and Dir == $self.dir) then&#10;    BestAmount, BestDir = Amount, Dir&#10;    end&#10;    end&#10;    else&#10;    BestAmount = not Spell.AttackSupport and maroundspell(Spell.Name, BestDir, unpack(Spell.Monsters)) or maround(1, false, unpack(Spell.Monsters))&#10;    end&#10;&#10;    if BestAmount &gt;= math.max(Spell.Amount, 1) then&#10;    while $self.dir ~= BestDir do&#10;    turn(BestDir) waitping()&#10;    end&#10;    cast(Spell.Name) waitping()&#10;    end&#10;    elseif Spell.Hppc and $attacked.hppc &gt;= math.max(Spell.Hppc, 1) and table.find(Spell.Monsters, $attacked.name:lower()) and cancast(Spell.Info, $attacked) then&#10;    cast(Spell.Name) waitping()&#10;    end&#10;    end&#10;    end&#10;    end" enabled="yes"/>
            <PersistentScript name="SafeBank" script="auto(100)&#10;foreach newmessage m do&#10; if m.content == &quot;There is not enough gold on your account.&quot; and m.type == 6 then&#10;   gotolabel(&quot;start&quot;, &quot;GoTrainers&quot;)&#10;  end&#10;end" enabled="yes"/>
            <PersistentScript name="Alert" script="auto(1000)&#10;    -- local SCRIPT_VERSION = '1.0.1'&#10;if $wptsection == &quot;Hunt&quot; then&#10;    local alerts = {&#10;    {&#10;    name = 'Player on Screen',&#10;    sound = 'playeronscreen.wav',&#10;&#10;    playSound = usealertonspawn,&#10;    pauseBot = false,&#10;    logout = false,&#10;    safelist = {}&#10;    },&#10;    {&#10;    name = 'Player Attacking',&#10;    sound = 'playerattacking.wav',&#10;&#10;    playSound = getuseroption('alertonspawn'),&#10;    pauseBot = false,&#10;    logout = false,&#10;    safelist = {getuseroption('friendname')}&#10;    },&#10;    {&#10;    name = 'Monster Attacking',&#10;    sound = 'monsterattacking.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    safelist = {'Rat', 'Bat'}&#10;    },&#10;    {&#10;    name = 'Private Message',&#10;    sound = 'privatemessage.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    safelist = {'Bubble', 'Cachero'}&#10;    },&#10;    {&#10;    name = 'Default Message',&#10;    sound = 'defaultmessage.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    safelist = {'Bubble', 'Cachero'}&#10;    },&#10;    {&#10;    name = 'GM Detected',&#10;    sound = 'gmdetected.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false&#10;    },&#10;    {&#10;    name = 'Disconnected',&#10;    sound = 'disconnected.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false&#10;    },&#10;    {&#10;    name = 'Character Stuck',&#10;    sound = 'characterstuck.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    stuckTime = 30000 -- ms&#10;    },&#10;    {&#10;    name = 'Health Below',&#10;    sound = 'lowhealth.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    pcBelow = 50&#10;    },&#10;    {&#10;    name = 'Mana Below',&#10;    sound = 'lowmana.wav',&#10;&#10;    playSound = false,&#10;    pauseBot = false,&#10;    logout = false,&#10;    pcBelow = 50&#10;    }&#10;    }&#10;&#10;    -- Do not edit below this line&#10;&#10;    do&#10;    local tests = {&#10;    function(safelist) return paroundignore(10, table.unpack(safelist)) &gt; 0 end,&#10;    function(safelist) return $pattacker.id ~= 0 and not table.find(safelist, $pattacker.name:lower()) end,&#10;    function(safelist) return $mattacker.id ~= 0 and not table.find(safelist, $mattacker.name:lower()) end,&#10;    function(safelist) foreach newmessage m do if m.type == MSG_PVT then return true end end return false end,&#10;    function(safelist) foreach newmessage m do if m.type == MSG_WHISPER or m.type == MSG_DEFAULT or m.type == MSG_YELL then return true end end return false end,&#10;    function() foreach creature c do if c.name:starts('GM') or c.name:starts('CM') then return true end end return false end,&#10;    function() return not $connected end,&#10;    function(stuckTime) return $standtime &gt; stuckTime end,&#10;    function(pcBelow) return $hppc &lt; pcBelow end,&#10;    function(pcBelow) return $mppc &lt; pcBelow end&#10;    }&#10;&#10;    for i = 1, #alerts do&#10;    local alert = alerts[i]&#10;    alert.test = tests[i]&#10;&#10;    if alert.safelist then&#10;    table.lower(alert.safelist)&#10;    end&#10;    end&#10;    end&#10;&#10;&#10;    auto(100)&#10;    listas('Alerts')&#10;    for _, v in ipairs(alerts) do&#10;    if v.test(v.safelist or v.stuckTime or v.pcBelow) then&#10;    if v.playSound then&#10;    playsound(v.sound)&#10;    end&#10;    if v.pauseBot then&#10;    pausebot(true)&#10;    end&#10;    if v.logout then&#10;    xlog()&#10;    end&#10;    end&#10;    end&#10;end" enabled="yes"/>
            <PersistentScript name="Special Areas" script="auto(100)&#10;&#10;&#10;for i = 1,15 do&#10;zmiennax = string.match(getsetting(&quot;Cavebot/SpecialAreas/YokoPionowa&quot;..i..&quot;/Coordinates&quot;), &quot;x:(%d+)&quot;)&#10;zx = tonumber(zmiennax)&#10;&#10;if $posx &lt; zx and $attacked.posx &gt;= zx &#10;or $posx &gt; zx and $attacked.posx &lt;= zx  then&#10;setsetting(&quot;Cavebot/SpecialAreas/YokoPionowa&quot;..i..&quot;/Policy&quot;, 'None')&#10;else&#10;setsetting(&quot;Cavebot/SpecialAreas/YokoPionowa&quot;..i..&quot;/Policy&quot;, 'Targeting')&#10;end&#10;end&#10;&#10;&#10;for j = 1,18 do&#10;zmiennay = string.match(getsetting(&quot;Cavebot/SpecialAreas/YokoPozioma&quot;..j..&quot;/Coordinates&quot;), &quot;y:(%d+)&quot;)&#10;zy = tonumber(zmiennay)&#10;&#10;if $posy &lt; zy and $attacked.posy &gt;= zy &#10;or $posy &gt; zy and $attacked.posy &lt;= zy  then&#10;setsetting(&quot;Cavebot/SpecialAreas/YokoPozioma&quot;..j..&quot;/Policy&quot;, 'None')&#10;else&#10;setsetting(&quot;Cavebot/SpecialAreas/YokoPozioma&quot;..j..&quot;/Policy&quot;, 'Targeting')&#10;end&#10;end&#10;&#10;&#10;&#10;&#10;&#10;for p = 1,3 do&#10;wprawo = tonumber(string.match(getsetting(&quot;Cavebot/SpecialAreas/YokoWPrawo&quot;..p..&quot;/Coordinates&quot;), &quot;x:(%d+)&quot;))&#10;if $posx &lt; wprawo then&#10;setsetting(&quot;Cavebot/SpecialAreas/YokoWPrawo&quot;..p..&quot;/Policy&quot;, 'None')&#10;else&#10;if $attacked.posx &lt; wprawo then&#10;setsetting(&quot;Cavebot/SpecialAreas/YokoWPrawo&quot;..p..&quot;/Policy&quot;, 'None')&#10;else&#10;setsetting(&quot;Cavebot/SpecialAreas/YokoWPrawo&quot;..p..&quot;/Policy&quot;, 'Targeting')&#10;end&#10;end&#10;end&#10;&#10;&#10;for l = 1,1 do&#10;wlewo = tonumber(string.match(getsetting(&quot;Cavebot/SpecialAreas/YokoWLewo&quot;..l..&quot;/Coordinates&quot;), &quot;x:(%d+)&quot;))&#10;if $posx &gt; wlewo then&#10;setsetting(&quot;Cavebot/SpecialAreas/YokoWLewo&quot;..l..&quot;/Policy&quot;, 'None')&#10;else&#10;if $attacked.posx &gt; wlewo then&#10;setsetting(&quot;Cavebot/SpecialAreas/YokoWLewo&quot;..l..&quot;/Policy&quot;, 'None')&#10;else&#10;setsetting(&quot;Cavebot/SpecialAreas/YokoWLewo&quot;..l..&quot;/Policy&quot;, 'Targeting')&#10;end&#10;end&#10;end&#10;&#10;for g = 1,2 do&#10;wgore = tonumber(string.match(getsetting(&quot;Cavebot/SpecialAreas/YokoWGore&quot;..g..&quot;/Coordinates&quot;), &quot;y:(%d+)&quot;))&#10;if $posy &gt; wgore then&#10;setsetting(&quot;Cavebot/SpecialAreas/YokoWGore&quot;..g..&quot;/Policy&quot;, 'None')&#10;else&#10;if $attacked.posy &gt; wgore then&#10;setsetting(&quot;Cavebot/SpecialAreas/YokoWGore&quot;..g..&quot;/Policy&quot;, 'None')&#10;else&#10;setsetting(&quot;Cavebot/SpecialAreas/YokoWGore&quot;..g..&quot;/Policy&quot;, 'Targeting')&#10;end&#10;end&#10;end&#10;&#10;for d = 1,2 do&#10;wdol = tonumber(string.match(getsetting(&quot;Cavebot/SpecialAreas/YokoWDol&quot;..d..&quot;/Coordinates&quot;), &quot;y:(%d+)&quot;))&#10;if $posy &lt; wdol then&#10;setsetting(&quot;Cavebot/SpecialAreas/YokoWDol&quot;..d..&quot;/Policy&quot;, 'None')&#10;else&#10;if $attacked.posy &lt; wdol then&#10;setsetting(&quot;Cavebot/SpecialAreas/YokoWDol&quot;..d..&quot;/Policy&quot;, 'None')&#10;else&#10;setsetting(&quot;Cavebot/SpecialAreas/YokoWDol&quot;..d..&quot;/Policy&quot;, 'Targeting')&#10;end&#10;end&#10;end" enabled="yes"/>
            <PersistentScript name="itemstable" script="auto(100)&#10;itemsonmarket = {&#10;{item = sellspellbookofmindcontrol, price = pricespellbookofmindcontrol, itemname = &quot;Spellbook of Mind Control&quot;},&#10;{item = sellultimatehealthpotion, price = priceultimatehealthpotion, itemname = &quot;ultimate health potion&quot;},&#10;{item = sellstrandofmedusahair, price = pricestrandofmedusahair, itemname = &quot;strand of medusa hair&quot;},&#10;{item = sellstronghealthpotion, price = pricestronghealthpotion, itemname = &quot;strong health potion&quot;},&#10;{item = selllightningheadband, price = pricelightningheadband, itemname = &quot;lightning headband&quot;},&#10;{item = sellsacredtreeamulet, price = pricesacredtreeamulet, itemname = &quot;sacred tree amulet&quot;},&#10;{item = sellgreatmanapotion, price = pricegreatmanapotion, itemname = &quot;great mana potion&quot;},&#10;{item = sellbonebeasttrophy, price = pricebonebeasttrophy, itemname = &quot;bonebeast trophy&quot;},&#10;{item = sellstoneskinamulet, price = pricestoneskinamulet, itemname = &quot;stone skin amulet&quot;},&#10;{item = sellmercenarysword, price = pricemercenarysword, itemname = &quot;mercenary sword&quot;},&#10;{item = sellplatinumamulet, price = priceplatinumamulet, itemname = &quot;platinum amulet&quot;},&#10;{item = sellgreenmushroom, price = pricegreenmushroom, itemname = &quot;green mushroom&quot;},&#10;{item = sellcharmerstiara, price = pricecharmerstiara, itemname = &quot;charmer's tiara&quot;},&#10;{item = sellwarriorhelmet, price = pricewarriorhelmet, itemname = &quot;warrior helmet&quot;},&#10;{item = sellstrangehelmet, price = pricestrangehelmet, itemname = &quot;strange helmet&quot;},&#10;{item = sellringofhealing, price = priceringofhealing, itemname = &quot;ring of healing&quot;},&#10;{item = sellhardenedbone, price = pricehardenedbone, itemname = &quot;hardened bone&quot;},&#10;{item = selloldparchment, price = priceoldparchment, itemname = &quot;old parchment&quot;},&#10;{item = sellbootsofhaste, price = pricebootsofhaste, itemname = &quot;boots of haste&quot;},&#10;{item = sellmedusashield, price = pricemedusashield, itemname = &quot;medusa shield&quot;},&#10;{item = sellcrownarmor, price = pricecrownarmor, itemname = &quot;crown armor&quot;},&#10;{item = sellterraamulet, price = priceterraamulet, itemname = &quot;terra amulet&quot;},&#10;{item = sellterramantle, price = priceterramantle, itemname = &quot;terra mantle&quot;},&#10;{item = sellknightarmor, price = priceknightarmor, itemname = &quot;knight armor&quot;},&#10;{item = sellroyalhelmet, price = priceroyalhelmet, itemname = &quot;royal helmet&quot;},&#10;{item = selltowershield, price = pricetowershield, itemname = &quot;tower shield&quot;},&#10;{item = sellgoldenmug, price = pricegoldenmug, itemname = &quot;golden mug&quot;},&#10;{item = selllifecrystal, price = pricelifecrystal, itemname = &quot;life crystal&quot;},&#10;{item = sellenergyring, price = priceenergyring, itemname = &quot;energy ring&quot;},&#10;{item = sellknightlegs, price = priceknightlegs, itemname = &quot;knight legs&quot;},&#10;{item = sellwingedtail, price = pricewingedtail, itemname = &quot;winged tail&quot;},&#10;{item = sellhydrahead, price = pricehydrahead, itemname = &quot;hydra head&quot;},&#10;{item = sellterralegs, price = priceterralegs, itemname = &quot;terra legs&quot;},&#10;{item = sellspidersilk, price = pricespidersilk, itemname = &quot;spider silk&quot;},&#10;{item = sellhydraegg, price = pricehydraegg, itemname = &quot;hydra egg&quot;},&#10;{item = sellsnakeskin, price = pricesnakeskin, itemname = &quot;snake skin&quot;},&#10;{item = sellnobleaxe, price = pricenobleaxe, itemname = &quot;noble axe&quot;},&#10;{item = selltitanaxe, price = pricetitanaxe, itemname = &quot;titan axe&quot;},&#10;{item = selltimering, price = pricetimering, itemname = &quot;time ring&quot;},&#10;{item = sellbonytail, price = pricebonytail, itemname = &quot;bony tail&quot;},&#10;{item = selllifering, price = pricelifering, itemname = &quot;life ring&quot;},&#10;}&#10;" enabled="yes"/>
            <PersistentScript name="Buttons" script="--database&#10;init start&#10;&#9;function inputevents(e)&#10;&#9;&#9;if e.name == 'Update Killed Hydra Count In Character Database' then&#10;&#9;&#9;&#9;print(&quot;Added &quot;..getuseroption('hydraskilled')..&quot; hydras to database&quot;)&#10;&#9;&#9;&#9;$chardb:setvalue('killedhydras',&quot;amount&quot;,getuseroption('hydraskilled'))&#10;&#9;&#9;&#9;setuseroption('hydraskilled', 0)&#10;&#9;&#9;end&#10;&#9;&#9;if e.name == 'Update Killed Serpent Spawn Count In Character Database' then&#10;&#9;&#9;&#9;print(&quot;Added &quot;..getuseroption('serpenspawnskilled')..&quot; serpent spawns to database&quot;)&#10;&#9;&#9;&#9;$chardb:setvalue('killedserpentspawns',&quot;amount&quot;,getuseroption('serpenspawnskilled'))&#10;&#9;&#9;&#9;setuseroption('serpenspawnskilled', 0)&#10;&#9;&#9;end&#10;&#9;&#9;if e.name == 'Update Killed Medusa Count In Character Database' then&#10;&#9;&#9;&#9;print(&quot;Added &quot;..getuseroption('medusaskilled')..&quot; medusas to database&quot;)&#10;&#9;&#9;&#9;$chardb:setvalue('killedmedusas',&quot;amount&quot;,getuseroption('medusaskilled'))&#10;&#9;&#9;&#9;setuseroption('medusaskilled', 0)&#10;&#9;&#9;end&#10;&#10;&#9;end&#10;&#10;&#9;filteruseroptions(true)&#10;&#10;init end&#10;&#10;" enabled="yes"/>
            <PersistentScript name="TaskCounter" script="    auto(100)&#10;&#9;if $chardb:getvalue('killedmedusas',&quot;amount&quot;) == NULL then&#10;&#9;$chardb:setvalue('killedmedusas',&quot;amount&quot;,0)&#10;&#9;end&#10;&#9;if $chardb:getvalue('killedhydras',&quot;amount&quot;) == NULL then&#10;&#9;$chardb:setvalue('killedhydras',&quot;amount&quot;,0)&#10;&#9;end&#10;&#9;if $chardb:getvalue('killedserpentspawns',&quot;amount&quot;) == NULL then&#10;&#9;$chardb:setvalue('killedserpentspawns',&quot;amount&quot;,0)&#10;&#9;end&#10;&#10;&#10;&#10;&#9;&#10;&#10;&#10;&#10;    foreach newmessage m do&#10;&#10;&#10;&#10;&#10;&#10;    if m.type == MSG_INFO then&#10;    local creature = m.content:match(REGEX_LOOT)&#10;    if creature then&#10;&#9;if (creature == &quot;medusa&quot;) then&#10;&#9;$chardb:setvalue('killedmedusas',&quot;amount&quot;,$chardb:getvalue('killedmedusas',&quot;amount&quot;) + 1)&#10;&#9;end&#10;&#10;&#9;if (creature == &quot;hydra&quot;) then&#10;&#9;$chardb:setvalue('killedhydras',&quot;amount&quot;,$chardb:getvalue('killedhydras',&quot;amount&quot;) + 1)&#10;&#9;&#10;&#9;end&#10;&#10;&#9;if (creature == &quot;serpent spawn&quot;) then&#10;&#9;$chardb:setvalue('killedserpentspawns',&quot;amount&quot;,$chardb:getvalue('killedserpentspawns',&quot;amount&quot;) + 1)&#10;&#9;&#10;&#9;end&#10;&#10;&#10;&#10;&#10;    end&#10;    end&#10;    end&#10;" enabled="yes"/>
            <PersistentScript name="TrayMessage" script="    init start&#10;    local curlevel = $level&#10;    local curmlevel = $mlevel&#10;    local curdistlevel = $distance&#10;&#9;local deathshowed = false&#10;&#9;taskdone = false&#10;&#9;antilurework = false&#10;    init end&#10;&#10;    auto(1000)&#10;if traymessages then&#10;&#10;    if $level ~= curlevel then&#10;    traymessage($name, &quot;Congratulations! You advanced from Level &quot;..curlevel.. &quot; to Level &quot; ..$level..&quot;. Click on this message to show &quot;..$name..&quot; bot&quot;, 5000)&#10;    curlevel = $level&#10;    end&#10; &#9;if $mlevel ~= curmlevel then&#10;    traymessage($name, &quot;Congratulations! You advanced in magic level to &quot;..$mlevel..&quot; (with items). Click on this message to show &quot;..$name..&quot; bot&quot;, 5000)&#10;    curmlevel = $mlevel&#10;    end&#10;&#9;if $distance ~= curdistlevel then&#10;    traymessage($name, &quot;Congratulations! You advanced in distance fighting to &quot; ..$distance..&quot; (with items). Click on this message to show &quot;..$name..&quot; bot&quot;, 5000)&#10;    curdistlevel = $distance&#10;    end&#10;&#9;if $hppc &lt; 1 then&#10;&#9;if deathshowed == false&#9;then &#10;&#9;traymessage($name, &quot;Hey! Your character &quot;..$name..&quot; Died. Click on this message to show &quot;..$name..&quot; bot&quot;, 5000)&#10;    deathshowed = true&#10;&#9;end&#10;&#9;end&#10;&#9;if $wptsection == &quot;Hunt&quot; then&#10;&#10;&#9;foreach creature m 'ps' do&#10;&#9;if m.name ~= $name then&#10;&#9;traymessage($name, &quot;Hey! Someone enter Your spawn where &quot;..$name..&quot; hunting please check that.&quot;, 1000)&#10;&#9;&#10;&#9;end&#10;&#9;end&#10;&#9;end&#10;&#9;&#10;&#10;&#10;&#10;&#9;if taskdone then&#10;&#9;traymessage($name, &quot;Congratulation! You've done task on &quot;..$name..&quot;.&quot;, 1000)&#10;&#9;taskdone = false&#10;&#9;end&#10;&#10;&#9;if $pattacker.id ~= 0 then&#10;&#9;traymessage($name,&quot;Hey! &quot;..$pattacker.name .. ' is attacking you! '..$name..' client is flashing now to find client faster.',1000)&#10;&#9;flashclient()&#10;&#9;end&#10;&#9;&#10;&#9;if antilurework then&#10;&#9;traymessage($name,&quot;Hey! Your character is going to refill because anti lure started to work.&quot;,1000)&#10;&#9;antilurework = false&#10;&#9;end&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;end" enabled="yes"/>
            <PersistentScript name="Rings" script="auto(2000)&#10;if equiplrings then&#10;if  $finger.id == 0 then&#10;equipitem(ringtype, 'finger')&#10;end&#10;end" enabled="yes"/>
            <PersistentScript name="AntiLure" script="auto(1000)&#10;if antilure and maround(10,&quot;Medusa&quot;,&quot;Serpent Spawn&quot;,&quot;Giant Spider&quot;,&quot;Hydra&quot;) &gt;= antiluremonsters and $wptsection == &quot;Hunt&quot;  then&#10;antilurework = true&#10;setsetting('Looting/Enabled', 'no')&#10;setsetting('Targeting/Creatures/Bonebeast/Setting1/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Medusa/Setting1/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Serpent Spawn/Setting1/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Hydra/Setting1/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Giant Spider/Setting1/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Bonebeast/Setting2/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Medusa/Setting2/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Serpent Spawn/Setting2/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Hydra/Setting2/OnlyIfTrapped', 'yes')&#10;setsetting('Targeting/Creatures/Giant Spider/Setting2/OnlyIfTrapped', 'yes')&#10;if $posy &lt; 32556 and $posx &gt; 32548 then&#10;gotolabel(&quot;go1&quot;,&quot;Leave&quot;)&#10;elseif $posy &lt; 32564 and $posx &lt; 32828 then&#10;gotolabel(&quot;le1&quot;,&quot;Leave&quot;)&#10;elseif $posy &lt; 32595 and $posx &lt; 32795 then&#10;gotolabel(&quot;le2&quot;,&quot;Leave&quot;)&#10;elseif $posy &lt; 32621 and $posx &lt; 32818 then&#10;gotolabel(&quot;le3&quot;,&quot;Leave&quot;)&#10;elseif $posy &lt; 32804 and $posx &lt; 32620 then&#10;gotolabel(&quot;le4&quot;,&quot;Leave&quot;)&#10;else&#10;gotolabel(&quot;start&quot;,&quot;Leave&quot;)&#10;end&#10;end" enabled="yes"/>
        </PersistentScripts>
    </Scripter>
    <HUDs>
        <HUDScripts>
            <HUDScript name="GeneralInfo" script="init start&#13;&#10;&#9;-- local SCRIPT_VERSION = '1.0.0'&#13;&#10;&#9;&#13;&#10;&#9;local fontsize = 10&#13;&#10;&#9;local fontspacing = fontsize + 6&#13;&#10;&#9;setfontstyle(&quot;MS Serif&quot;, 10, 100, 0xCCCCCC, 1, 0x555555)&#13;&#10;&#9;&#13;&#10;&#9;local displayontitle = true -- set it to false to display it as a rectangular info instead&#13;&#10;&#9;local maxsize = 220&#13;&#10;&#9;&#13;&#10;&#9;setmaskcolorxp(0)&#13;&#10;init end&#13;&#10;&#13;&#10;auto(100)&#13;&#10;local info = {&#13;&#10;&#9;{color = 0xff5577, text = 'Exp/h: ', value = num($exphour)},&#13;&#10;&#9;{color = 0x77ff77, text = 'Level up: ', value = num($exptonextlevel) .. ' / ' .. time(timetolevel())},&#13;&#10;&#9;{color = 0x44eeff, text = 'Stamina: ', value = num($stamina)},&#13;&#10;&#9;{color = 0xcccccc, text = 'Ping: ', value = num($pingaverage)},&#13;&#10;&#9;{color = 0xc6b2ea, text = 'ItemID: ', value = $cursorinfo.id},&#13;&#10;}&#13;&#10;&#13;&#10;if (displayontitle) then&#13;&#10;&#9;local x = 0&#13;&#10;&#9;for _,j in ipairs(info) do&#13;&#10;&#9;&#9;local str = j.text .. j.value&#13;&#10;&#9;&#9;local w = measurestring(str)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;setfontcolor(j.color)&#13;&#10;&#9;&#9;drawtext(str, x, 0)&#13;&#10;&#9;&#9;x = x + w + 50&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setposition($clientwin.left + 30, $clientwin.top - 21)&#13;&#10;else&#13;&#10;&#9;for i,j in ipairs(info) do&#13;&#10;&#9;&#9;local w = measurestring(j.value)&#13;&#10;&#9;&#9;local posy = (i-1)*fontspacing&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;setfontcolor(j.color)&#13;&#10;&#9;&#9;drawtext(j.text, 2, posy)&#13;&#10;&#9;&#9;drawtext(j.value, maxsize-w, posy)&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;setposition($worldwin.left+20, $worldwin.top+8)&#13;&#10;end" enabled="no" refreshRate="100"/>
            <HUDScript name="ContextMenu" script="init start&#13;&#10;&#9;-- local SCRIPT_VERSION = '2.2.0'&#13;&#10;&#13;&#10;&#9;local showProfile = true&#13;&#10;&#9;local showRelation = true&#13;&#10;&#9;local showWaypoints = true&#13;&#10;&#9;local mainWaypoints = {'Node', 'Stand', 'Action', 'Lure'}&#13;&#10;&#9;local secondaryWaypoints = {'Walk', 'Shovel', 'Rope', 'Machete', 'Ladder', 'Use'}&#13;&#10;&#9;local showSpecialAreas = true&#13;&#10;&#9;local specialAreas = {'none', 'cavebot', 'targeting', 'cavebot &amp; targeting'}&#13;&#10;&#13;&#10;&#9;-- DO NOT EDIT BELOW THIS LINE --&#13;&#10;&#13;&#10;&#9;local defFontColor        = color(223, 223, 223)&#13;&#10;&#9;local defBackColor        = color(70, 70, 70)&#13;&#10;&#9;local defHighColor        = color(128, 128, 128)&#13;&#10;&#9;local boxColor            = color(70, 70, 70)&#13;&#10;&#9;local boxLightShadowColor = color(117, 117, 117)&#13;&#10;&#9;local boxDarkShadowColor  = color(41, 41, 41)&#13;&#10;&#13;&#10;&#9;local borderSize = 4&#13;&#10;&#9;local paddingSize = 3&#13;&#10;&#13;&#10;&#9;local PROFILE_URL = &quot;http://www.tibia.com/community/?subtopic=characters&amp;name=&quot;&#13;&#10;&#13;&#10;&#9;ALIGN_LEFT   = 0&#13;&#10;&#9;ALIGN_CENTER = 1&#13;&#10;&#9;ALIGN_RIGHT  = 2&#13;&#10;&#13;&#10;&#9;MENU_SEPARATOR = '-- SEPARATOR --'&#13;&#10;&#13;&#10;&#9;local items, highlight, contextMenu, maxWidth, maxHeight, clicked&#13;&#10;&#13;&#10;&#9;do -- Register default handlers&#13;&#10;&#9;&#9;if showProfile then&#13;&#10;&#9;&#9;&#9;local function showProfileName(m)&#13;&#10;&#9;&#9;&#9;&#9;return 'Show page for ' .. m.creature.name&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local function showProfileCall(m)&#13;&#10;&#9;&#9;&#9;&#9;openbrowser(PROFILE_URL .. m.creature.name:gsub(' ', '+'))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', showProfileName, showProfileCall)&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if showRelation then&#13;&#10;&#9;&#9;&#9;local function currentRelationName(m)&#13;&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id then&#13;&#10;&#9;&#9;&#9;&#9;&#9;return m.creature.name .. ': ' .. m.creature.teamname, m.creature.teamcolor, nil, color(70, 70, 70)&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', currentRelationName, nil)&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- enemy&#13;&#10;&#9;&#9;&#9;local function setEnemyName(m)&#13;&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and not m.creature.isenemy then&#13;&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as enemy'&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local function setEnemyCall(m)&#13;&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'enemy')&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setEnemyName, setEnemyCall)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- ally&#13;&#10;&#9;&#9;&#9;local function setAllyName(m)&#13;&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and (not m.creature.isally or m.creature.isleader) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as ally'&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local function setAllyCall(m)&#13;&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'ally')&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setAllyName, setAllyCall)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- leader&#13;&#10;&#9;&#9;&#9;local function setLeaderName(m)&#13;&#10;&#9;&#9;&#9;&#9;if m.creature.id ~= $self.id and not m.creature.isleader then&#13;&#10;&#9;&#9;&#9;&#9;&#9;return 'Set ' .. m.creature.name .. ' as leader'&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local function setLeaderCall(m)&#13;&#10;&#9;&#9;&#9;&#9;setrelation(m.creature, 'leader')&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', setLeaderName, setLeaderCall)&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_player', MENU_SEPARATOR, nil)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if showWaypoints then&#13;&#10;&#9;&#9;&#9;for _, v in ipairs({mainWaypoints, secondaryWaypoints}) do&#13;&#10;&#9;&#9;&#9;&#9;for _, vv in ipairs(v) do&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- I learned this trick with JavaScript; basically, we call a anonymous&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- function that returns the function we'll actually use. The trick is&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- that we pass to this first anonymous function the type of the node&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- we want the returned function to add. This works because the inner&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- function is created in a scope where `type` has the desired value,&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- so it's value is retained for future calls.&#13;&#10;&#9;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', 'Add ' .. vv, (function(type)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;return function(m)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;addwaypoint(type, m.posx, m.posy, m.posz)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end)(vv))&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', MENU_SEPARATOR, nil)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if showSpecialAreas then&#13;&#10;&#9;&#9;&#9;for _, v in ipairs(specialAreas) do&#13;&#10;&#9;&#9;&#9;&#9;registermessagehandler('contextMenu_world', 'Add Special Area (' .. v:capitalizeall() .. ')', (function(type)&#13;&#10;&#9;&#9;&#9;&#9;&#9;return function(m)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;addspecialarea(type, m.posx, m.posy, m.posz)&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end)(v))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;registermessagehandler('contextMenu_world', MENU_SEPARATOR, nil)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local function loadCategories(...)&#13;&#10;&#9;&#9;local categories = {...}&#13;&#10;&#13;&#10;&#9;&#9;for _, v in ipairs(categories) do&#13;&#10;&#9;&#9;&#9;local cat = 'contextMenu_' .. v&#13;&#10;&#9;&#9;&#9;foreach messagehandler m cat do&#13;&#10;&#9;&#9;&#9;&#9;local text, fontColor, backColor, highColor, align&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if type(m.name) == 'function' then&#13;&#10;&#9;&#9;&#9;&#9;&#9;text, fontColor, highColor, backColor, align = m.name(contextMenu)&#13;&#10;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;text = m.name&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if text and text ~= '' then&#13;&#10;&#9;&#9;&#9;&#9;&#9;local width&#13;&#10;&#9;&#9;&#9;&#9;&#9;if text == MENU_SEPARATOR then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxHeight = maxHeight + 8&#13;&#10;&#9;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;width = (measurestring(text))&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxHeight = maxHeight + 19&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;maxWidth = math.max(maxWidth, width)&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;table.insert(items, {&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;text      = text,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;width     = width,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;callback  = m.callback,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;fontColor = fontColor or defFontColor,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;highColor = highColor or defHighColor,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;backColor = backColor or defBackColor&#13;&#10;&#9;&#9;&#9;&#9;&#9;});&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;filterinput(false, true, true, false)&#13;&#10;&#9;function inputevents(e)&#13;&#10;&#9;&#9;local eventItem, itemIndex&#13;&#10;&#9;&#9;for i, v in ipairs(items) do&#13;&#10;&#9;&#9;&#9;if v.id == e.elementid then&#13;&#10;&#9;&#9;&#9;&#9;eventItem = v&#13;&#10;&#9;&#9;&#9;&#9;itemIndex = i&#13;&#10;&#9;&#9;&#9;&#9;break&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;highlight = itemIndex&#13;&#10;&#9;&#9;if e.type == IEVENT_LMOUSEUP then&#13;&#10;&#9;&#9;&#9;if eventItem and eventItem.callback then&#13;&#10;&#9;&#9;&#9;&#9;eventItem.callback(contextMenu)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;clicked = true&#13;&#10;&#9;&#9;&#9;highlight = nil&#13;&#10;&#9;&#9;&#9;waitforevents(false)&#13;&#10;&#9;&#9;&#9;press('[ESC]')&#13;&#10;&#9;&#9;&#9;waitforevents(true)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setfontstyle('Tahoma', 7, 75, defFontColor, 1, 0x000000)&#13;&#10;&#9;setantialiasing(true)&#13;&#10;init end&#13;&#10;&#13;&#10;auto(10)&#13;&#10;&#13;&#10;contextMenu = contextmenuinfo()&#13;&#10;&#13;&#10;-- This prevents the HUD from redrawing after clicking&#13;&#10;if clicked then&#13;&#10;&#9;clicked = contextMenu ~= nil&#13;&#10;&#9;contextMenu = nil&#13;&#10;end&#13;&#10;&#13;&#10;if contextMenu == nil then&#13;&#10;&#9;highlight = nil&#13;&#10;&#9;return&#13;&#10;end&#13;&#10;&#13;&#10;items = {}&#13;&#10;maxWidth, maxHeight = 0, -4&#13;&#10;local fullWidth, fullHeight&#13;&#10;do -- Bootstrap&#13;&#10;&#13;&#10;&#9;-- Load categories&#13;&#10;&#9;if contextMenu.type == 'battle' or contextMenu.itemid == 99 then&#13;&#10;&#9;&#9;contextMenu.creature = getcreaturebyid(contextMenu.creatureid)&#13;&#10;&#13;&#10;&#9;&#9;if contextMenu.creature.isplayer then&#13;&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'Player', 'player')&#13;&#10;&#9;&#9;elseif contextMenu.creature.isnpc then&#13;&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'NPC', 'NPC')&#13;&#10;&#9;&#9;elseif contextMenu.creature.ismonster then&#13;&#10;&#9;&#9;&#9;loadCategories(contextMenu.type .. 'Monster', 'monster')&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;loadCategories(contextMenu.type .. 'Creature', 'creature')&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if contextMenu.type == 'world' then&#13;&#10;&#9;&#9;if not contextMenu.creature then&#13;&#10;&#9;&#9;&#9;loadCategories('worldItem', 'item')&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if contextMenu.posz == $posz then&#13;&#10;&#13;&#10;&#9;&#9;&#9;do&#13;&#10;&#9;&#9;&#9;&#9;local i = 0&#13;&#10;&#9;&#9;&#9;&#9;foreach settingsentry e 'Cavebot/Waypoints' do&#13;&#10;&#9;&#9;&#9;&#9;&#9;local x, y, z = get(e, 'Coordinates'):match(REGEX_COORDS)&#13;&#10;&#9;&#9;&#9;&#9;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;if z == $posz then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;local diffX, diffY = contextMenu.posx - x, contextMenu.posy - y&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &gt;= 0 and diffY &gt;= 0 then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local w, h = get(e, 'Range'):match(REGEX_RANGE)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;w, h = tonumber(w), tonumber(h)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &lt; w and diffY &lt; h then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.waypoint = e&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.waypointID = i&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;i = i + 1&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if contextMenu.waypoint then&#13;&#10;&#9;&#9;&#9;&#9;&#9;loadCategories('worldWaypoint', 'waypoint')&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;do&#13;&#10;&#9;&#9;&#9;&#9;foreach settingsentry e 'Cavebot/SpecialAreas' do&#13;&#10;&#9;&#9;&#9;&#9;&#9;local x, y, z = get(e, 'Coordinates'):match(REGEX_COORDS)&#13;&#10;&#9;&#9;&#9;&#9;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;if z == $posz then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;local diffX, diffY = contextMenu.posx - x, contextMenu.posy - y&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &gt;= 0 and diffY &gt;= 0 then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local w, h = get(e, 'Size'):match(REGEX_RANGE)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;w, h = tonumber(w), tonumber(h)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if diffX &lt; w and diffY &lt; h then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.specialArea = e&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;contextMenu.specialAreaName = get(e, 'Name')&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if contextMenu.specialArea then&#13;&#10;&#9;&#9;&#9;&#9;&#9;loadCategories('worldSpecialArea', 'specialArea')&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;elseif contextMenu.type == 'container' then&#13;&#10;&#9;&#9;loadCategories('containerItem', 'item')&#13;&#10;&#9;elseif contextMenu.type == 'equip' then&#13;&#10;&#9;&#9;loadCategories('equipItem', 'item')&#13;&#10;&#9;end&#13;&#10;&#9;loadCategories(contextMenu.type)&#13;&#10;&#13;&#10;&#9;-- We set it as true from the beginning so that it also removes the first&#13;&#10;&#9;-- item if it's a separator; we obviously don't want the first item to be a&#13;&#10;&#9;-- separator. NOTE: relies on the fact that ipairs() will traverse the&#13;&#10;&#9;-- table in ascending order, which isn't guaranteed by the reference manual&#13;&#10;&#9;-- but is the common implementation&#13;&#10;&#9;local lastSep = true&#13;&#10;&#13;&#10;&#9;-- Instead of removing the items at the for loop, we simply set it to nil&#13;&#10;&#9;-- and normalize it after; this is because if we did remove it, it would&#13;&#10;&#9;-- shift the indexes and end up fucking up posterior checks&#13;&#10;&#9;for i, v in ipairs(items) do&#13;&#10;&#9;&#9;local curSep = v.text == MENU_SEPARATOR&#13;&#10;&#9;&#9;if curSep and (lastSep or i == #items) then&#13;&#10;&#9;&#9;&#9;items[i] = nil&#13;&#10;&#9;&#9;&#9;maxHeight = maxHeight - 8&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;lastSep = curSep&#13;&#10;&#9;end&#13;&#10;&#9;table.normalize(items)&#13;&#10;&#13;&#10;&#9;-- No item to display, abort mission!&#13;&#10;&#9;if #items == 0 then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- The Tibia context menu has an extra width of 44 pixels for the longest&#13;&#10;&#9;-- item; here we account for that&#13;&#10;&#9;maxWidth = maxWidth + 44&#13;&#10;&#13;&#10;&#9;fullWidth, fullHeight = maxWidth + 2*borderSize, maxHeight + 2*borderSize&#13;&#10;&#9;setposition($clientwin.x + contextMenu.x - fullWidth - 2,$clientwin.y + contextMenu.y)&#13;&#10;end&#13;&#10;&#13;&#10;do -- Draw Container&#13;&#10;&#9;-- Draw main box&#13;&#10;&#9;setfillstyle('color', boxColor)&#13;&#10;&#9;setbordercolor(-1)&#13;&#10;&#9;drawrect(0, 0, fullWidth, fullHeight)&#13;&#10;&#13;&#10;&#9;-- Draw shadows&#13;&#10;&#9;setbordercolor(boxLightShadowColor)&#13;&#10;&#9;drawline(0, 0, fullWidth, 0)&#13;&#10;&#9;drawline(0, 0, 0, fullHeight)&#13;&#10;&#9;drawline(2, fullHeight - 2, fullWidth - borderSize, 0)&#13;&#10;&#9;drawline(fullWidth - 2, 2, 0, fullHeight - borderSize)&#13;&#10;&#13;&#10;&#9;setbordercolor(boxDarkShadowColor)&#13;&#10;&#9;drawline(2, 2, fullWidth - borderSize, 0)&#13;&#10;&#9;drawline(2, 2, 0, fullHeight - borderSize)&#13;&#10;&#9;drawline(0, fullHeight, fullWidth, 0)&#13;&#10;&#9;drawline(fullWidth, 0, 0, fullHeight)&#13;&#10;end&#13;&#10;&#13;&#10;do -- Draw items&#13;&#10;&#9;local curHeight = borderSize&#13;&#10;&#9;for i, v in ipairs(items) do&#13;&#10;&#9;&#9;-- Separators get special treatment here&#13;&#10;&#9;&#9;if v.text == MENU_SEPARATOR then&#13;&#10;&#9;&#9;&#9;setbordercolor(boxDarkShadowColor)&#13;&#10;&#9;&#9;&#9;drawline(borderSize, curHeight, maxWidth, 0)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setbordercolor(boxLightShadowColor)&#13;&#10;&#9;&#9;&#9;drawline(borderSize, curHeight + 1, maxWidth, 0)&#13;&#10;&#13;&#10;&#9;&#9;&#9;curHeight = curHeight + 8&#13;&#10;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- This is a dirty, dirrty attempt of making the code shorter; and&#13;&#10;&#9;&#9;&#9;-- that's what I love the most about programming&#13;&#10;&#9;&#9;&#9;local alignOffset = ((maxWidth - paddingSize - v.width) / 2) * (v.align or ALIGN_LEFT)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Set style&#13;&#10;&#9;&#9;&#9;setbordercolor(-1)&#13;&#10;&#9;&#9;&#9;setfontcolor(v.fontColor)&#13;&#10;&#9;&#9;&#9;setfillstyle('color', tern(i == highlight, v.highColor, v.backColor))&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Draw stuff&#13;&#10;&#9;&#9;&#9;v.id = drawrect(borderSize, curHeight, maxWidth, 15)&#13;&#10;&#9;&#9;&#9;drawtext(v.text, borderSize + paddingSize + alignOffset, curHeight + paddingSize)&#13;&#10;&#13;&#10;&#9;&#9;&#9;curHeight = curHeight + 19&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end" enabled="no" refreshRate="100"/>
            <HUDScript name="MonitorMyHunting" script="init start&#10;&#9;--&#10;&#9;--                        88                                                                  &#10;&#9;--                        &quot;&quot;                                                ,d                &#10;&#9;--                                                                          88                &#10;&#9;--             ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;&#9;--             I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;&#9;--              `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;&#9;--             aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;&#9;--   Author:   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;&#9;--   &#10;&#9;--   Monitor My Hunting!&#10;&#9;--&#10;&#9;--   Version: 1.0&#10;&#9;--   Created: 29.12.2013&#10;&#9;--   Last update: 29.12.2013&#10;&#9;--&#10;&#10;&#9;local MMH = {&#10;&#9;&#9;SHOW_ALL_ITEMS = false,&#10;&#9;&#9;SHOW_ALL_SUPPLIES = false,&#10;&#9;}&#10;&#10;&#9;-- [[ Do not change anything below this line. ]] --&#10;&#10;&#9;-- [[ COLORS ]] --&#10;&#9;MMH.COLORS = {}&#10;&#9;MMH.COLORS.FONT_COLOR = color(255, 255, 255, 0)&#10;&#9;MMH.COLORS.SECTION_HEADER_BACKGROUND = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)}&#10;&#9;MMH.COLORS.ENTRY_NAME_BACKGROUND = {0.0, color(41, 105, 100, 105), 0.76, color(37, 94, 50, 50), 0.23, color(19, 19, 19, 20)}&#10;&#9;MMH.COLORS.ENTRY_VALUE_BACKGROUND = {0.0, color(19, 19, 19, 20), 0.23, color(37, 94, 50, 50), 0.76, color(41, 105, 100, 105)}&#10;&#9;MMH.COLORS.RESULT_POSITIVE_BACKGROUND = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)}&#10;&#9;MMH.COLORS.RESULT_NEGATIVE_BACKGROUND = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)}&#10;&#9;MMH.COLORS.RESET_BUTTON_BACKGROUND = {0.0, color(100, 255, 100, 100), 0.23, color(50, 100, 255, 100), 0.76, color(100, 100, 100, 255)}&#10;&#10;&#9;-- [[ ELEMENTS ]] --&#10;&#9;MMH.ELEMENTS = {}&#10;&#9;MMH.ELEMENTS.RESET_BUTTON = -1&#10;&#9;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = -1&#10;&#9;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = -1&#10;&#10;&#9;-- [[ SECTION STATES ]] --&#10;&#9;MMH.SECTIONS = {}&#10;&#9;MMH.SECTIONS.ITEMS_LOOTED = true&#10;&#9;MMH.SECTIONS.SUPPLIES_USED = true&#10;&#10;&#9;-- [[ OTHERS ]] --&#9;&#10;&#9;filterinput(false, true, false, false)&#10;&#9;local MOVING, TEMP, MOVED = false, {0, 0}, {0, 0}&#10;&#10;&#9;function inputevents(e)&#10;&#9;&#9;if (e.type == IEVENT_LMOUSEDOWN) then&#10;&#9;&#9;&#9;if (e.elementid == MMH.ELEMENTS.RESET_BUTTON) then&#10;&#9;&#9;&#9;&#9;resetcharactertime()&#10;&#9;&#9;&#9;&#9;resetlootcounter()&#10;&#9;&#9;&#9;&#9;resetexpcounter()&#10;&#9;&#9;&#9;&#9;friendwaste = 0&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_ITEMS_LOOTED) then&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.ITEMS_LOOTED = not MMH.SECTIONS.ITEMS_LOOTED&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_SUPPLIES_USED) then&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.SUPPLIES_USED = not MMH.SECTIONS.SUPPLIES_USED&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEDOWN) then&#10;&#9;&#9;&#9;MOVING, TEMP = true, {$cursor.x - MOVED[1], $cursor.y - MOVED[2]}&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEUP) then&#10;&#9;&#9;&#9;MOVING = false&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;if (MOVING) then&#10;    auto(10)&#10;    MOVED = {$cursor.x - TEMP[1], $cursor.y - TEMP[2]}&#10;end&#10;&#10;setposition($clientwin.right - 424 + MOVED[1], $worldwin.top + MOVED[2])&#10;setfontstyle('Tahoma', 8, 75, MMH.COLORS.FONT_COLOR, 1, color(0, 0, 0, 20))&#10;&#10;local ROW_QUANTITY, STRING_WIDTH, STRING_HEIGHT = 0, measurestring('TEMP')&#10;local ITEMS_LOOTED_WORTH, ITEM_LOOTED_QUANTITY, ITEM_LOOTED_WORTH = 0, 0, 0&#10;local SUPPLIES_USED_WORTH, SUPPLY_USED_QUANTITY, SUPPLY_USED_WORTH = 0, 0, 0&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 0, 240, 20, 2, 2)&#10;drawtext('Monitor My Hunting v1.0', 6, 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.RESET_BUTTON_BACKGROUND))&#10;MMH.ELEMENTS.RESET_BUTTON = drawroundrect(196, 0, 44, 20, 2, 2)&#10;drawtext('RESET', 202, 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 23, 240, 15, 2, 2)&#10;drawtext('Looting Accuracy', 6, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;drawroundrect(130, 23, 110, 15, 2, 2)&#10;drawtext(string.format('%.2f', $lootaccuracy) .. '%', 136, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;drawroundrect(0, 41, 240, 20, 2, 2)&#10;drawtext('ITEMS LOOTED', 6, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = drawroundrect(220, 41, 20, 20, 2, 2)&#10;drawtext('X', 228, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;foreach lootingitem ItemEntry do&#10;&#9;if (MMH.SHOW_ALL_ITEMS or ItemEntry.amountlooted &gt; 0) then&#10;&#9;&#9;ITEM_LOOTED_QUANTITY = ItemEntry.amountlooted&#10;&#9;&#9;ITEM_LOOTED_WORTH = ItemEntry.sellprice * ITEM_LOOTED_QUANTITY&#10;&#10;&#9;&#9;if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#9;&#9;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 64 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(130, 64 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;&#9;&#9;drawtext(num(ITEM_LOOTED_QUANTITY) .. ' (' .. math.floor(ITEM_LOOTED_WORTH / 100) / 10 .. 'K)', 136, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;ITEMS_LOOTED_WORTH = ITEMS_LOOTED_WORTH + ITEM_LOOTED_WORTH&#10;&#9;end&#10;end&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;drawtext('Total: ' .. num(ITEMS_LOOTED_WORTH) .. ' GPs', 6, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;drawtext('SUPPLIES USED', 6, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = drawroundrect(220, 64 + ROW_QUANTITY * 18, 20, 20, 2, 2)&#10;drawtext('X', 228, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;foreach supplyitem ItemEntry do&#10;&#9;if (MMH.SHOW_ALL_SUPPLIES or ItemEntry.amountused &gt; 0) then&#10;&#9;&#9;SUPPLY_USED_QUANTITY = ItemEntry.amountused&#10;&#9;&#9;SUPPLY_USED_WORTH = ItemEntry.buyprice * SUPPLY_USED_QUANTITY&#10;&#10;&#9;&#9;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;&#9;&#9;drawtext(num(SUPPLY_USED_QUANTITY) .. ' (' .. math.floor(SUPPLY_USED_WORTH / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + SUPPLY_USED_WORTH&#10;&#9;end&#10;end&#10;&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;addgradcolors(0.0, color(90, 12, 15, 200), 0.23, color(98, 13, 17, 200), 0.76, color(52, 6, 9, 200))&#10;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#10;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;drawitem(3031, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;drawtext('Money Wasted', 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;drawtext(num($moneyspent) .. ' (' .. math.floor($moneyspent / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;end&#10;&#10;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + $moneyspent&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;drawtext('Total: ' .. num(SUPPLIES_USED_WORTH) .. ' GPs', 6, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;&#10;drawtext(((ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH and ('Profit: ')) or ('Waste: ')) .. num(ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) .. ' GPs (' .. math.abs(math.floor(((ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) * 3600) / ($charactertime / 1000) / 100) / 10) .. ' k/h)', 6, 87 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;" enabled="yes" refreshRate="100"/>
            <HUDScript name="MonitorMyStats" script="init start&#10;    --&#10;    --              88                                                                  &#10;    --              &quot;&quot;                                                ,d                &#10;    --                                                                88                &#10;    --   ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;    --   I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;    --    `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;    --   aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;    --   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;    --&#10;&#10;    --   Name: Monitor My Stats&#10;    --   Last Updated: 19/12/2013&#10;    --   Version: 1.0&#10;&#10;    local MMS = {&#10;        ShowInfo = true,&#10;&#10;        Title = &quot;Banuta Surface - RP&quot;,&#10;        Creator = &quot;Yoko&quot;,&#10;        Info = 'RP Version',&#10;        Version = '1.0.0'&#10;    }&#10;&#10;    -- [[ Do not change anything below this line. ]] --&#10;&#10;    filterinput(false, true, false, false)&#10;&#10;    local HUD_Sections = {&#10;        {Name = 'OTHERS', State = true, Items = {&#10;                {'Ping', function() return $ping .. ' (avg: ' .. $pingaverage .. ')' end},&#10;                {'Bank Balance', function() return num($balance) end},&#10;            }&#10;        },&#10;&#10;        {Name = 'CHARACTER STATS', State = true, Items = {&#10;                {'Level', function() return $level .. ' (' .. 100 - math.floor(($exp - expatlvl($level)) * 100 / (expatlvl($level + 1) - expatlvl($level))) .. '%)' end},&#10;                {'Experience', function() return num($exp) end},&#10;                {'Magic Level', function() return $mlevel .. ' (' .. 100 - $mlevelpc .. '%)' end},&#10;                {'Weapon Skill', function() local _ = WeaponSkill() return _.skill .. ' (' .. 100 - _.skillpc .. '%)' end},&#10;                {'Shielding', function() return $shielding .. ' (' .. 100 - $shieldingpc .. '%)' end},&#10;                {'Fishing', function() return $fishing .. ' (' .. 100 - $fishingpc .. '%)' end}&#10;            }&#10;        },&#10;&#10;        {Name = 'ENGINE STATES', State = true, Items = {&#10;                {'Spell Healer', function() return getsetting('SpellHealer/Enabled') end, function() return toggle('SpellHealer/Enabled') end},&#10;                {'Potion Healer', function() return getsetting('PotionHealer/Enabled') end, function() return toggle('PotionHealer/Enabled') end},&#10;                {'Condition Healer', function() return getsetting('ConditionHealer/Enabled') end, function() return toggle('ConditionHealer/Enabled') end},&#10;                {'Mana Training', function() return getsetting('ManaTrainer/Enabled') end, function() return toggle('ManaTrainer/Enabled') end},&#10;                {'Cavebot', function() return getsetting('Cavebot/Enabled') end, function() return toggle('Cavebot/Enabled') end},&#10;                {'Looting', function() return getsetting('Looting/Enabled') end, function() return toggle('Looting/Enabled') end},&#10;                {'Targeting', function() return getsetting('Targeting/Enabled') end, function() return toggle('Targeting/Enabled') end}&#10;            }&#10;        },&#10;&#10;        {Name = 'BOTTING STATS', State = true, Items = {&#10;                {'Experience per Hour', function() return num($exphour) end},&#10;                {'Experience Left', function() return num(exptolevel()) end},&#10;                {'Experience Today', function() return num($expgained) end},&#10;                {'Time to Next Level', function() return time(timetolevel()) end},&#10;                {'Played Time', function() return time(math.floor($charactertime / 1000)) end},&#10;                {'Stamina', function() return time($stamina) end}&#10;            }&#10;        }&#10;    }&#10;&#10;    local HUD_Colors = {&#10;            Font = color(255, 255, 255, 0),&#10;            SectionHeaderBackground = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)},EntryNameBackground = {0.0, color(41, 105, 100, 105), 0.76, color(37, 94, 50, 50), 0.23, color(19, 19, 19, 20)},&#10;EntryValueBackground = {0.0, color(19, 19, 19, 20), 0.23, color(37, 94, 50, 50), 0.76, color(41, 105, 100, 105)},&#10;EntryValueEnabledBackground = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)},&#10;            EntryValueDisabledBackground = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)},&#10;    }&#10;&#10;    function WeaponSkill()&#10;        local SkillTypes = {&#10;            ['axe'] = {type = 'axe', skill = $axe, skillpc = $axepc},&#10;            ['club'] = {type = 'club', skill = $club, skillpc = $clubpc},&#10;            ['sword'] = {type = 'sword', skill = $sword, skillpc = $swordpc},&#10;            ['bow'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['distance weapon'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['no weapon'] = {type = 'fist', skill = $fist, skillpc = $fistpc},&#10;            ['rod'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;            ['wand'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;        }&#10;&#10;        return SkillTypes[findweapontype()]&#10;    end&#10;&#10;    local Moving, Temp, Moved = false, {0, 0}, {0, 0}&#10;&#10;    function inputevents(e)&#10;        if (e.type == IEVENT_LMOUSEDOWN) then&#10;            for _, Section in ipairs(HUD_Sections) do&#10;                if (e.elementid == Section.StateSwitch) then&#10;                    Section.State = not Section.State&#10;                    return&#10;                end&#10;            end&#10;        for _, Section in ipairs(HUD_Sections) do&#10;                if (Section.Name == 'ENGINE STATES') then&#10;                    for _, SectionItem in ipairs(Section.Items) do&#10;                        if (e.elementid == SectionItem[4]) then&#10;                            SectionItem[3]()&#10;                            return&#10;                        end&#10;                    end&#10;                end&#10;            end&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEDOWN) then&#10;            Moving, Temp = true, {$cursor.x - Moved[1], $cursor.y - Moved[2]}&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEUP) then&#10;            Moving = false&#10;        end&#10;    end&#10;    &#10;    setmaskcolorxp(0)&#10;init end&#10;&#10;if (Moving) then&#10;    auto(10)&#10;    Moved = {$cursor.x - Temp[1], $cursor.y - Temp[2]}&#10;end&#10;&#10;setposition($clientwin.left + 5 + Moved[1], $worldwin.top + Moved[2])&#10;setfontstyle('Tahoma', 8, 75, 0xFFFFFF, 1, color(0, 0, 0, 20))&#10;&#10;local YPosition, SectionRow, SectionItemsRow = 0, 0, 0&#10;&#10;if MMS.ShowInfo then&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, 0, 240, 21, 2, 2)&#10;    drawtext(MMS.Title, 6, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 0, 110, 21, 2, 2)&#10;    drawtext(MMS.Creator, 136, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfontsize(7)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 0 * 18, 240, 15, 2, 2)&#10;    drawtext(MMS.Info, 6, 24 + 0 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 1 * 18, 240, 15, 2, 2)&#10;    drawtext('Script version:', 6, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 24 + 1 * 18, 110, 15, 2, 2)&#10;    drawtext(MMS.Version, 136, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;    &#10;    YPosition = 22 + 2 * 19&#10;end&#10;&#10;for SectionIndex, Section in ipairs(HUD_Sections) do&#10;    setfontsize(8)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 20, 2, 2)&#10;    drawtext(Section.Name, 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    if (Section.State) then&#10;        addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;    else&#10;        addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;    end&#10;    Section.StateSwitch = drawroundrect(220, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 20, 20, 2, 2)&#10;    drawtext('X', 228, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    SectionRow = SectionRow + 1&#10;&#10;    if (Section.State) then&#10;        setfontsize(7)&#10;&#10;        local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;        for SectionItemIndex, SectionItem in ipairs(Section.Items) do&#10;            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)     &#10;            addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;            drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 16, 2, 2)&#10;            drawtext(SectionItem[1], 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;&#10;            if (Section.Name == 'ENGINE STATES') then&#10;                local EngineCurrentState = SectionItem[2]()&#10;&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                if (EngineCurrentState == 'yes') then&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;                else&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;                end&#10;                HUD_Sections[SectionIndex].Items[SectionItemIndex][4] = drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;&#10;&#10;                drawtext((EngineCurrentState == 'yes' and ('On')) or ('Off'), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            else&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;                drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;                drawtext(SectionItem[2](), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            end&#10;&#10;            SectionItemsRow = SectionItemsRow + 1&#10;        end&#10;    end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="ShowSpecialAreas" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.2.1'&#10;&#10;&#9;local function deleteSpecialAreaCall(menu)&#10;&#9;&#9;removespecialarea(menu.specialAreaName)&#10;&#9;end&#10;&#10;&#9;local function moveSpecialAreaName()&#10;&#9;&#9;if resizedSP == nil then&#10;&#9;&#9;&#9;return tern(draggedSP == nil, 'Move Special Area', 'Stop Moving')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function moveSpecialAreaCall(menu)&#10;&#9;&#9;if draggedSP == nil then&#10;&#9;&#9;&#9;draggedSP = menu.specialArea&#10;&#9;&#9;else&#10;&#9;&#9;&#9;draggedSP = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeSpecialAreaName()&#10;&#9;&#9;if draggedSP == nil then&#10;&#9;&#9;&#9;return tern(resizedSP == nil, 'Resize Special Area', 'Stop Resizing')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeSpecialAreaCall(menu)&#10;&#9;&#9;if resizedSP == nil then&#10;&#9;&#9;&#9;resizedSP = menu.specialArea&#10;&#9;&#9;else&#10;&#9;&#9;&#9;resizedSP = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;registermessagehandler('contextMenu_specialArea', moveSpecialAreaName, moveSpecialAreaCall)&#10;&#9;registermessagehandler('contextMenu_specialArea', resizeSpecialAreaName, resizeSpecialAreaCall)&#10;&#9;registermessagehandler('contextMenu_specialArea', 'Delete Special Area', deleteSpecialAreaCall)&#10;&#9;registermessagehandler('contextMenu_specialArea', MENU_SEPARATOR, nil)&#10;&#10;&#9;local worldWidth, worldHeight, x, y, z, width, height, avoidance, name, policy, areaType&#10;&#9;local specialAreaRect = {}&#10;&#9;local innerRect = {}&#10;&#10;&#9;local function gettilepos(x, y, z)&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#10;&#10;&#9;&#9;if tile == nil then&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#10;&#9;&#9;&#9;&#9;xDiff = 0&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#10;&#9;&#9;&#9;&#9;yDiff = 0&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#10;&#9;&#9;&#9;-- adding this as a precaution.&#10;&#9;&#9;&#9;if tile ~= nil then&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#10;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return tile&#10;&#9;end&#10;&#10;&#9;local function getAreaRect(x, y, w, h)&#10;&#9;&#9;local ret = {x = 0, y = 0, w = 0, h = 0}&#10;&#10;&#9;&#9;local topLeftTilePos = gettilepos(x, y, $posz)&#10;&#9;&#9;local botRightTilePos = gettilepos(x + w - 1, y + h - 1, $posz)&#10;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#10;&#9;&#9;&#9;ret.x = math.max(topLeftTilePos.left, 0)&#10;&#9;&#9;&#9;ret.y = math.max(topLeftTilePos.top, 0)&#10;&#9;&#9;&#9;ret.w = math.min(botRightTilePos.right, worldWidth) - ret.x&#10;&#9;&#9;&#9;ret.h = math.min(botRightTilePos.bottom, worldHeight) - ret.y&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return ret&#10;&#9;end&#10;&#10;&#9;local function drawInnerRect(areaType, x, y, width, height)&#10;&#9;&#9;innerRect = {w = 0, h = 0}&#10;&#9;&#9;if areaType == 'Square (Border Only)' then&#10;&#9;&#9;&#9;innerRect = getAreaRect(x + 1, y + 1, width - 2, height - 2)&#10;&#9;&#9;elseif areaType == 'Square (Double Border)' then&#10;&#9;&#9;&#9;innerRect = getAreaRect(x + 2, y + 2, width - 4, height - 4)&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if innerRect.w &gt; 0 and innerRect.h &gt; 0 then&#10;&#9;&#9;&#9;setfillstyle('color', 0xFF000000)&#10;&#9;&#9;&#9;drawroundrect(innerRect.x, innerRect.y, innerRect.w, innerRect.h, 10, 10)&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;useworldhud()&#10;init end&#10;&#10;setfontstyle('Arial', 8, 75, 0xFFFFFF, 1, 0x000000)&#10;&#10;worldWidth, worldHeight = $worldwin.width - 2, $worldwin.height - 2&#10;&#10;foreach settingsentry e 'Cavebot/SpecialAreas' do&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match('.-(%d+).-(%d+).-(%d+)')&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;if z == $posz then&#10;&#9;&#9;width, height = getsetting(e, 'Size'):match('(%d+).-(%d+)')&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#10;&#10;&#9;&#9;specialAreaRect = getAreaRect(x, y, width, height)&#10;&#9;&#9;if specialAreaRect.w &gt; 0 and specialAreaRect.h &gt; 0 then&#10;&#9;&#9;&#9;avoidance = tonumber(getsetting(e, 'Avoidance'))&#10;&#9;&#9;&#9;areaType = getsetting(e, 'Type')&#10;&#9;&#9;&#9;name = getsetting(e, 'Name')&#10;&#9;&#9;&#9;policy = getsetting(e, 'Policy'):gsub('[^A-Z]', '')&#10;&#10;&#9;&#9;&#9;setfillstyle('color', color(255, 0, 0, math.round(100 - (avoidance / 4))))&#10;&#9;&#9;&#9;drawroundrect(specialAreaRect.x, specialAreaRect.y, specialAreaRect.w, specialAreaRect.h, 10, 10)&#10;&#9;&#9;&#9;drawInnerRect(areaType, x, y, width, height)&#10;&#10;&#9;&#9;&#9;if specialAreaRect.w &gt; 10 then&#10;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;string.fit(name, specialAreaRect.w - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.x + 5,&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.y + 3&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;string.fit(policy, specialAreaRect.w - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.x + 5,&#10;&#9;&#9;&#9;&#9;&#9;specialAreaRect.y + 15&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;end&#10;&#10;if contextmenuinfo() == nil then&#10;&#9;if draggedSP then&#10;&#9;&#9;set(draggedSP, 'Coordinates', string.format('x:%i, y:%i, z:%i', $cursorinfo.x, $cursorinfo.y, $cursorinfo.z))&#10;&#9;elseif resizedSP then&#10;&#9;&#9;local x, y = get(resizedSP, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;x, y = tonumber(x), tonumber(y)&#10;&#10;&#9;&#9;set(resizedSP, 'Size', string.format('%i x %i', math.max(1, 1 + ($cursorinfo.x - x)) , math.max(1, 1 + ($cursorinfo.y - y))))&#10;&#9;end&#10;end" enabled="no" refreshRate="100"/>
            <HUDScript name="ShowWaypoints" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.2.1'&#10;&#10;&#9;local waypointColors = {&#10;&#9;&#9;walk    = 0xAAF200,&#10;&#9;&#9;node    = 0x2A0736,&#10;&#9;&#9;stand   = 0x00AACC,&#10;&#9;&#9;shovel  = 0xEB8540,&#10;&#9;&#9;rope    = 0xFFCC00,&#10;&#9;&#9;machete = 0x003366,&#10;&#9;&#9;ladder  = 0xC55186,&#10;&#9;&#9;use     = 0x36693E,&#10;&#9;&#9;action  = 0x00FFFF,&#10;&#9;&#9;lure    = 0xCCCCCC&#10;&#9;}&#10;&#10;&#9;local function deleteWaypointCall(menu)&#10;&#9;&#9;removewaypoint(menu.waypointID)&#10;&#9;end&#10;&#10;&#9;local function moveWaypointName()&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;return tern(draggedWpt == nil, 'Move Waypoint', 'Stop Moving')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function moveWaypointCall(menu)&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;draggedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;draggedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointName()&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;return tern(resizedWpt == nil, 'Resize Waypoint', 'Stop Resizing')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointCall(menu)&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;resizedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;resizedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;registermessagehandler('contextMenu_waypoint', moveWaypointName, moveWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', resizeWaypointName, resizeWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', 'Delete Waypoint', deleteWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', MENU_SEPARATOR, nil)&#10;&#10;&#9;local xOffset, yOffset, worldWidth, worldHeight, x, y, z, topLeftTilePos,&#10;&#9;      botRightTilePos, width, height, text, label&#10;&#9;local waypointRect = {}&#10;&#10;&#9;function gettilepos(x, y, z)&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#10;&#10;&#9;&#9;if tile == nil then&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#10;&#9;&#9;&#9;&#9;xDiff = 0&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#10;&#9;&#9;&#9;&#9;yDiff = 0&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#10;&#9;&#9;&#9;-- adding this as a precaution.&#10;&#9;&#9;&#9;if tile ~= nil then&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#10;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return tile&#10;&#9;end&#10;&#10;&#9;useworldhud()&#10;init end&#10;&#10;setfontstyle('Tahoma', 7, 75, 0xFFFFFF, 1, 0x000000)&#10;&#10;xOffset, yOffset = $worldwin.left - $clientwin.left, $worldwin.top - $clientwin.top&#10;worldWidth, worldHeight = $worldwin.right - $worldwin.left - 2, $worldwin.bottom - $worldwin.top - 2&#10;&#10;local i = 0&#10;foreach settingsentry e 'Cavebot/Waypoints' do&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match(REGEX_SPA_COORDS)&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;if z == $posz then&#10;&#9;&#9;width, height = getsetting(e, 'Range'):match(REGEX_SPA_SIZE)&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#10;&#10;&#9;&#9;topLeftTilePos = gettilepos(x, y, z)&#10;&#9;&#9;botRightTilePos = gettilepos(x + width - 1, y + height - 1, z)&#10;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#10;&#9;&#9;&#9;waypointRect.left   = math.max(topLeftTilePos.left  , 0)&#10;&#9;&#9;&#9;waypointRect.top    = math.max(topLeftTilePos.top   , 0)&#10;&#9;&#9;&#9;waypointRect.right  = math.min(botRightTilePos.right , worldWidth)&#10;&#9;&#9;&#9;waypointRect.bottom = math.min(botRightTilePos.bottom, worldHeight)&#10;&#9;&#9;&#9;waypointRect.width  = waypointRect.right - waypointRect.left&#10;&#9;&#9;&#9;waypointRect.height = waypointRect.bottom - waypointRect.top&#10;&#10;&#9;&#9;&#9;if waypointRect.width &gt; 0 and waypointRect.height &gt; 0 then&#10;&#9;&#9;&#9;&#9;label = getsetting(e, 'Label')&#10;&#9;&#9;&#9;&#9;text = tern(#label == 0, tostring(i), label .. ' (' .. i .. ')')&#10;&#9;&#9;&#9;&#9;wptType = getsetting(e, 'Type')&#10;&#10;&#9;&#9;&#9;&#9;setfillstyle('color', (waypointColors[wptType:lower()] or 0) + (math.floor(2.55*50)*16777216))&#10;&#9;&#9;&#9;&#9;drawroundrect(&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.left,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.top,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.width,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.height,&#10;&#9;&#9;&#9;&#9;&#9;10, 10&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;&#9;if waypointRect.width &gt; 10 then&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(text, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 3&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(wptType, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 15&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;i = i + 1&#10;end&#10;&#10;if contextmenuinfo() == nil then&#10;&#9;if draggedWpt then&#10;&#9;&#9;set(draggedWpt, 'Coordinates', string.format('x:%i, y:%i, z:%i', $cursorinfo.x, $cursorinfo.y, $cursorinfo.z))&#10;&#9;elseif resizedWpt then&#10;&#9;&#9;local x, y = get(resizedWpt, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;x, y = tonumber(x), tonumber(y)&#10;&#10;&#9;&#9;set(resizedWpt, 'Range', string.format('%i x %i', math.max(1, 1 + ($cursorinfo.x - x)) , math.max(1, 1 + ($cursorinfo.y - y))))&#10;&#9;end&#10;end" enabled="no" refreshRate="100"/>
            <HUDScript name="RecentLoot" script="init start&#10;&#9;-- SCRIPT_VERSION = '1.1.1'&#10;&#9;local warnItems = {'fire sword', 'boots of haste', 'wand of inferno'} -- you can add more items here&#10;&#9;local maxMsgs = 5 -- max lines to display at once&#10;&#9;local msgTimeOut = 30000 -- will only show loots from the last 30 seconds&#10;&#10;&#9;local position = 'left' -- right or left&#10;&#9;local rareLootColor = 0xCE7C4E&#10;&#9;local lootColor = 0x2DA357&#10;&#10;&#9;-- dont edit anything below this line&#10;&#9;local fontsize = 7&#10;&#9;local fontspacing = fontsize + 6&#10;&#9;local isRight = (position == 'right')&#10;&#9;local msgs = {}&#10;&#10;&#9;setfontstyle(&quot;Tahoma&quot;, fontsize, 75, lootColor, 1, 0x002200)&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;foreach newmessage m do&#10;&#9;if m.level == 0 and m.content:sub(0,8) == 'Loot of ' then&#10;&#9;&#9;local msgInfo = m.content:lootmsg()&#10;&#9;&#9;local color = lootColor&#10;&#9;&#9;local hasItems = false&#10;&#10;&#9;&#9;local msg = msgInfo.name .. ': '&#10;&#10;&#9;&#9;local lastIndex = #msgInfo.items&#10;&#9;&#9;for index, item in ipairs(msgInfo.items) do&#10;&#9;&#9;&#9;hasItems = true&#10;&#10;&#9;&#9;&#9;if (item.count &gt; 1) then&#10;&#9;&#9;&#9;&#9;msg = msg .. item.count .. ' '&#10;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;msg = msg .. item.name&#10;&#9;&#9;&#9;if index ~= lastIndex then&#10;&#9;&#9;&#9;&#9;msg = msg .. ', '&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;if table.find(warnItems, item.name) then&#10;&#9;&#9;&#9;&#9;color = rareLootColor&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (hasItems) then&#10;&#9;&#9;&#9;local msgWidth = measurestring(msg)&#10;&#9;&#9;&#9;table.insert(msgs, {['msg'] = msg, ['color'] = color, ['time'] = $timems, ['width'] = msgWidth})&#10;&#9;&#9;end&#10;&#9;end&#10;end&#10;&#10;local msgsLen = #msgs&#10;local longestLine = 0&#10;if isRight then&#10;&#9;for index = msgsLen, math.max(msgsLen - maxMsgs + 1, 1), -1 do&#10;&#9;&#9;if msgs[index].width &gt; longestLine then longestLine = msgs[index].width end&#10;&#9;end&#10;end&#10;&#10;local i = 1&#10;while (i &lt;= msgsLen) do&#10;&#9;if $timems - msgs[i].time &lt;= msgTimeOut and i &gt; msgsLen - maxMsgs then&#10;&#9;&#9;setfontcolor(msgs[i].color)&#10;&#9;&#9;addtext(msgs[i].msg, tern(isRight, longestLine - msgs[i].width + 2, 2), i*fontspacing)&#10;&#10;&#9;&#9;i = i + 1&#10;&#9;else&#10;&#9;&#9;table.remove(msgs, i)&#10;&#9;end&#10;&#10;&#9;msgsLen = #msgs&#10;end&#10;&#10;if not isRight then&#10;&#9;setposition($worldwin.left + 3, $worldwin.bottom - i*fontspacing)&#10;else&#10;&#9;setposition($worldwin.right - 3 - longestLine, $worldwin.bottom - i*fontspacing)&#10;end&#10;&#10;if msgsLen == 0 then -- to clear HUD when resetting script&#10;&#9;addtext('', 0, 0)&#10;end" enabled="no" refreshRate="100"/>
            <HUDScript name="Tasking" script="setfontsize(14) &#10;drawoutfit(220, $clientwin.right-850,$clientwin.bottom-80, 90,2,-1)&#10;&#10;drawtext(&quot;Killed:&quot;,$clientwin.right-798,$clientwin.bottom-80)&#10;drawtext(&quot;Tasks Done:&quot;,$clientwin.right-800,$clientwin.bottom-60)&#10;if $chardb:getvalue('killedserpentspawns',&quot;amount&quot;) == 0 then&#10;drawtext(&quot;0&quot;,$clientwin.right-800,$clientwin.bottom-60)&#10;else&#10;drawtext($chardb:getvalue('killedserpentspawns',&quot;amount&quot;)-1,$clientwin.right-745,$clientwin.bottom-80)&#10;end&#10;drawtext(&quot;/ 800&quot;,$clientwin.right-710,$clientwin.bottom-80)&#10;&#10;&#10;drawoutfit(121, $clientwin.right-660,$clientwin.bottom-80, 90,2,-1)&#10;drawtext(&quot;Killed:&quot;,$clientwin.right-608,$clientwin.bottom-80)&#10;drawtext(&quot;Tasks Done:&quot;,$clientwin.right-608,$clientwin.bottom-60)&#10;if $chardb:getvalue('killedhydras',&quot;amount&quot;) == 0 then&#10;drawtext(&quot;0&quot;,$clientwin.right-555,$clientwin.bottom-80)&#10;else&#10;drawtext($chardb:getvalue('killedhydras',&quot;amount&quot;)-1,$clientwin.right-555,$clientwin.bottom-80)&#10;end&#10;drawtext(&quot;/ 650&quot;,$clientwin.right-520,$clientwin.bottom-80)&#10;&#10;drawoutfit(330, $clientwin.right-470,$clientwin.bottom-80, 90,2,-1)&#10;drawtext(&quot;Killed:&quot;,$clientwin.right-418,$clientwin.bottom-80)&#10;drawtext(&quot;Tasks Done:&quot;,$clientwin.right-418,$clientwin.bottom-60)&#10;if $chardb:getvalue('killedmedusas',&quot;amount&quot;) == 0 then&#10;drawtext(&quot;0&quot;,$clientwin.right-365,$clientwin.bottom-80)&#10;else&#10;drawtext($chardb:getvalue('killedmedusas',&quot;amount&quot;)-1,$clientwin.right-365,$clientwin.bottom-80)&#10;end&#10;drawtext(&quot;/ 500&quot;,$clientwin.right-330,$clientwin.bottom-80)&#10;&#10;&#10;setfontsize(7)&#10;&#10;drawtext(&quot;(on this character)&quot;,$clientwin.right-798,$clientwin.bottom-40)&#10;drawtext(&quot;(on this character)&quot;,$clientwin.right-608,$clientwin.bottom-40)&#10;drawtext(&quot;(on this character)&quot;,$clientwin.right-418,$clientwin.bottom-40)" enabled="yes" refreshRate="100"/>
        </HUDScripts>
    </HUDs>
    <GeneralSettings>
        <Input>
            <MouseOption mouseMode="Simulate Mouse"/>
            <MouseOption scrollMode="Use mouse wheel"/>
            <MouseOption stuckCursorPolicy="If Cavebot on, Release Instantly"/>
            <MouseOption moveSpeed="Instantaneous"/>
            <MouseOption clickWaitMin="10" clickWaitMax="10"/>
            <KeyboardOption keyboardMode="Simulate Keyboard"/>
            <KeyboardOption stuckCtrlShiftPolicy="If Cavebot on, Release Instantly"/>
            <KeyboardOption typeWaitMin="40" typeWaitMax="40"/>
            <KeyboardOption pressWaitMin="30" pressWaitMax="30"/>
            <FocusOption focusPolicy="Don't auto-focus"/>
            <FocusOption openMenuPolicy="Confirm if cavebotting"/>
        </Input>
    </GeneralSettings>
    <Alerts disableSounds="no">
        <alert name="Player On Screen" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Player Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Monster Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Private Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Default Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="GM Detected" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Disconnected" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Character Stuck" playSound="no" pauseBot="no" logout="no" standTime="30000"/>
        <alert name="Health Below" playSound="no" pauseBot="no" logout="no" healthPercent="50"/>
        <alert name="Mana Below" playSound="no" pauseBot="no" logout="no" manaPercent="50"/>
        <alert name="Unjust Kill" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Enemies Online" playSound="no" pauseBot="no" logout="no" enemiesCount="50"/>
    </Alerts>
    <Cavebot enabled="no">
        <Options>
            <Option shovel="9596"/>
            <Option rope="9596"/>
            <Option machete="3308"/>
            <Option pick="3456"/>
            <Option nodeRange="4"/>
            <Option pauseBotOnDeath="yes"/>
            <Option refillAmmo="no" refillAmmoMin="30" refillAmmoMax="70"/>
            <Option autoMount="yes"/>
            <Option fireAvoidanceMin="0" fireAvoidanceMax="0"/>
            <Option energyAvoidanceMin="0" energyAvoidanceMax="0"/>
            <Option poisonAvoidanceMin="0" poisonAvoidanceMax="0"/>
            <Option walkThroughPlayers="yes"/>
            <Option walkMethod="Walk With Arrow Keys"/>
            <Option walkableItems="7, 140, 404, 831, 832, 833, 834, 883, 1020, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2131, 2132, 2133, 2134, 2135, 2314, 2315, 2316, 2319, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2431, 2432, 2433, 2434, 2441, 2442, 2443, 2444, 2469, 2471, 2472, 2473, 2478, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2519, 2523, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2981, 2982, 2983, 2984, 2985, 2987, 2988, 3503, 3504, 3514, 3807, 5086, 5087, 5088, 6114, 6115, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6371, 6372, 7864, 8455, 8763, 9061, 9062, 10209, 10216, 10286, 10287, 10288, 11009, 11010, 11011, 11800, 11801, 11802, 11803, 11804, 11805, 11806, 11807, 11808, 11809, 11810, 17972"/>
            <Option mapWalkDistMin="20" mapWalkDistMax="30"/>
            <Option userOptionsScript="    {&#10;    &quot;type&quot;: &quot;scriptinfo&quot;,&#10;    &quot;name&quot;: &quot;RP - Banuta by Yoko&quot;,&#10;    &quot;version&quot;: &quot;1.0.0&quot;&#10;    },&#10;&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;text&quot; : &quot;Reminder&quot;,&#10;    &quot;name&quot; : &quot;Reminder&quot;,&#10;    &quot;children&quot; : [&#10;&#10;&#9;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;name&quot; : &quot;&lt;-- Remember to change shovel! This message will exipire when bot see correct rope and shovel inside backpack.&quot;,&#10;&quot;text&quot; : &quot;&lt;-- Remember to change shovel! This message will exipire when bot see correct rope and shovel inside backpack.&quot;&#10;}&#10;    ]&#10;    },&#10;{&#10;&#10;&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Character Backpacks Setup&quot;,&#10;    &quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;mainbp&quot;,&#10;&quot;text&quot; : &quot;Main BP&quot;,&#10;&quot;description&quot; : &quot;Backpack on character's back&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;suppbp&quot;,&#10;&quot;text&quot; : &quot;Supplies BP&quot;,&#10;&quot;description&quot; : &quot;Backpack with supplies inside main backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;lootbp&quot;,&#10;&quot;text&quot; : &quot;Loot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for loot inside main backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;goldbp&quot;,&#10;&quot;text&quot; : &quot;Gold BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for gold inside main backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;extrabp&quot;,&#10;&quot;text&quot; : &quot;Extra BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for extra things inside main backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                }&#10;    ]&#10;    },&#10;&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Depot Backpacks Setup&quot;,&#10;&#9;&quot;column&quot; : 2,&#10;    &quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;maindpbp&quot;,&#10;&quot;text&quot; : &quot;Main Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack inside depot chest&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;stackdpbp&quot;,&#10;&quot;text&quot; : &quot;Stackable Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for stackable items inside main depot backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                },&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;raredpbp&quot;,&#10;&quot;text&quot; : &quot;Rare Depot BP&quot;,&#10;&quot;description&quot; : &quot;Backpack for rare items inside main depot backpack&quot;,&#10; &quot;items&quot; : [&quot;Anniversary Backpack[[item: Anniversary Backpack]]&quot;,&quot;Brown Backpack[[item: Brown Backpack]]&quot;,&quot;Backpack of Holding[[item: Backpack of Holding]]&quot;,&quot;Beach Backpack[[item: Beach Backpack]]&quot;,&quot;Blue Backpack[[item: Blue Backpack]]&quot;,&quot;Brocade Backpack[[item: Brocade Backpack]]&quot;,&quot;Buggy Backpack[[item: Buggy Backpack]]&quot;,&quot;Cake Backpack[[item: Cake Backpack]]&quot;, &quot;Camouflage Backpack[[item: Camouflage Backpack]]&quot;,&quot;Crown Backpack[[item: Crown Backpack]]&quot;,&quot;Crystal Backpack[[item: Crystal backpack]]&quot;,&quot;Deepling Backpack[[item: Deepling Backpack]]&quot;,&quot;Demon Backpack[[item: Demon Backpack]]&quot;,&quot;Dragon Backpack[[item: Dragon Backpack]]&quot;,&quot;Expedition Backpack[[item: Expedition Backpack]]&quot;,&quot;Feedbag[[item: Feedbag]]&quot;,&quot;Fur Backpack[[item: Fur Backpack]]&quot;,&quot;Glooth Backpack[[item: Glooth Backpack]]&quot;,&quot;Golden Backpack[[item: Golden Backpack]]&quot;,&quot;Green Backpack[[item: Green Backpack]]&quot;,&quot;Grey Backpack[[item: Grey Backpack]]&quot;,&quot;Heart Backpack[[item: Heart Backpack]]&quot;,&quot;Jewelled Backpack[[item: Jewelled Backpack]]&quot;,&quot;Minotaur Backpack[[item: Minotaur Backpack]]&quot;,&quot;Moon Backpack[[item: Moon Backpack]]&quot;,&quot;Mushroom Backpack[[item: Mushroom Backpack]]&quot;,&quot;Orange Backpack[[item: Orange Backpack]]&quot;,&quot;Pannier Backpack[[item: Pannier Backpack]]&quot;,&quot;Pirate Backpack[[item: Pirate Backpack]]&quot;,&quot;Purple Backpack[[item: Purple Backpack]]&quot;,&quot;Red Backpack[[item: Red Backpack]]&quot;,&quot;Santa Backpack[[item: Santa Backpack]]&quot;,&quot;Shopping Bag[[item: Shopping Bag]]&quot;,&quot;Yellow Backpack[[item: Yellow Backpack]]&quot;,&quot;Zaoan Chess Box[[item: Zaoan Chess Box]]&quot;]&#10;                }&#10;    ]&#10;    },&#10;    {&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Potions Setup&quot;,&#10;&#9;&quot;column&quot;:2,&#10;    &quot;children&quot; : [&#10;    {&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;maxsmp&quot;,&#10;    &quot;text&quot; : &quot;Max Strong Mana potion&quot;,&#10;    &quot;description&quot; : &quot;Amount of strong mana potions to buy&quot;,&#10;    &quot;suffix&quot; : &quot; SMP&quot;,&#10;    &quot;min&quot; : 100,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 700&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;minsmp&quot;,&#10;    &quot;text&quot; : &quot;Min Strong Mana potion&quot;,&#10;    &quot;description&quot; : &quot;Amount of strong mana potions to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; MP&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 100&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;maxgsp&quot;,&#10;    &quot;text&quot; : &quot;Max Great Spirit Potions&quot;,&#10;    &quot;description&quot; : &quot;Amount of great spirit potions to buy&quot;,&#10;    &quot;suffix&quot; : &quot; GSP&quot;,&#10;    &quot;min&quot; : 10,&#10;    &quot;max&quot; : 100,&#10;    &quot;value&quot; : 100&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;mingsp&quot;,&#10;    &quot;text&quot; : &quot;Min Great Spirit Potions&quot;,&#10;    &quot;description&quot; : &quot;Amount of great spirit potions to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; GSP&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 30&#10;    },&#10;&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;ammotype&quot;,&#10;&quot;text&quot; : &quot;Ammo type&quot;,&#10;&quot;description&quot; : &quot;Ammunition type to use&quot;,&#10;&quot;items&quot; : [&quot;Prismatic Bolt[[item: Prismatic Bolt]]&quot;,&quot;Crystalline Arrow[[item: Crystalline Arrow]]&quot;]&#10;                },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;maxammo&quot;,&#10;    &quot;text&quot; : &quot;Max Ammo&quot;,&#10;    &quot;description&quot; : &quot;Amount of ammo to buy&quot;,&#10;    &quot;suffix&quot; : &quot; Ammo&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 900&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;minammo&quot;,&#10;    &quot;text&quot; : &quot;Min Ammo&quot;,&#10;    &quot;description&quot; : &quot;Amount of ammo to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; Ammo&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 130&#10;    },&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;mincap&quot;,&#10;    &quot;text&quot; : &quot;Min Cap&quot;,&#10;    &quot;description&quot; : &quot;Amount of cap to leave spawn&quot;,&#10;    &quot;suffix&quot; : &quot; Cap&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 2000,&#10;    &quot;value&quot; : 130&#10;    }&#10;    ]&#10;    },&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Task Options&quot;,&#10;&#9;&quot;column&quot; : 2,&#10;    &quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;group&quot;,&#10;&quot;name&quot; : &quot;Medusa Task&quot;, &#10;&quot;checkable&quot; : true,&#10;&quot;children&quot; : [&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;medusaskilled&quot;,&#10;    &quot;text&quot; : &quot;Killed&quot;,&#10;    &quot;description&quot; : &quot;Amount of killed medusas&quot;,&#10;    &quot;suffix&quot; : &quot; Medusas&quot;,&#10;    &quot;min&quot; : 0,&#10;    &quot;max&quot; : 500,&#10;    &quot;value&quot; : 0&#10;    },&#10;&#10;{&#10;&quot;type&quot; : &quot;button&quot;,&#9;&#10;&quot;text&quot; : &quot;Update Killed Medusa Count In Character Database&quot;,&#10;&quot;name&quot; : &quot;Update Killed Medusa Count In Character Database&quot;&#10;}&#10;&#10;&#10;&#10;&#10;]&#10;},&#10;{&#10;&quot;type&quot; : &quot;group&quot;,&#10;&quot;name&quot; : &quot;Serpent Spawn Task&quot;, &#10;&quot;checkable&quot; : true,&#10;&quot;children&quot; : [&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;serpenspawnskilled&quot;,&#10;    &quot;text&quot; : &quot;Killed &quot;,&#10;    &quot;description&quot; : &quot;Amount of killed serpent spawns&quot;,&#10;    &quot;suffix&quot; : &quot; Serpent Spawns&quot;,&#10;    &quot;min&quot; : 0,&#10;    &quot;max&quot; : 800,&#10;    &quot;value&quot; : 0&#10;    },&#10;&#10;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;text&quot; : &quot;Update Killed Serpent Spawn Count In Character Database&quot;,&#10;&quot;name&quot; : &quot;Update Killed Serpent Spawn Count In Character Database&quot;&#10;}&#10;&#10;&#10;&#10;&#10;]&#10;},&#10;{&#10;&quot;type&quot; : &quot;group&quot;,&#10;&quot;name&quot; : &quot;Hydra Task&quot;, &#10;&quot;checkable&quot; : true,&#10;&quot;children&quot; : [&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;hydraskilled&quot;,&#10;    &quot;text&quot; : &quot;Killed&quot;,&#10;    &quot;description&quot; : &quot;Amount of killed hydras&quot;,&#10;    &quot;suffix&quot; : &quot; Hydras&quot;,&#10;    &quot;min&quot; : 0,&#10;    &quot;max&quot; : 650,&#10;    &quot;value&quot; : 0&#10;    },&#10;&#10;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;name&quot; : &quot;Update Killed Hydra Count In Character Database&quot;,&#10;&quot;text&quot; : &quot;Update Killed Hydra Count In Character Database&quot;&#10;}&#10;&#10;&#10;&#10;&#10;]&#10;}&#10;&#10;]&#10;},&#10;&#10;&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Extra Options&quot;,&#9;&#10;&#9;&quot;column&quot; : 1,&#10;    &quot;children&quot; : [&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;traveltobanuta&quot;,&#10;&quot;text&quot; : &quot;Travel from 'Lorek' to Banuta&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will traveltobanuta&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;pvpe&quot;,&#10;&quot;text&quot; : &quot;Server PvPe&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will consider players with&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;lootgold&quot;,&#10;&quot;text&quot; : &quot;Loot Gold&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will loot gold&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;traymessages&quot;,&#10;&quot;text&quot; : &quot;Tray Messages&quot;,&#10;&quot;description&quot; : &quot;When windbot is minimized to tray (next to clock) then you will be notified about advance in level / skill, task done, someone on spawn, someone attack you, character death&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;&#10;&#10;&#10;&#10;&#10;{&#10;&#9;&quot;type&quot; : &quot;group&quot;,&#10;&quot;name&quot; : &quot;Equip looted Rings&quot;,&#10;&quot;checkable&quot; : true,&#10;&quot;children&quot; : [&#10;&#10;{&#10;&quot;type&quot; : &quot;combobox&quot;,&#10;&quot;name&quot; : &quot;ringtype&quot;,&#10;&quot;text&quot; : &quot;Ring type&quot;,&#10;&quot;description&quot; : &quot;Ammunition type to use&quot;,&#10;&quot;items&quot; : [&quot;Life Ring[[item: Life Ring]]&quot;,&quot;Ring Of Healing[[item: Ring Of Healing]]&quot;]&#10;                }&#10;]&#10;},&#10;&#10;{&#10;&#9;&quot;type&quot; : &quot;group&quot;,&#10;&quot;name&quot; : &quot;Enable Anti Lure&quot;,&#10;&quot;checkable&quot; : true,&#10;&quot;children&quot; : [&#10;&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;antiluremonsters&quot;,&#10;    &quot;text&quot; : &quot;Amount of monsters to run out of spawn&quot;,&#10;    &quot;description&quot; : &quot;Character is going to refill when this amount of monsters will be on screen&quot;,&#10;    &quot;suffix&quot; : &quot; Monsters&quot;,&#10;    &quot;min&quot; : 2,&#10;    &quot;max&quot; : 10,&#10;    &quot;value&quot; : 5&#10;    }&#10;]&#10;},&#10;&#10;&#10;&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;usealertonspawn&quot;,&#10;&quot;text&quot; : &quot;Player On Spawn Alert&quot;,&#10;&quot;description&quot; : &quot;If Checked, bot will alert you if someone enter spawn&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;useutanavid&quot;,&#10;&quot;text&quot; : &quot;Cast 'Utana Vid' at way to hunt&quot;,&#10;&quot;description&quot; : &quot;If Checked, bot will use invisibility at the way to spawn&quot;,&#10;&quot;value&quot; : false&#9;&#10;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;keephaste&quot;,&#10;&quot;text&quot; : &quot;Keep Haste&quot;,&#10;&quot;description&quot; : &quot;If you enable this checkbox then character will use utani hur if he have not speed up&quot;,&#10;&quot;value&quot; : true&#9;&#10;&#10;},&#10;&#10;{&#10;    &quot;type&quot; : &quot;group&quot;,&#10;    &quot;name&quot; : &quot;Sell Jewerly&quot;,&#9;&#10;&#9;&quot;column&quot; : 1,&#9;&#10;&#9;&quot;checkable&quot; : true,&#10;    &quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;name&quot; : &quot;Enable checkbox to see jewerly list&quot;,&#10;&quot;text&quot; : &quot;Enable checkbox to see jewerly list&quot;,&#10;&quot;description&quot; : &quot;If You select this checkbox then u will see list of items to sell&quot;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellsmallemeralds&quot;,&#10;&quot;text&quot; : &quot;Sell Small Emeralds&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted small emeralds after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;},&#10;{&#10;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellsmallsapphires&quot;,&#10;&quot;text&quot; : &quot;Sell Small Sapphires&quot;,&#10;&quot;description&quot; : &quot;If Checked, you will sell looted small sapphires after hunt&quot;,&#10;&quot;value&quot; : true&#9;&#10;}&#10;    ]&#10;    },&#10;{&#10;&quot;type&quot; : &quot;group&quot;,&#10;&quot;name&quot; : &quot;Sell Items On Market&quot;, &#10;&quot;column&quot; : 1, &#10;&quot;checkable&quot; : true,&#10;&quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;button&quot;,&#10;&quot;name&quot; : &quot;Enable checkbox to see market items list&quot;,&#10;&quot;text&quot; : &quot;Enable checkbox to see market items list&quot;,&#10;&quot;description&quot; : &quot;If You select this checkbox then u will see list of items to sell&quot;&#10;},&#10;{&#10;    &quot;type&quot; : &quot;spinbox&quot;,&#10;    &quot;name&quot; : &quot;roundstosell&quot;,&#10;    &quot;text&quot; : &quot;Refills to sell items on market (put 1 to sell every refill)&quot;,&#10;    &quot;description&quot; : &quot;Amount of Refills done to sell items on market put here 1 if you want to sell items on market every refill&quot;,&#10;    &quot;suffix&quot; : &quot; Refills&quot;,&#10;    &quot;min&quot; : 1,&#10;    &quot;max&quot; : 10,&#10;    &quot;value&quot; : 2&#10;    },&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;createnewoffer&quot;,&#10;&quot;text&quot; : &quot;Create new offers in market&quot;,&#10;&quot;description&quot; : &quot;Character will create new offer in market if he couldnt sell items for their price&quot;,&#10;&quot;value&quot; : false&#10;},&#10;&#9;{&#10;&quot;type&quot; : &quot;separator&quot;&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellspellbookofmindcontrol&quot;,&#10;&quot;text&quot; : &quot;sell Spellbook Of Mind Control&quot;,&#10;&quot;description&quot; : &quot;sell of Spellbook Of Mind Control to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellultimatehealthpotion&quot;,&#10;&quot;text&quot; : &quot;sell Ultimate Health Potion&quot;,&#10;&quot;description&quot; : &quot;sell of Ultimate Health Potion to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellstrandofmedusahair&quot;,&#10;&quot;text&quot; : &quot;sell Strand Of Medusa Hair&quot;,&#10;&quot;description&quot; : &quot;sell of Strand Of Medusa Hair to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellstronghealthpotion&quot;,&#10;&quot;text&quot; : &quot;sell Strong Health Potion&quot;,&#10;&quot;description&quot; : &quot;sell of Strong Health Potion to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;selllightningheadband&quot;,&#10;&quot;text&quot; : &quot;sell Lightning Headband&quot;,&#10;&quot;description&quot; : &quot;sell of Lightning Headband to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellsacredtreeamulet&quot;,&#10;&quot;text&quot; : &quot;sell Sacred Tree Amulet&quot;,&#10;&quot;description&quot; : &quot;sell of Sacred Tree Amulet to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgreatmanapotion&quot;,&#10;&quot;text&quot; : &quot;sell Great Mana Potion&quot;,&#10;&quot;description&quot; : &quot;sell of Great Mana Potion to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellbonebeasttrophy&quot;,&#10;&quot;text&quot; : &quot;sell Bonebeast Trophy&quot;,&#10;&quot;description&quot; : &quot;sell of Bonebeast Trophy to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellstoneskinamulet&quot;,&#10;&quot;text&quot; : &quot;sell Stone Skin Amulet&quot;,&#10;&quot;description&quot; : &quot;sell of Stone Skin Amulet to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellmercenarysword&quot;,&#10;&quot;text&quot; : &quot;sell Mercenary Sword&quot;,&#10;&quot;description&quot; : &quot;sell of Mercenary Sword to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellplatinumamulet&quot;,&#10;&quot;text&quot; : &quot;sell Platinum Amulet&quot;,&#10;&quot;description&quot; : &quot;sell of Platinum Amulet to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgreenmushroom&quot;,&#10;&quot;text&quot; : &quot;sell Green Mushroom&quot;,&#10;&quot;description&quot; : &quot;sell of Green Mushroom to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellcharmerstiara&quot;,&#10;&quot;text&quot; : &quot;sell Charmer's Tiara&quot;,&#10;&quot;description&quot; : &quot;sell of Charmer's Tiara to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellwarriorhelmet&quot;,&#10;&quot;text&quot; : &quot;sell Warrior Helmet&quot;,&#10;&quot;description&quot; : &quot;sell of Warrior Helmet to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellstrangehelmet&quot;,&#10;&quot;text&quot; : &quot;sell Strange Helmet&quot;,&#10;&quot;description&quot; : &quot;sell of Strange Helmet to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellringofhealing&quot;,&#10;&quot;text&quot; : &quot;sell Ring Of Healing&quot;,&#10;&quot;description&quot; : &quot;sell of Ring Of Healing to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellhardenedbone&quot;,&#10;&quot;text&quot; : &quot;sell Hardened Bone&quot;,&#10;&quot;description&quot; : &quot;sell of Hardened Bone to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;selloldparchment&quot;,&#10;&quot;text&quot; : &quot;sell Old Parchment&quot;,&#10;&quot;description&quot; : &quot;sell of Old Parchment to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellbootsofhaste&quot;,&#10;&quot;text&quot; : &quot;sell Boots Of Haste&quot;,&#10;&quot;description&quot; : &quot;sell of Boots Of Haste to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellmedusashield&quot;,&#10;&quot;text&quot; : &quot;sell Medusa Shield&quot;,&#10;&quot;description&quot; : &quot;sell of Medusa Shield to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellcrownarmor&quot;,&#10;&quot;text&quot; : &quot;sell Crown Armor&quot;,&#10;&quot;description&quot; : &quot;sell of Crown Armor to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellterraamulet&quot;,&#10;&quot;text&quot; : &quot;sell Terra Amulet&quot;,&#10;&quot;description&quot; : &quot;sell of Terra Amulet to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellterramantle&quot;,&#10;&quot;text&quot; : &quot;sell Terra Mantle&quot;,&#10;&quot;description&quot; : &quot;sell of Terra Mantle to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellknightarmor&quot;,&#10;&quot;text&quot; : &quot;sell Knight Armor&quot;,&#10;&quot;description&quot; : &quot;sell of Knight Armor to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellroyalhelmet&quot;,&#10;&quot;text&quot; : &quot;sell Royal Helmet&quot;,&#10;&quot;description&quot; : &quot;sell of Royal Helmet to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellgoldenmug&quot;,&#10;&quot;text&quot; : &quot;sell Golden Mug&quot;,&#10;&quot;description&quot; : &quot;sell of Golden Mug to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;selllifecrystal&quot;,&#10;&quot;text&quot; : &quot;sell Life Crystal&quot;,&#10;&quot;description&quot; : &quot;sell of Life Crystal to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellenergyring&quot;,&#10;&quot;text&quot; : &quot;sell Energy Ring&quot;,&#10;&quot;description&quot; : &quot;sell of Energy Ring to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellknightlegs&quot;,&#10;&quot;text&quot; : &quot;sell Knight Legs&quot;,&#10;&quot;description&quot; : &quot;sell of Knight Legs to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellwingedtail&quot;,&#10;&quot;text&quot; : &quot;sell Winged Tail&quot;,&#10;&quot;description&quot; : &quot;sell of Winged Tail to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellhydrahead&quot;,&#10;&quot;text&quot; : &quot;sell Hydra Head&quot;,&#10;&quot;description&quot; : &quot;sell of Hydra Head to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellterralegs&quot;,&#10;&quot;text&quot; : &quot;sell Terra Legs&quot;,&#10;&quot;description&quot; : &quot;sell of Terra Legs to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellspidersilk&quot;,&#10;&quot;text&quot; : &quot;sell Spider Silk&quot;,&#10;&quot;description&quot; : &quot;sell of Spider Silk to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellhydraegg&quot;,&#10;&quot;text&quot; : &quot;sell Hydra Egg&quot;,&#10;&quot;description&quot; : &quot;sell of Hydra Egg to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellsnakeskin&quot;,&#10;&quot;text&quot; : &quot;sell Snake Skin&quot;,&#10;&quot;description&quot; : &quot;sell of Snake Skin to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellnobleaxe&quot;,&#10;&quot;text&quot; : &quot;sell Noble Axe&quot;,&#10;&quot;description&quot; : &quot;sell of Noble Axe to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;selltitanaxe&quot;,&#10;&quot;text&quot; : &quot;sell Titan Axe&quot;,&#10;&quot;description&quot; : &quot;sell of Titan Axe to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;selltimering&quot;,&#10;&quot;text&quot; : &quot;sell Time Ring&quot;,&#10;&quot;description&quot; : &quot;sell of Time Ring to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;sellbonytail&quot;,&#10;&quot;text&quot; : &quot;sell Bony Tail&quot;,&#10;&quot;description&quot; : &quot;sell of Bony Tail to sell on market&quot;,&#10;&quot;value&quot; : true&#10;},&#10;{&#10;&quot;type&quot; : &quot;checkbox&quot;,&#10;&quot;name&quot; : &quot;selllifering&quot;,&#10;&quot;text&quot; : &quot;sell Life Ring&quot;,&#10;&quot;description&quot; : &quot;sell of Life Ring to sell on market&quot;,&#10;&quot;value&quot; : true&#10;}&#10;&#10;&#10;&#10;]&#10;}&#10;&#10;]&#10;},&#10;{&#10;&quot;type&quot; : &quot;group&quot;,&#10;&quot;name&quot; : &quot;Market Prices&quot;, &#10;&quot;column&quot; : 2,&#10;&quot;children&quot; : [&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricespellbookofmindcontrol&quot;,&#10;&quot;text&quot; : &quot;Price Spellbook Of Mind Control&quot;,&#10;&quot;description&quot; : &quot;Price of Spellbook Of Mind Control to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 12700&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceultimatehealthpotion&quot;,&#10;&quot;text&quot; : &quot;Price Ultimate Health Potion&quot;,&#10;&quot;description&quot; : &quot;Price of Ultimate Health Potion to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 290&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricestrandofmedusahair&quot;,&#10;&quot;text&quot; : &quot;Price Strand Of Medusa Hair&quot;,&#10;&quot;description&quot; : &quot;Price of Strand Of Medusa Hair to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 500&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricestronghealthpotion&quot;,&#10;&quot;text&quot; : &quot;Price Strong Health Potion&quot;,&#10;&quot;description&quot; : &quot;Price of Strong Health Potion to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 50&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;prices lightningheadband&quot;,&#10;&quot;text&quot; : &quot;Price Lightning Headband&quot;,&#10;&quot;description&quot; : &quot;Price of Lightning Headband to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 2300&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricesacredtreeamulet&quot;,&#10;&quot;text&quot; : &quot;Price Sacred Tree Amulet&quot;,&#10;&quot;description&quot; : &quot;Price of Sacred Tree Amulet to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 2800&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricegreatmanapotion&quot;,&#10;&quot;text&quot; : &quot;Price BGreat Mana Potion&quot;,&#10;&quot;description&quot; : &quot;Price of Great Mana Potion to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 100&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricebonebeasttrophy&quot;,&#10;&quot;text&quot; : &quot;Price Bonebeast Trophy&quot;,&#10;&quot;description&quot; : &quot;Price of Bonebeast Trophy to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 5800&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricestoneskinamulet&quot;,&#10;&quot;text&quot; : &quot;Price Stone Skin Amulet&quot;,&#10;&quot;description&quot; : &quot;Price of Stone Skin Amulet to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 500&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricemercenarysword&quot;,&#10;&quot;text&quot; : &quot;Price Mercenary Sword&quot;,&#10;&quot;description&quot; : &quot;Price of Mercenary Sword to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 11800&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceplatinumamulet&quot;,&#10;&quot;text&quot; : &quot;Price Platinum Amulet&quot;,&#10;&quot;description&quot; : &quot;Price of Platinum Amulet to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 2300&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricegreenmushroom&quot;,&#10;&quot;text&quot; : &quot;Price Green Mushroom&quot;,&#10;&quot;description&quot; : &quot;Price of Green Mushroom to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 70&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricecharmerstiara&quot;,&#10;&quot;text&quot; : &quot;Price Charmer's Tiara&quot;,&#10;&quot;description&quot; : &quot;Price of Charmer's Tiara to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 700&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricewarriorhelmet&quot;,&#10;&quot;text&quot; : &quot;Price Warrior Helmet&quot;,&#10;&quot;description&quot; : &quot;Price of Warrior Helmet to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 4800&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricestrangehelmet&quot;,&#10;&quot;text&quot; : &quot;Price Strange Helmet&quot;,&#10;&quot;description&quot; : &quot;Price of Strange Helmet to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 300&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceringofhealing&quot;,&#10;&quot;text&quot; : &quot;Price Ring Of Healing&quot;,&#10;&quot;description&quot; : &quot;Price of Ring Of Healing to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 500&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricehardenedbone&quot;,&#10;&quot;text&quot; : &quot;Price Hardened Bone&quot;,&#10;&quot;description&quot; : &quot;Price of Hardened Bone to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 700&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceoldparchment&quot;,&#10;&quot;text&quot; : &quot;Price Old Parchment&quot;,&#10;&quot;description&quot; : &quot;Price of Old Parchment to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 300&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricebootsofhaste&quot;,&#10;&quot;text&quot; : &quot;Price Boots Of Haste&quot;,&#10;&quot;description&quot; : &quot;Price of Boots Of Haste to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 29800&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricemedusashield&quot;,&#10;&quot;text&quot; : &quot;Price Medusa Shield&quot;,&#10;&quot;description&quot; : &quot;Price of Medusa Shield to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 8800&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricecrownarmor&quot;,&#10;&quot;text&quot; : &quot;Price Crown Armor&quot;,&#10;&quot;description&quot; : &quot;Price of Crown Armor to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 11800&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceterraamulet&quot;,&#10;&quot;text&quot; : &quot;Price Terra Amulet&quot;,&#10;&quot;description&quot; : &quot;Price of Terra Amulet to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 1300&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceterramantle&quot;,&#10;&quot;text&quot; : &quot;Price Terra Mantle&quot;,&#10;&quot;description&quot; : &quot;Price of Terra Mantle to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 10800&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceknightarmor&quot;,&#10;&quot;text&quot; : &quot;Price Knight Armor&quot;,&#10;&quot;description&quot; : &quot;Price of Knight Armor to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 4800&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceroyalhelmet&quot;,&#10;&quot;text&quot; : &quot;Price Royal Helmet&quot;,&#10;&quot;description&quot; : &quot;Price of Royal Helmet to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 29800&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricegoldenmug&quot;,&#10;&quot;text&quot; : &quot;Price Golden Mug&quot;,&#10;&quot;description&quot; : &quot;Price of Golden Mug to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 100&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricelifecrystal&quot;,&#10;&quot;text&quot; : &quot;Price Life Crystal&quot;,&#10;&quot;description&quot; : &quot;Price of Life Crystal to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 50&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceenergyring&quot;,&#10;&quot;text&quot; : &quot;Price Energy Ring&quot;,&#10;&quot;description&quot; : &quot;Price of Energy Ring to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 100&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceknightlegs&quot;,&#10;&quot;text&quot; : &quot;Price Knight Legs&quot;,&#10;&quot;description&quot; : &quot;Price of Knight Legs to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 4900&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricewingedtail&quot;,&#10;&quot;text&quot; : &quot;Price Winged Tail&quot;,&#10;&quot;description&quot; : &quot;Price of Winged Tail to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 700&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricehydrahead&quot;,&#10;&quot;text&quot; : &quot;Price Hydra Head&quot;,&#10;&quot;description&quot; : &quot;Price of Hydra Head to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 500&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;priceterralegs&quot;,&#10;&quot;text&quot; : &quot;Price Terra Legs&quot;,&#10;&quot;description&quot; : &quot;Price of Terra Legs to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 10800&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricespidersilk&quot;,&#10;&quot;text&quot; : &quot;Price Spider Silk&quot;,&#10;&quot;description&quot; : &quot;Price of Spider Silk to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 5000&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricehydraegg&quot;,&#10;&quot;text&quot; : &quot;Price Hydra Egg&quot;,&#10;&quot;description&quot; : &quot;Price of Hydra Egg to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 400&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricesnakeskin&quot;,&#10;&quot;text&quot; : &quot;Price Snake Skin&quot;,&#10;&quot;description&quot; : &quot;Price of Snake Skin to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 300&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricenobleaxe&quot;,&#10;&quot;text&quot; : &quot;Price Noble Axe&quot;,&#10;&quot;description&quot; : &quot;Price of Noble Axe to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 9900&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricetitanaxe&quot;,&#10;&quot;text&quot; : &quot;Price Titan Axe&quot;,&#10;&quot;description&quot; : &quot;Price of Titan Axe to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 3900&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricetimering&quot;,&#10;&quot;text&quot; : &quot;Price Time Ring&quot;,&#10;&quot;description&quot; : &quot;Price of Time Ring to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 1000&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricebonytail&quot;,&#10;&quot;text&quot; : &quot;Price Bony Tail&quot;,&#10;&quot;description&quot; : &quot;Price of Bony Tail to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 180&#10;},&#10;{&#10;&quot;type&quot; : &quot;spinbox&quot;,&#10;&quot;name&quot; : &quot;pricelifering&quot;,&#10;&quot;text&quot; : &quot;Price Life Ring&quot;,&#10;&quot;description&quot; : &quot;Price of Life Ring to sell on market&quot;,&#10;&quot;min&quot; : 1,&#10;&quot;max&quot; : 900000,&#10;&quot;value&quot; : 500&#10;}&#10;&#10;]&#10;}&#10;&#10;"/>
        </Options>
        <SpecialAreas>
            <Area name="YokoPozioma1" x="32870" y="32623" z="11" type="Square (Filled)" width="7" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPionowa1" x="32866" y="32618" z="11" type="Square (Filled)" width="1" height="5" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoWDol2" x="32879" y="32604" z="11" type="Square (Filled)" width="5" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoS" x="32875" y="32622" z="11" type="Square (Filled)" width="1" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Cavebot &amp; Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPionowa2" x="32872" y="32586" z="11" type="Square (Filled)" width="1" height="9" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoWDol1" x="32876" y="32582" z="11" type="Square (Filled)" width="11" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma4" x="32879" y="32578" z="11" type="Square (Filled)" width="5" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPionowa3" x="32869" y="32557" z="11" type="Square (Filled)" width="1" height="5" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma5" x="32876" y="32598" z="11" type="Square (Filled)" width="11" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPionowa4" x="32854" y="32557" z="11" type="Square (Filled)" width="1" height="5" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma6" x="32841" y="32572" z="11" type="Square (Filled)" width="4" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoWPrawo1" x="32815" y="32512" z="11" type="Square (Filled)" width="1" height="6" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoS1" x="32792" y="32521" z="11" type="Square (Filled)" width="16" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Cavebot &amp; Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPionowa5" x="32803" y="32506" z="11" type="Square (Filled)" width="1" height="15" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPionowa6" x="32794" y="32506" z="11" type="Square (Filled)" width="1" height="15" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoWPrawo3" x="32768" y="32502" z="11" type="Square (Filled)" width="1" height="7" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma7" x="32790" y="32518" z="11" type="Square (Filled)" width="4" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma8" x="32790" y="32510" z="11" type="Square (Filled)" width="4" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma9" x="32757" y="32516" z="11" type="Square (Filled)" width="7" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma10" x="32749" y="32537" z="11" type="Square (Filled)" width="5" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoWGore1" x="32742" y="32545" z="11" type="Square (Filled)" width="19" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma11" x="32742" y="32554" z="11" type="Square (Filled)" width="19" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma12" x="32749" y="32569" z="11" type="Square (Filled)" width="5" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPionowa7" x="32767" y="32588" z="11" type="Square (Filled)" width="1" height="6" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoWGore2" x="32772" y="32598" z="11" type="Square (Filled)" width="6" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPionowa8" x="32797" y="32618" z="11" type="Square (Filled)" width="1" height="5" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPionowa9" x="32819" y="32618" z="11" type="Square (Filled)" width="1" height="5" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma13" x="32827" y="32617" z="11" type="Square (Filled)" width="7" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma14" x="32827" y="32623" z="11" type="Square (Filled)" width="7" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoWLewo1" x="32834" y="32618" z="11" type="Square (Filled)" width="1" height="5" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma15" x="32840" y="32604" z="11" type="Square (Filled)" width="6" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPionowa10" x="32846" y="32605" z="11" type="Square (Filled)" width="1" height="6" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPionowa11" x="32840" y="32605" z="11" type="Square (Filled)" width="1" height="6" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma16" x="32841" y="32617" z="11" type="Square (Filled)" width="5" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoS2" x="32841" y="32611" z="11" type="Square (Filled)" width="1" height="5" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoS3" x="32845" y="32611" z="11" type="Square (Filled)" width="1" height="5" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma17" x="32841" y="32623" z="11" type="Square (Filled)" width="5" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma18" x="32853" y="32617" z="11" type="Square (Filled)" width="7" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma2" x="32853" y="32623" z="11" type="Square (Filled)" width="7" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoWPrawo2" x="32853" y="32618" z="11" type="Square (Filled)" width="1" height="5" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoS4" x="32887" y="32631" z="11" type="Square (Filled)" width="2" height="2" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoS5" x="32882" y="32632" z="11" type="Square (Filled)" width="3" height="3" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPionowa12" x="32843" y="32618" z="11" type="Square (Filled)" width="1" height="5" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoS6" x="32838" y="32634" z="11" type="Square (Filled)" width="11" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPionowa13" x="32840" y="32630" z="11" type="Square (Filled)" width="1" height="4" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPionowa15" x="32808" y="32614" z="11" type="Square (Filled)" width="1" height="17" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoS7" x="32802" y="32610" z="11" type="Square (Filled)" width="13" height="4" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Cavebot &amp; Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPozioma3" x="32841" y="32549" z="11" type="Square (Filled)" width="6" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="None" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoPionowa14" x="32780" y="32511" z="11" type="Square (Filled)" width="1" height="7" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoS8" x="32742" y="32542" z="11" type="Square (Filled)" width="3" height="3" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Cavebot &amp; Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="YokoS9" x="32758" y="32542" z="11" type="Square (Filled)" width="3" height="3" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Cavebot &amp; Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
        </SpecialAreas>
        <CavebotScripts/>
        <WaypointSection name="Refill">
            <Waypoint type="Stand" x="32631" y="32742" z="7" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Action" x="32630" y="32751" z="7" rangeX="1" rangeY="1" script="if taskingmedusas or taskingserpentspawns or taskinghydras then&#10;&#10;&#10;&#10;if taskingserpentspawns then&#10;if $chardb:getvalue('killedserpentspawns',&quot;amount&quot;) == 0 or&#10;$chardb:getvalue('killedserpentspawns',&quot;amount&quot;) &gt; serpentspawnstask then&#10;gotolabel(&quot;gotaketasks&quot;)&#10;end&#10;end&#10;&#10;&#10;if taskingmedusas then&#10;if $chardb:getvalue('killedmedusas',&quot;amount&quot;) == 0 or&#10;$chardb:getvalue('killedmedusas',&quot;amount&quot;) &gt; medusastask then&#10;gotolabel(&quot;gotaketasks&quot;)&#10;end&#10;end&#10;&#10;if taskinghydras then&#10;if $chardb:getvalue('killedhydras',&quot;amount&quot;) == 0 or&#10;$chardb:getvalue('killedhydras',&quot;amount&quot;) &gt; hydrastask then&#10;gotolabel(&quot;gotaketasks&quot;)&#10;end&#10;end&#10;&#10;&#10;&#10;&#10;end&#10;"/>
            <Waypoint type="Action" x="32631" y="32742" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;start&quot;)&#10;end"/>
            <Waypoint type="Action" x="32631" y="32742" z="7" rangeX="1" rangeY="1" script="--depot&#10;setsetting('Looting/Enabled', 'no')&#10;depot()&#10;deathshowed = false"/>
            <Waypoint type="Stand" x="32631" y="32742" z="7" rangeX="1" rangeY="1" label="gotobank"/>
            <Waypoint type="Action" x="32631" y="32747" z="7" rangeX="1" rangeY="1" script="if taskingmedusas or taskingserpentspawns or taskinghydras then&#10;if $chardb:getvalue('killedserpentspawns',&quot;amount&quot;) == 0 or&#10;$chardb:getvalue('killedserpentspawns',&quot;amount&quot;) &gt; serpentspawnstask or&#10;$chardb:getvalue('killedmedusas',&quot;amount&quot;) == 0 or&#10;$chardb:getvalue('killedmedusas',&quot;amount&quot;) &gt; medusastask or&#10;$chardb:getvalue('killedhydras',&quot;amount&quot;) == 0 or&#10;$chardb:getvalue('killedhydras',&quot;amount&quot;) &gt; hydrastask then&#10;gotolabel(&quot;gotaketasks&quot;)&#10;end&#10;end&#10;"/>
            <Waypoint type="Stand" x="32631" y="32748" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32629" y="32742" z="6" rangeX="1" rangeY="1" script="if $stamina &lt; 15*60 then&#10;gotolabel(&quot;start&quot;,&quot;GoTrainers&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32629" y="32749" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32632" y="32740" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32632" y="32740" z="6" rangeX="1" rangeY="1" script="--bank&#10;if not islocation() then&#10;gotolabel(&quot;gotobank&quot;)&#10;else&#10;bpsforbank()&#10;withdrawmoney()&#10;end"/>
            <Waypoint type="Stand" x="32630" y="32742" z="6" rangeX="1" rangeY="1" label="gotomshop"/>
            <Waypoint type="Ladder" x="32630" y="32742" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32624" y="32741" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32624" y="32741" z="5" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;gotomshop&quot;)&#10;else&#10;suppshop()&#10;end"/>
            <Waypoint type="Stand" x="32625" y="32741" z="5" rangeX="1" rangeY="1" label="gotoammoshop"/>
            <Waypoint type="Stand" x="32626" y="32742" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32632" y="32745" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32632" y="32745" z="6" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;gotoammoshop&quot;)&#10;else&#10;ammoshop()&#10;end"/>
            <Waypoint type="Stand" x="32629" y="32747" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32629" y="32747" z="6" rangeX="1" rangeY="1" script="bpsforhunt()&#10;setsetting('Looting/Enabled', 'yes')"/>
            <Waypoint type="Stand" x="32629" y="32749" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32629" y="32750" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32629" y="32750" z="7" rangeX="1" rangeY="1" script="if itemcount(ammotype)+10 &lt; maxammo or itemcount(&quot;strong mana potion&quot;)+10 &lt; maxsmp or itemcount(&quot;great spirit potion&quot;)+10 &lt; maxgsp then&#10;gotolabel(&quot;start&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32629" y="32750" z="7" rangeX="1" rangeY="1" label="runtohunt"/>
            <Waypoint type="Action" x="32629" y="32750" z="7" rangeX="1" rangeY="1" script="if traveltobanuta then&#10;gotolabel(&quot;useship&quot;)&#10;else&#10;gotolabel(&quot;walktohunt&quot;)&#10;if useutanavid then&#10;cast(&quot;utana vid&quot;)&#10;end&#10;end"/>
            <Waypoint type="Stand" x="32629" y="32750" z="7" rangeX="1" rangeY="1" label="useship"/>
            <Waypoint type="Stand" x="32629" y="32762" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32629" y="32770" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32629" y="32770" z="7" rangeX="1" rangeY="1" script="npc = &quot;Old Adall&quot;&#10;dest = &quot;east&quot;&#10;&#10;&#10;if not islocation(1) then&#10;gotolabel(&quot;useship&quot;)&#10;else&#10;if getcreature(npc).dist &gt; 3 then&#10;reachcreature(npc)&#10;wait(1000)&#10;end&#10;if ischannel('NPCs') then&#10;npcsay('hi')&#10;waitping()&#10;else&#10;say('hi')&#10;wait(2000,3000)&#10;end&#10;npcsay(dest)&#10;wait(100)&#10;npcsay(&quot;yes&quot;)&#10;wait(1000)&#10;end"/>
            <Waypoint type="Stand" x="32679" y="32777" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32679" y="32777" z="7" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;useship&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32679" y="32777" z="7" rangeX="1" rangeY="1" label="sailtobanuta"/>
            <Waypoint type="Action" x="32679" y="32777" z="7" rangeX="1" rangeY="1" script="npc = &quot;Lorek&quot;&#10;dest = &quot;banuta&quot;&#10;&#10;&#10;&#10;if getcreature(npc).dist &gt; 3 then&#10;reachcreature(npc)&#10;wait(1000)&#10;end&#10;if ischannel('NPCs') then&#10;npcsay('hi')&#10;waitping()&#10;else&#10;say('hi')&#10;wait(2000,3000)&#10;end&#10;npcsay(dest)&#10;wait(100)&#10;npcsay(&quot;yes&quot;)&#10;wait(500)&#10;"/>
            <Waypoint type="Stand" x="32825" y="32631" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32825" y="32631" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;sailtobanuta&quot;)&#10;else&#10;gotolabel(&quot;aftership&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32631" y="32750" z="7" rangeX="1" rangeY="1" label="walktohunt"/>
            <Waypoint type="Stand" x="32640" y="32729" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32685" y="32717" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32705" y="32694" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32733" y="32666" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32769" y="32657" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32813" y="32644" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32824" y="32631" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32824" y="32631" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;walktohunt&quot;)&#10;else&#10;gotolabel(&quot;aftership&quot;)&#10;&#10;&#10;end"/>
            <Waypoint type="Stand" x="32824" y="32631" z="7" rangeX="1" rangeY="1" label="aftership"/>
            <Waypoint type="Action" x="32844" y="32625" z="7" rangeX="1" rangeY="1" script="if useutanavid then&#10;cast(&quot;utana vid&quot;)&#10;end"/>
            <Waypoint type="Node" x="32821" y="32611" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32844" y="32611" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32847" y="32640" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32848" y="32660" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32852" y="32669" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32852" y="32669" z="7" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;gotolabel(&quot;aftership&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32852" y="32669" z="7" rangeX="1" rangeY="1" label="enterdeep"/>
            <Waypoint type="Shovel" x="32853" y="32669" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32858" y="32667" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32855" y="32666" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Shovel" x="32854" y="32666" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32854" y="32666" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32865" y="32662" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32886" y="32662" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32891" y="32647" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32891" y="32645" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32892" y="32633" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32892" y="32633" z="11" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;gotolabel(&quot;enterdeep&quot;)&#10;else&#10;bpsforhunt()&#10;setsetting('Looting/OpenNextBP', 'yes')&#10;end"/>
            <Waypoint type="Stand" x="32891" y="32632" z="11" rangeX="1" rangeY="1" label="jump"/>
            <Waypoint type="Stand" x="32890" y="32632" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32885" y="32631" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32885" y="32631" z="11" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;gotolabel(&quot;jump&quot;)&#10;else&#10;setsetting('Looting/Enabled', 'yes')&#10;setsetting('Targeting/Creatures/Bonebeast/Setting1/OnlyIfTrapped', 'no')&#10;setsetting('Targeting/Creatures/Medusa/Setting1/OnlyIfTrapped', 'no')&#10;setsetting('Targeting/Creatures/Serpent Spawn/Setting1/OnlyIfTrapped', 'no')&#10;setsetting('Targeting/Creatures/Hydra/Setting1/OnlyIfTrapped', 'no')&#10;setsetting('Targeting/Creatures/Giant Spider/Setting1/OnlyIfTrapped', 'no')&#10;setsetting('Targeting/Creatures/Bonebeast/Setting2/OnlyIfTrapped', 'no')&#10;setsetting('Targeting/Creatures/Medusa/Setting2/OnlyIfTrapped', 'no')&#10;setsetting('Targeting/Creatures/Serpent Spawn/Setting2/OnlyIfTrapped', 'no')&#10;setsetting('Targeting/Creatures/Hydra/Setting2/OnlyIfTrapped', 'no')&#10;setsetting('Targeting/Creatures/Giant Spider/Setting2/OnlyIfTrapped', 'no')&#10;gotolabel(&quot;start&quot;,&quot;Hunt&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32630" y="32751" z="7" rangeX="1" rangeY="1" label="gotaketasks"/>
            <Waypoint type="Action" x="32630" y="32751" z="7" rangeX="1" rangeY="1" script="closewindows()&#10;wait(2000)&#10;while windowcount() &lt; 1 do&#10;closewindows()&#10;wait(500,1200)&#10;openitem(mainbp, &quot;back&quot;, true)&#10;wait(500,1200)&#10;end&#10;if gold() &lt; 20 then&#10;else&#10;gotolabel(&quot;skipbank&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32629" y="32749" z="7" rangeX="1" rangeY="1" label="takemoney"/>
            <Waypoint type="Stand" x="32632" y="32739" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32632" y="32739" z="6" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;gotolabel(&quot;takemoney&quot;)&#10;end"/>
            <Waypoint type="Action" x="32629" y="32748" z="6" rangeX="1" rangeY="1" script="npc = &quot;Ferks&quot;&#10;&#10;&#10;if not islocation(1) then&#10;gotolabel(&quot;useship&quot;)&#10;else&#10;if getcreature(npc).dist &gt; 3 then&#10;reachcreature(npc)&#10;wait(1000)&#10;end&#10;if ischannel('NPCs') then&#10;npcsay('hi')&#10;waitping()&#10;else&#10;say('hi')&#10;wait(2000,3000)&#10;end&#10;npcsay(&quot;withdraw 20&quot;)&#10;wait(100)&#10;npcsay(&quot;yes&quot;)&#10;wait(500)&#10;end"/>
            <Waypoint type="Stand" x="32629" y="32746" z="6" rangeX="1" rangeY="1" label="aftertakemoney"/>
            <Waypoint type="Stand" x="32629" y="32749" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32629" y="32754" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32629" y="32754" z="7" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;gotolabel(&quot;aftertakemoney&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32629" y="32754" z="7" rangeX="1" rangeY="1" label="skipbank"/>
            <Waypoint type="Stand" x="32629" y="32769" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32629" y="32769" z="7" rangeX="1" rangeY="1" script="npc = &quot;Old Adall&quot;&#10;dest = &quot;east&quot;&#10;&#10;&#10;if not islocation(1) then&#10;gotolabel(&quot;useship&quot;)&#10;else&#10;if getcreature(npc).dist &gt; 3 then&#10;reachcreature(npc)&#10;wait(1000)&#10;end&#10;if ischannel('NPCs') then&#10;npcsay('hi')&#10;waitping()&#10;else&#10;say('hi')&#10;wait(2000,3000)&#10;end&#10;npcsay(dest)&#10;wait(100)&#10;npcsay(&quot;yes&quot;)&#10;wait(500)&#10;end"/>
            <Waypoint type="Stand" x="32692" y="32777" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32692" y="32777" z="7" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;gotolabel(&quot;skipbank&quot;)&#10;else&#10;gotolabel(&quot;tasks&quot;,&quot;Leave&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Hunt">
            <Waypoint type="Stand" x="32871" y="32620" z="11" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Stand" x="32882" y="32590" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32876" y="32563" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32856" y="32559" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32842" y="32543" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32855" y="32559" z="11" rangeX="1" rangeY="1" script="wait(2000)"/>
            <Waypoint type="Stand" x="32775" y="32510" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32751" y="32539" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32752" y="32558" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32752" y="32582" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32765" y="32591" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32795" y="32620" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32822" y="32620" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32854" y="32620" z="11" rangeX="1" rangeY="1"/>
        </WaypointSection>
        <WaypointSection name="Leave">
            <Waypoint type="Stand" x="32752" y="32564" z="11" rangeX="1" rangeY="1" label="le1"/>
            <Waypoint type="Stand" x="32774" y="32595" z="11" rangeX="1" rangeY="1" label="le2"/>
            <Waypoint type="Stand" x="32804" y="32621" z="11" rangeX="1" rangeY="1" label="le3"/>
            <Waypoint type="Stand" x="32844" y="32620" z="11" rangeX="1" rangeY="1" label="le4"/>
            <Waypoint type="Action" x="32880" y="32632" z="11" rangeX="1" rangeY="1" script="gotolabel(&quot;start&quot;)"/>
            <Waypoint type="Stand" x="32848" y="32556" z="11" rangeX="1" rangeY="1" label="go1"/>
            <Waypoint type="Stand" x="32881" y="32590" z="11" rangeX="1" rangeY="1" label="go2"/>
            <Waypoint type="Stand" x="32880" y="32628" z="11" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Stand" x="32888" y="32632" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32891" y="32645" z="11" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32877" y="32661" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32854" y="32666" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="32854" y="32666" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32857" y="32667" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="32857" y="32668" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32854" y="32669" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32854" y="32669" z="8" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;start&quot;)&#10;end&#10;&#10;if useutanavid then&#10;cast(&quot;utana vid&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32854" y="32669" z="8" rangeX="1" rangeY="1" label="gotocity"/>
            <Waypoint type="Rope" x="32853" y="32669" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32833" y="32692" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32826" y="32725" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32825" y="32732" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32823" y="32742" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32813" y="32751" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32726" y="32768" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32694" y="32776" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32694" y="32776" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32694" y="32776" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;gotocity&quot;)&#10;end"/>
            <Waypoint type="Action" x="32694" y="32776" z="7" rangeX="1" rangeY="1" script="if taketasks then&#10;gotolabel(&quot;tasks&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32694" y="32776" z="7" rangeX="1" rangeY="1" label="tasks"/>
            <Waypoint type="Stand" x="32694" y="32772" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32694" y="32768" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32694" y="32768" z="6" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;tasks&quot;)&#10;end"/>
            <Waypoint type="Action" x="32694" y="32768" z="6" rangeX="1" rangeY="1" script="npc = &quot;Grizzly Adams&quot;&#10;&#10;if getcreature(npc).dist &gt; 3 then&#10;reachcreature(npc)&#10;wait(1000)&#10;end&#10;if ischannel('NPCs') then&#10;npcsay('hi')&#10;waitping()&#10;else&#10;say('hi')&#10;wait(2000,3000)&#10;end&#10;&#10;foreach message m do&#10;if m.type == 6 then&#10;&#9;if string.find((m.content), &quot;Ask me for a promotion&quot;) then&#10;&#9;npcsay(&quot;promotion&quot;)&#10;&#9;end&#10;&#9;end&#10;end&#10;if $chardb:getvalue(&quot;killedserpentspawns&quot;,&quot;tasksdone&quot;) == NULL then&#10;$chardb:setvalue(&quot;killedserpentspawns&quot;,&quot;tasksdone&quot;,0)&#10;end&#10;&#10;if $chardb:getvalue(&quot;killedhydras&quot;,&quot;tasksdone&quot;) == NULL then&#10;$chardb:setvalue(&quot;killedhydras&quot;,&quot;tasksdone&quot;,0)&#10;end&#10;&#10;if $chardb:getvalue(&quot;killedmedusas&quot;,&quot;tasksdone&quot;) == NULL then&#10;$chardb:setvalue(&quot;killedmedusas&quot;,&quot;tasksdone&quot;,0)&#10;end&#10;&#10;&#10;-----------------------------meduzy&#10;if taskingmedusas then&#10;if $chardb:getvalue('killedmedusas',&quot;amount&quot;) &gt; medusastask then&#10;npcsay(&quot;task&quot;)&#10;&#10;$chardb:setvalue(&quot;killedmedusas&quot;,&quot;tasksdone&quot;,$chardb:getvalue(&quot;killedmedusas&quot;,&quot;tasksdone&quot;)+1)&#10;&#10;$chardb:setvalue('killedmedusas',&quot;amount&quot;,0)&#10;waitping()&#10;taskdone = true&#10;&#10;end&#10;end&#10;-----------------------------serpenty&#10;if taskingserpentspawns then&#10;if $chardb:getvalue('killedserpentspawns',&quot;amount&quot;) &gt; serpentspawnstask then&#10;npcsay(&quot;task&quot;)&#10;&#10;$chardb:setvalue(&quot;killedserpentspawns&quot;,&quot;tasksdone&quot;,$chardb:getvalue(&quot;killedserpentspawns&quot;,&quot;tasksdone&quot;)+1)&#10;&#10;$chardb:setvalue('killedserpentspawns',&quot;amount&quot;,0)&#10;waitping()&#10;taskdone = true&#10;end&#10;end&#10;&#10;-----------------------------hydry&#10;if taskinghydras then&#10;if $chardb:getvalue('killedhydras',&quot;amount&quot;) &gt; hydrastask then&#10;npcsay(&quot;task&quot;)&#10;&#10;$chardb:setvalue(&quot;killedhydras&quot;,&quot;tasksdone&quot;,$chardb:getvalue(&quot;killedhydras&quot;,&quot;tasksdone&quot;)+1)&#10;&#10;$chardb:setvalue('killedhydras',&quot;amount&quot;,0)&#10;waitping()&#10;taskdone = true&#10;end&#10;end&#10;&#10;&#10;if taskingmedusas then&#10;if $chardb:getvalue('killedmedusas',&quot;amount&quot;) == 0 then&#10;npcsay(&quot;task&quot;)&#10;waitping()&#10;npcsay(&quot;medusa&quot;)&#10;waitping()&#10;npcsay(&quot;yes&quot;)&#10;waitping()&#9;&#10;$chardb:setvalue('killedmedusas',&quot;amount&quot;,1)&#10;end&#10;end&#10;&#10;if taskinghydras then&#10;if $chardb:getvalue('killedhydras',&quot;amount&quot;) == 0 then&#10;npcsay(&quot;task&quot;)&#10;waitping()&#10;npcsay(&quot;hydra&quot;)&#10;waitping()&#10;npcsay(&quot;yes&quot;)&#10;waitping()&#9;&#10;$chardb:setvalue('killedhydras',&quot;amount&quot;,1)&#10;end&#10;end&#10;&#10;if taskingserpentspawns then&#10;if $chardb:getvalue('killedserpentspawns',&quot;amount&quot;) == 0 then&#10;npcsay(&quot;task&quot;)&#10;waitping()&#10;npcsay(&quot;serpent spawn&quot;)&#10;waitping()&#10;npcsay(&quot;yes&quot;)&#10;waitping()&#9;&#10;$chardb:setvalue('killedserpentspawns',&quot;amount&quot;,1)&#10;end&#10;end&#10;"/>
            <Waypoint type="Stand" x="32694" y="32769" z="6" rangeX="1" rangeY="1" label="backdown"/>
            <Waypoint type="Stand" x="32694" y="32772" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32694" y="32775" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32694" y="32775" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;backdown&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32679" y="32776" z="7" rangeX="1" rangeY="1" label="notask"/>
            <Waypoint type="Action" x="32679" y="32776" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;notask&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32679" y="32776" z="7" rangeX="1" rangeY="1" label="traveltocenter"/>
            <Waypoint type="Action" x="32679" y="32776" z="7" rangeX="1" rangeY="1" script="npc = &quot;Lorek&quot;&#10;dest = &quot;center&quot;&#10;&#10;&#10;if not islocation(1) then&#10;gotolabel(&quot;useship&quot;)&#10;else&#10;if getcreature(npc).dist &gt; 3 then&#10;reachcreature(npc)&#10;wait(1000)&#10;end&#10;if ischannel('NPCs') then&#10;npcsay('hi')&#10;waitping()&#10;else&#10;say('hi')&#10;wait(2000,3000)&#10;end&#10;npcsay(dest)&#10;wait(100)&#10;npcsay(&quot;yes&quot;)&#10;wait(500)&#10;end"/>
            <Waypoint type="Node" x="32628" y="32764" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32629" y="32751" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32629" y="32751" z="7" rangeX="1" rangeY="1" script="if selljewerly then&#10;gotolabel(&quot;start&quot;,&quot;Sellitems&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32631" y="32749" z="7" rangeX="1" rangeY="1" label="soldjew"/>
            <Waypoint type="Stand" x="32631" y="32745" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32631" y="32745" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;traveltocenter&quot;)&#10;&#10;else&#10;refills = refills + 1&#10;gotolabel(&quot;start&quot;,&quot;Refill&quot;)&#10;&#10;end"/>
        </WaypointSection>
        <WaypointSection name="GoTrainers">
            <Waypoint type="Stand" x="32629" y="32752" z="7" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Stand" x="32618" y="32771" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Ladder" x="32618" y="32771" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32630" y="32777" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32629" y="32785" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32634" y="32794" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32634" y="32794" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;gotolabel(&quot;start&quot;)&#10;else&#10;messagebox(&quot;Char went to offline training because you had not stamina&quot;)&#10;wait(1000)&#10;useitem(16201,ground(32633,32793,7))&#10;setsetting('Cavebot/Enabled', 'no')&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Sellitems">
            <Waypoint type="Stand" x="32629" y="32750" z="7" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Stand" x="32629" y="32749" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32623" y="32740" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32623" y="32740" z="6" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;start&quot;)&#10;else&#10;seljewerly()&#10;end"/>
            <Waypoint type="Stand" x="32623" y="32741" z="6" rangeX="1" rangeY="1" label="soldjew"/>
            <Waypoint type="Stand" x="32629" y="32749" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32631" y="32750" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32631" y="32750" z="7" rangeX="1" rangeY="1" script="if not islocation() then&#10;gotolabel(&quot;soldjew&quot;)&#10;else&#10;gotolabel(&quot;soldjew&quot;,&quot;Leave&quot;)&#10;end"/>
        </WaypointSection>
    </Cavebot>
    <Looting enabled="no">
        <Options>
            <Option range="49"/>
            <Option moveItemsQuickly="yes"/>
            <Option eatFoodFromCorpse="yes"/>
            <Option openNextBP="no"/>
            <Option openBPsAtLogin="no"/>
            <Option valuableBodies="3000"/>
            <Option ultraValuableBodies="1000"/>
            <Option alertOnValuableBodies="no"/>
            <Option openValuableBodiesOnly="no"/>
            <Option openUltraValuableBodiesImmediately="yes"/>
            <Option policy="Smart Looting"/>
            <LootingDestinations>
                <lootingDestination name="lootbp" destination="jewelled backpack"/>
                <lootingDestination name="goldbp" destination="brocade backpack"/>
                <lootingDestination name="mainbp" destination="backpack of holding"/>
                <lootingDestination name="suppbp" destination="zaoan chess box"/>
                <lootingDestination name="extrabp" destination="shopping bag"/>
                <lootingDestination name="maindpbp" destination="blue backpack"/>
                <lootingDestination name="stackdpbp" destination="camouflage backpack"/>
                <lootingDestination name="raredpbp" destination="beach backpack"/>
            </LootingDestinations>
        </Options>
        <LootingProfile name="LootList" isCurrentProfile="yes">
            <LootItem name="platinum coin" id="3035" sellPrice="100" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="gold coin" id="3031" sellPrice="1" weight="0.10" destinationName="goldbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="boots of haste" id="3079" sellPrice="30000" weight="7.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="small sapphire" id="3029" sellPrice="250" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="small emerald" id="3032" sellPrice="250" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="bonebeast trophy" id="10244" sellPrice="6000" weight="5.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="spider silk" id="5879" sellPrice="100" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="green mushroom" id="3732" sellPrice="100" weight="0.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="royal helmet" id="3392" sellPrice="30000" weight="48.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="terra legs" id="812" sellPrice="11000" weight="19.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="spellbook of mind control" id="8074" sellPrice="13000" weight="24.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="terra mantle" id="811" sellPrice="11000" weight="22.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="sacred tree amulet" id="9302" sellPrice="3000" weight="7.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="platinum amulet" id="3055" sellPrice="2500" weight="6.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="snake skin" id="9694" sellPrice="400" weight="1.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="terra amulet" id="814" sellPrice="1500" weight="5.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="noble axe" id="7456" sellPrice="10000" weight="38.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="strand of medusa hair" id="10309" sellPrice="600" weight="2.30" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="lightning headband" id="828" sellPrice="2500" weight="10.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="bony tail" id="10277" sellPrice="210" weight="0.92" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="winged tail" id="10313" sellPrice="800" weight="4.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="mercenary sword" id="7386" sellPrice="12000" weight="68.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="medusa shield" id="3436" sellPrice="9000" weight="58.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="ring of healing" id="3098" sellPrice="100" weight="0.80" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="crown armor" id="3381" sellPrice="12000" weight="99.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="tower shield" id="3428" sellPrice="8000" weight="82.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="warrior helmet" id="3369" sellPrice="5000" weight="68.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="knight legs" id="3371" sellPrice="5000" weight="70.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="stone skin amulet" id="3081" sellPrice="500" weight="7.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="titan axe" id="7413" sellPrice="4000" weight="81.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="hydra head" id="10282" sellPrice="600" weight="13.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="knight armor" id="3370" sellPrice="5000" weight="120.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="charmer's tiara" id="3407" sellPrice="900" weight="22.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="hydra egg" id="4839" sellPrice="500" weight="20.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="hardened bone" id="5925" sellPrice="70" weight="6.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="strong health potion" id="236" sellPrice="0" weight="2.90" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="strong mana potion" id="237" sellPrice="0" weight="2.90" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="old parchment" id="4831" sellPrice="500" weight="2.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="time ring" id="3053" sellPrice="100" weight="0.90" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="golden mug" id="2903" sellPrice="250" weight="4.70" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="ultimate health potion" id="7643" sellPrice="0" weight="3.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="great mana potion" id="238" sellPrice="0" weight="3.10" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
        </LootingProfile>
    </Looting>
    <Supplies>
        <Options>
            <Option defaultBackpack=""/>
            <Option extraCashMin="1000" extraCashMax="2500"/>
            <Option autoSwitchProfiles="no"/>
        </Options>
        <SupplyProfile name="SupplyList" vocation="Paladin" level="266" isCurrentProfile="yes">
            <SupplyItem name="strong mana potion" id="237" buyPrice="80" weight="2.90" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="great spirit potion" id="7642" buyPrice="190" weight="3.10" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="great spirit potion" category=""/>
            <SupplyItem name="crystalline arrow" id="15793" buyPrice="20" weight="0.75" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="crystalline arrow" category=""/>
            <SupplyItem name="prismatic bolt" id="16141" buyPrice="20" weight="0.85" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="prismatic bolt" category=""/>
            <SupplyItem name="great fireball rune" id="3191" buyPrice="45" weight="0.52" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="great fireball rune" category=""/>
        </SupplyProfile>
    </Supplies>
    <Targeting enabled="yes" allowDiagonalMovement="yes" autoSwitchProfiles="no" nonPvPMode="no">
        <TargetingProfile name="TargetList" vocation="Paladin" level="0" targetMustBeShootable="no" targetMustBeReachable="yes" isCurrentProfile="yes">
            <Priorities>
                <Priority health="100"/>
                <Priority proximity="1"/>
                <Priority danger="16"/>
                <Priority random="0"/>
                <Priority lure="0"/>
                <Priority stick="0"/>
            </Priorities>
            <Creatures>
                <Creature name="Medusa" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="yes">
                    <FightingSettings>
                        <Setting index="0" hpFrom="15" hpTo="100" danger="5" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Keep Away" distance="4" attackMode="No Change" firstSpell="Divine Missile" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="15" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Keep Away" distance="3" attackMode="No Change" firstSpell="Ethereal Spear" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Serpent Spawn" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="yes">
                    <FightingSettings>
                        <Setting index="0" hpFrom="15" hpTo="100" danger="4" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Keep Away" distance="4" attackMode="No Change" firstSpell="Divine Missile" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="15" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Keep Away" distance="3" attackMode="No Change" firstSpell="Ethereal Spear" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Hydra" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="yes">
                    <FightingSettings>
                        <Setting index="0" hpFrom="15" hpTo="100" danger="3" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Keep Away" distance="4" attackMode="No Change" firstSpell="Divine Missile" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="15" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Keep Away" distance="2" attackMode="No Change" firstSpell="Ethereal Spear" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Giant Spider" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="2" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Keep Away" distance="4" attackMode="No Change" firstSpell="Divine Missile" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Bonebeast" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="50" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Keep Away" distance="4" attackMode="No Change" firstSpell="Divine Missile" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="50" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Keep Away" distance="3" attackMode="No Change" firstSpell="Ethereal Spear" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Others" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
            </Creatures>
        </TargetingProfile>
    </Targeting>
    <OtherBots>
        <HealingPaths/>
        <TargetingPaths/>
    </OtherBots>
</WindbotSettings>
